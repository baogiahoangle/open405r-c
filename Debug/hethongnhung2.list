
hethongnhung2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a0a0  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000e0c  0800a230  0800a230  0000b230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800b03c  0800b03c  0000d064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800b03c  0800b03c  0000c03c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800b044  0800b044  0000d064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800b044  0800b044  0000c044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800b048  0800b048  0000c048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  0800b04c  0000d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000d064  2**0
                  CONTENTS
 10 .bss          000043e4  20000068  20000068  0000d068  2**3
                  ALLOC
 11 ._user_heap_stack 00000604  2000444c  2000444c  0000d068  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000d064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001a370  00000000  00000000  0000d094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000408d  00000000  00000000  00027404  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001948  00000000  00000000  0002b498  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000138e  00000000  00000000  0002cde0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002503b  00000000  00000000  0002e16e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001ecf1  00000000  00000000  000531a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000e183b  00000000  00000000  00071e9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  001536d5  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00007050  00000000  00000000  00153718  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005a  00000000  00000000  0015a768  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000068 	.word	0x20000068
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800a218 	.word	0x0800a218

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	0800a218 	.word	0x0800a218

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_drsub>:
 8000270:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000274:	e002      	b.n	800027c <__adddf3>
 8000276:	bf00      	nop

08000278 <__aeabi_dsub>:
 8000278:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800027c <__adddf3>:
 800027c:	b530      	push	{r4, r5, lr}
 800027e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000282:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000286:	ea94 0f05 	teq	r4, r5
 800028a:	bf08      	it	eq
 800028c:	ea90 0f02 	teqeq	r0, r2
 8000290:	bf1f      	itttt	ne
 8000292:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000296:	ea55 0c02 	orrsne.w	ip, r5, r2
 800029a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800029e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002a2:	f000 80e2 	beq.w	800046a <__adddf3+0x1ee>
 80002a6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002aa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ae:	bfb8      	it	lt
 80002b0:	426d      	neglt	r5, r5
 80002b2:	dd0c      	ble.n	80002ce <__adddf3+0x52>
 80002b4:	442c      	add	r4, r5
 80002b6:	ea80 0202 	eor.w	r2, r0, r2
 80002ba:	ea81 0303 	eor.w	r3, r1, r3
 80002be:	ea82 0000 	eor.w	r0, r2, r0
 80002c2:	ea83 0101 	eor.w	r1, r3, r1
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	2d36      	cmp	r5, #54	@ 0x36
 80002d0:	bf88      	it	hi
 80002d2:	bd30      	pophi	{r4, r5, pc}
 80002d4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002dc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002e0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002e4:	d002      	beq.n	80002ec <__adddf3+0x70>
 80002e6:	4240      	negs	r0, r0
 80002e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ec:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002f4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002f8:	d002      	beq.n	8000300 <__adddf3+0x84>
 80002fa:	4252      	negs	r2, r2
 80002fc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000300:	ea94 0f05 	teq	r4, r5
 8000304:	f000 80a7 	beq.w	8000456 <__adddf3+0x1da>
 8000308:	f1a4 0401 	sub.w	r4, r4, #1
 800030c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000310:	db0d      	blt.n	800032e <__adddf3+0xb2>
 8000312:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000316:	fa22 f205 	lsr.w	r2, r2, r5
 800031a:	1880      	adds	r0, r0, r2
 800031c:	f141 0100 	adc.w	r1, r1, #0
 8000320:	fa03 f20e 	lsl.w	r2, r3, lr
 8000324:	1880      	adds	r0, r0, r2
 8000326:	fa43 f305 	asr.w	r3, r3, r5
 800032a:	4159      	adcs	r1, r3
 800032c:	e00e      	b.n	800034c <__adddf3+0xd0>
 800032e:	f1a5 0520 	sub.w	r5, r5, #32
 8000332:	f10e 0e20 	add.w	lr, lr, #32
 8000336:	2a01      	cmp	r2, #1
 8000338:	fa03 fc0e 	lsl.w	ip, r3, lr
 800033c:	bf28      	it	cs
 800033e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000342:	fa43 f305 	asr.w	r3, r3, r5
 8000346:	18c0      	adds	r0, r0, r3
 8000348:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800034c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000350:	d507      	bpl.n	8000362 <__adddf3+0xe6>
 8000352:	f04f 0e00 	mov.w	lr, #0
 8000356:	f1dc 0c00 	rsbs	ip, ip, #0
 800035a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800035e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000362:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000366:	d31b      	bcc.n	80003a0 <__adddf3+0x124>
 8000368:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800036c:	d30c      	bcc.n	8000388 <__adddf3+0x10c>
 800036e:	0849      	lsrs	r1, r1, #1
 8000370:	ea5f 0030 	movs.w	r0, r0, rrx
 8000374:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000378:	f104 0401 	add.w	r4, r4, #1
 800037c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000380:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000384:	f080 809a 	bcs.w	80004bc <__adddf3+0x240>
 8000388:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800038c:	bf08      	it	eq
 800038e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000392:	f150 0000 	adcs.w	r0, r0, #0
 8000396:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800039a:	ea41 0105 	orr.w	r1, r1, r5
 800039e:	bd30      	pop	{r4, r5, pc}
 80003a0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003a4:	4140      	adcs	r0, r0
 80003a6:	eb41 0101 	adc.w	r1, r1, r1
 80003aa:	3c01      	subs	r4, #1
 80003ac:	bf28      	it	cs
 80003ae:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003b2:	d2e9      	bcs.n	8000388 <__adddf3+0x10c>
 80003b4:	f091 0f00 	teq	r1, #0
 80003b8:	bf04      	itt	eq
 80003ba:	4601      	moveq	r1, r0
 80003bc:	2000      	moveq	r0, #0
 80003be:	fab1 f381 	clz	r3, r1
 80003c2:	bf08      	it	eq
 80003c4:	3320      	addeq	r3, #32
 80003c6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ca:	f1b3 0220 	subs.w	r2, r3, #32
 80003ce:	da0c      	bge.n	80003ea <__adddf3+0x16e>
 80003d0:	320c      	adds	r2, #12
 80003d2:	dd08      	ble.n	80003e6 <__adddf3+0x16a>
 80003d4:	f102 0c14 	add.w	ip, r2, #20
 80003d8:	f1c2 020c 	rsb	r2, r2, #12
 80003dc:	fa01 f00c 	lsl.w	r0, r1, ip
 80003e0:	fa21 f102 	lsr.w	r1, r1, r2
 80003e4:	e00c      	b.n	8000400 <__adddf3+0x184>
 80003e6:	f102 0214 	add.w	r2, r2, #20
 80003ea:	bfd8      	it	le
 80003ec:	f1c2 0c20 	rsble	ip, r2, #32
 80003f0:	fa01 f102 	lsl.w	r1, r1, r2
 80003f4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003f8:	bfdc      	itt	le
 80003fa:	ea41 010c 	orrle.w	r1, r1, ip
 80003fe:	4090      	lslle	r0, r2
 8000400:	1ae4      	subs	r4, r4, r3
 8000402:	bfa2      	ittt	ge
 8000404:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000408:	4329      	orrge	r1, r5
 800040a:	bd30      	popge	{r4, r5, pc}
 800040c:	ea6f 0404 	mvn.w	r4, r4
 8000410:	3c1f      	subs	r4, #31
 8000412:	da1c      	bge.n	800044e <__adddf3+0x1d2>
 8000414:	340c      	adds	r4, #12
 8000416:	dc0e      	bgt.n	8000436 <__adddf3+0x1ba>
 8000418:	f104 0414 	add.w	r4, r4, #20
 800041c:	f1c4 0220 	rsb	r2, r4, #32
 8000420:	fa20 f004 	lsr.w	r0, r0, r4
 8000424:	fa01 f302 	lsl.w	r3, r1, r2
 8000428:	ea40 0003 	orr.w	r0, r0, r3
 800042c:	fa21 f304 	lsr.w	r3, r1, r4
 8000430:	ea45 0103 	orr.w	r1, r5, r3
 8000434:	bd30      	pop	{r4, r5, pc}
 8000436:	f1c4 040c 	rsb	r4, r4, #12
 800043a:	f1c4 0220 	rsb	r2, r4, #32
 800043e:	fa20 f002 	lsr.w	r0, r0, r2
 8000442:	fa01 f304 	lsl.w	r3, r1, r4
 8000446:	ea40 0003 	orr.w	r0, r0, r3
 800044a:	4629      	mov	r1, r5
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	fa21 f004 	lsr.w	r0, r1, r4
 8000452:	4629      	mov	r1, r5
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f094 0f00 	teq	r4, #0
 800045a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800045e:	bf06      	itte	eq
 8000460:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000464:	3401      	addeq	r4, #1
 8000466:	3d01      	subne	r5, #1
 8000468:	e74e      	b.n	8000308 <__adddf3+0x8c>
 800046a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800046e:	bf18      	it	ne
 8000470:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000474:	d029      	beq.n	80004ca <__adddf3+0x24e>
 8000476:	ea94 0f05 	teq	r4, r5
 800047a:	bf08      	it	eq
 800047c:	ea90 0f02 	teqeq	r0, r2
 8000480:	d005      	beq.n	800048e <__adddf3+0x212>
 8000482:	ea54 0c00 	orrs.w	ip, r4, r0
 8000486:	bf04      	itt	eq
 8000488:	4619      	moveq	r1, r3
 800048a:	4610      	moveq	r0, r2
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	ea91 0f03 	teq	r1, r3
 8000492:	bf1e      	ittt	ne
 8000494:	2100      	movne	r1, #0
 8000496:	2000      	movne	r0, #0
 8000498:	bd30      	popne	{r4, r5, pc}
 800049a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800049e:	d105      	bne.n	80004ac <__adddf3+0x230>
 80004a0:	0040      	lsls	r0, r0, #1
 80004a2:	4149      	adcs	r1, r1
 80004a4:	bf28      	it	cs
 80004a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004aa:	bd30      	pop	{r4, r5, pc}
 80004ac:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004b0:	bf3c      	itt	cc
 80004b2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004b6:	bd30      	popcc	{r4, r5, pc}
 80004b8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004bc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004c4:	f04f 0000 	mov.w	r0, #0
 80004c8:	bd30      	pop	{r4, r5, pc}
 80004ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ce:	bf1a      	itte	ne
 80004d0:	4619      	movne	r1, r3
 80004d2:	4610      	movne	r0, r2
 80004d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004d8:	bf1c      	itt	ne
 80004da:	460b      	movne	r3, r1
 80004dc:	4602      	movne	r2, r0
 80004de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004e2:	bf06      	itte	eq
 80004e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004e8:	ea91 0f03 	teqeq	r1, r3
 80004ec:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004f0:	bd30      	pop	{r4, r5, pc}
 80004f2:	bf00      	nop

080004f4 <__aeabi_ui2d>:
 80004f4:	f090 0f00 	teq	r0, #0
 80004f8:	bf04      	itt	eq
 80004fa:	2100      	moveq	r1, #0
 80004fc:	4770      	bxeq	lr
 80004fe:	b530      	push	{r4, r5, lr}
 8000500:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000504:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000508:	f04f 0500 	mov.w	r5, #0
 800050c:	f04f 0100 	mov.w	r1, #0
 8000510:	e750      	b.n	80003b4 <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_i2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800052c:	bf48      	it	mi
 800052e:	4240      	negmi	r0, r0
 8000530:	f04f 0100 	mov.w	r1, #0
 8000534:	e73e      	b.n	80003b4 <__adddf3+0x138>
 8000536:	bf00      	nop

08000538 <__aeabi_f2d>:
 8000538:	0042      	lsls	r2, r0, #1
 800053a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800053e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000542:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000546:	bf1f      	itttt	ne
 8000548:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800054c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000550:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000554:	4770      	bxne	lr
 8000556:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800055a:	bf08      	it	eq
 800055c:	4770      	bxeq	lr
 800055e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000562:	bf04      	itt	eq
 8000564:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000568:	4770      	bxeq	lr
 800056a:	b530      	push	{r4, r5, lr}
 800056c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000570:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000574:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000578:	e71c      	b.n	80003b4 <__adddf3+0x138>
 800057a:	bf00      	nop

0800057c <__aeabi_ul2d>:
 800057c:	ea50 0201 	orrs.w	r2, r0, r1
 8000580:	bf08      	it	eq
 8000582:	4770      	bxeq	lr
 8000584:	b530      	push	{r4, r5, lr}
 8000586:	f04f 0500 	mov.w	r5, #0
 800058a:	e00a      	b.n	80005a2 <__aeabi_l2d+0x16>

0800058c <__aeabi_l2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800059a:	d502      	bpl.n	80005a2 <__aeabi_l2d+0x16>
 800059c:	4240      	negs	r0, r0
 800059e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005a2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005a6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005aa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ae:	f43f aed8 	beq.w	8000362 <__adddf3+0xe6>
 80005b2:	f04f 0203 	mov.w	r2, #3
 80005b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ba:	bf18      	it	ne
 80005bc:	3203      	addne	r2, #3
 80005be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005c2:	bf18      	it	ne
 80005c4:	3203      	addne	r2, #3
 80005c6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ca:	f1c2 0320 	rsb	r3, r2, #32
 80005ce:	fa00 fc03 	lsl.w	ip, r0, r3
 80005d2:	fa20 f002 	lsr.w	r0, r0, r2
 80005d6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005da:	ea40 000e 	orr.w	r0, r0, lr
 80005de:	fa21 f102 	lsr.w	r1, r1, r2
 80005e2:	4414      	add	r4, r2
 80005e4:	e6bd      	b.n	8000362 <__adddf3+0xe6>
 80005e6:	bf00      	nop

080005e8 <__aeabi_dmul>:
 80005e8:	b570      	push	{r4, r5, r6, lr}
 80005ea:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005ee:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005f6:	bf1d      	ittte	ne
 80005f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005fc:	ea94 0f0c 	teqne	r4, ip
 8000600:	ea95 0f0c 	teqne	r5, ip
 8000604:	f000 f8de 	bleq	80007c4 <__aeabi_dmul+0x1dc>
 8000608:	442c      	add	r4, r5
 800060a:	ea81 0603 	eor.w	r6, r1, r3
 800060e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000612:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000616:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800061a:	bf18      	it	ne
 800061c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000620:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000624:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000628:	d038      	beq.n	800069c <__aeabi_dmul+0xb4>
 800062a:	fba0 ce02 	umull	ip, lr, r0, r2
 800062e:	f04f 0500 	mov.w	r5, #0
 8000632:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000636:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800063a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800063e:	f04f 0600 	mov.w	r6, #0
 8000642:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000646:	f09c 0f00 	teq	ip, #0
 800064a:	bf18      	it	ne
 800064c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000650:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000654:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000658:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800065c:	d204      	bcs.n	8000668 <__aeabi_dmul+0x80>
 800065e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000662:	416d      	adcs	r5, r5
 8000664:	eb46 0606 	adc.w	r6, r6, r6
 8000668:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800066c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000670:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000674:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000678:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800067c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000680:	bf88      	it	hi
 8000682:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000686:	d81e      	bhi.n	80006c6 <__aeabi_dmul+0xde>
 8000688:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800068c:	bf08      	it	eq
 800068e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000692:	f150 0000 	adcs.w	r0, r0, #0
 8000696:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800069a:	bd70      	pop	{r4, r5, r6, pc}
 800069c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006a0:	ea46 0101 	orr.w	r1, r6, r1
 80006a4:	ea40 0002 	orr.w	r0, r0, r2
 80006a8:	ea81 0103 	eor.w	r1, r1, r3
 80006ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006b0:	bfc2      	ittt	gt
 80006b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	popgt	{r4, r5, r6, pc}
 80006bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006c0:	f04f 0e00 	mov.w	lr, #0
 80006c4:	3c01      	subs	r4, #1
 80006c6:	f300 80ab 	bgt.w	8000820 <__aeabi_dmul+0x238>
 80006ca:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ce:	bfde      	ittt	le
 80006d0:	2000      	movle	r0, #0
 80006d2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006d6:	bd70      	pople	{r4, r5, r6, pc}
 80006d8:	f1c4 0400 	rsb	r4, r4, #0
 80006dc:	3c20      	subs	r4, #32
 80006de:	da35      	bge.n	800074c <__aeabi_dmul+0x164>
 80006e0:	340c      	adds	r4, #12
 80006e2:	dc1b      	bgt.n	800071c <__aeabi_dmul+0x134>
 80006e4:	f104 0414 	add.w	r4, r4, #20
 80006e8:	f1c4 0520 	rsb	r5, r4, #32
 80006ec:	fa00 f305 	lsl.w	r3, r0, r5
 80006f0:	fa20 f004 	lsr.w	r0, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea40 0002 	orr.w	r0, r0, r2
 80006fc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000700:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000708:	fa21 f604 	lsr.w	r6, r1, r4
 800070c:	eb42 0106 	adc.w	r1, r2, r6
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f1c4 040c 	rsb	r4, r4, #12
 8000720:	f1c4 0520 	rsb	r5, r4, #32
 8000724:	fa00 f304 	lsl.w	r3, r0, r4
 8000728:	fa20 f005 	lsr.w	r0, r0, r5
 800072c:	fa01 f204 	lsl.w	r2, r1, r4
 8000730:	ea40 0002 	orr.w	r0, r0, r2
 8000734:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000738:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800073c:	f141 0100 	adc.w	r1, r1, #0
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 0520 	rsb	r5, r4, #32
 8000750:	fa00 f205 	lsl.w	r2, r0, r5
 8000754:	ea4e 0e02 	orr.w	lr, lr, r2
 8000758:	fa20 f304 	lsr.w	r3, r0, r4
 800075c:	fa01 f205 	lsl.w	r2, r1, r5
 8000760:	ea43 0302 	orr.w	r3, r3, r2
 8000764:	fa21 f004 	lsr.w	r0, r1, r4
 8000768:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800076c:	fa21 f204 	lsr.w	r2, r1, r4
 8000770:	ea20 0002 	bic.w	r0, r0, r2
 8000774:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000778:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800077c:	bf08      	it	eq
 800077e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000782:	bd70      	pop	{r4, r5, r6, pc}
 8000784:	f094 0f00 	teq	r4, #0
 8000788:	d10f      	bne.n	80007aa <__aeabi_dmul+0x1c2>
 800078a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800078e:	0040      	lsls	r0, r0, #1
 8000790:	eb41 0101 	adc.w	r1, r1, r1
 8000794:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000798:	bf08      	it	eq
 800079a:	3c01      	subeq	r4, #1
 800079c:	d0f7      	beq.n	800078e <__aeabi_dmul+0x1a6>
 800079e:	ea41 0106 	orr.w	r1, r1, r6
 80007a2:	f095 0f00 	teq	r5, #0
 80007a6:	bf18      	it	ne
 80007a8:	4770      	bxne	lr
 80007aa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ae:	0052      	lsls	r2, r2, #1
 80007b0:	eb43 0303 	adc.w	r3, r3, r3
 80007b4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3d01      	subeq	r5, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1c6>
 80007be:	ea43 0306 	orr.w	r3, r3, r6
 80007c2:	4770      	bx	lr
 80007c4:	ea94 0f0c 	teq	r4, ip
 80007c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007cc:	bf18      	it	ne
 80007ce:	ea95 0f0c 	teqne	r5, ip
 80007d2:	d00c      	beq.n	80007ee <__aeabi_dmul+0x206>
 80007d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007d8:	bf18      	it	ne
 80007da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007de:	d1d1      	bne.n	8000784 <__aeabi_dmul+0x19c>
 80007e0:	ea81 0103 	eor.w	r1, r1, r3
 80007e4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e8:	f04f 0000 	mov.w	r0, #0
 80007ec:	bd70      	pop	{r4, r5, r6, pc}
 80007ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f2:	bf06      	itte	eq
 80007f4:	4610      	moveq	r0, r2
 80007f6:	4619      	moveq	r1, r3
 80007f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fc:	d019      	beq.n	8000832 <__aeabi_dmul+0x24a>
 80007fe:	ea94 0f0c 	teq	r4, ip
 8000802:	d102      	bne.n	800080a <__aeabi_dmul+0x222>
 8000804:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000808:	d113      	bne.n	8000832 <__aeabi_dmul+0x24a>
 800080a:	ea95 0f0c 	teq	r5, ip
 800080e:	d105      	bne.n	800081c <__aeabi_dmul+0x234>
 8000810:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000814:	bf1c      	itt	ne
 8000816:	4610      	movne	r0, r2
 8000818:	4619      	movne	r1, r3
 800081a:	d10a      	bne.n	8000832 <__aeabi_dmul+0x24a>
 800081c:	ea81 0103 	eor.w	r1, r1, r3
 8000820:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000824:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000828:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800082c:	f04f 0000 	mov.w	r0, #0
 8000830:	bd70      	pop	{r4, r5, r6, pc}
 8000832:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000836:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800083a:	bd70      	pop	{r4, r5, r6, pc}

0800083c <__aeabi_ddiv>:
 800083c:	b570      	push	{r4, r5, r6, lr}
 800083e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000842:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000846:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800084a:	bf1d      	ittte	ne
 800084c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000850:	ea94 0f0c 	teqne	r4, ip
 8000854:	ea95 0f0c 	teqne	r5, ip
 8000858:	f000 f8a7 	bleq	80009aa <__aeabi_ddiv+0x16e>
 800085c:	eba4 0405 	sub.w	r4, r4, r5
 8000860:	ea81 0e03 	eor.w	lr, r1, r3
 8000864:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000868:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800086c:	f000 8088 	beq.w	8000980 <__aeabi_ddiv+0x144>
 8000870:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000874:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000878:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800087c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000880:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000884:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000888:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800088c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000890:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000894:	429d      	cmp	r5, r3
 8000896:	bf08      	it	eq
 8000898:	4296      	cmpeq	r6, r2
 800089a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800089e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008a2:	d202      	bcs.n	80008aa <__aeabi_ddiv+0x6e>
 80008a4:	085b      	lsrs	r3, r3, #1
 80008a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008aa:	1ab6      	subs	r6, r6, r2
 80008ac:	eb65 0503 	sbc.w	r5, r5, r3
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ba:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008be:	ebb6 0e02 	subs.w	lr, r6, r2
 80008c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008c6:	bf22      	ittt	cs
 80008c8:	1ab6      	subcs	r6, r6, r2
 80008ca:	4675      	movcs	r5, lr
 80008cc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008de:	bf22      	ittt	cs
 80008e0:	1ab6      	subcs	r6, r6, r2
 80008e2:	4675      	movcs	r5, lr
 80008e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000918:	ea55 0e06 	orrs.w	lr, r5, r6
 800091c:	d018      	beq.n	8000950 <__aeabi_ddiv+0x114>
 800091e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000922:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000926:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800092a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800092e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000932:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000936:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800093a:	d1c0      	bne.n	80008be <__aeabi_ddiv+0x82>
 800093c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000940:	d10b      	bne.n	800095a <__aeabi_ddiv+0x11e>
 8000942:	ea41 0100 	orr.w	r1, r1, r0
 8000946:	f04f 0000 	mov.w	r0, #0
 800094a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800094e:	e7b6      	b.n	80008be <__aeabi_ddiv+0x82>
 8000950:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000954:	bf04      	itt	eq
 8000956:	4301      	orreq	r1, r0
 8000958:	2000      	moveq	r0, #0
 800095a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800095e:	bf88      	it	hi
 8000960:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000964:	f63f aeaf 	bhi.w	80006c6 <__aeabi_dmul+0xde>
 8000968:	ebb5 0c03 	subs.w	ip, r5, r3
 800096c:	bf04      	itt	eq
 800096e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000972:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000976:	f150 0000 	adcs.w	r0, r0, #0
 800097a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000984:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000988:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800098c:	bfc2      	ittt	gt
 800098e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000992:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000996:	bd70      	popgt	{r4, r5, r6, pc}
 8000998:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800099c:	f04f 0e00 	mov.w	lr, #0
 80009a0:	3c01      	subs	r4, #1
 80009a2:	e690      	b.n	80006c6 <__aeabi_dmul+0xde>
 80009a4:	ea45 0e06 	orr.w	lr, r5, r6
 80009a8:	e68d      	b.n	80006c6 <__aeabi_dmul+0xde>
 80009aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ae:	ea94 0f0c 	teq	r4, ip
 80009b2:	bf08      	it	eq
 80009b4:	ea95 0f0c 	teqeq	r5, ip
 80009b8:	f43f af3b 	beq.w	8000832 <__aeabi_dmul+0x24a>
 80009bc:	ea94 0f0c 	teq	r4, ip
 80009c0:	d10a      	bne.n	80009d8 <__aeabi_ddiv+0x19c>
 80009c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009c6:	f47f af34 	bne.w	8000832 <__aeabi_dmul+0x24a>
 80009ca:	ea95 0f0c 	teq	r5, ip
 80009ce:	f47f af25 	bne.w	800081c <__aeabi_dmul+0x234>
 80009d2:	4610      	mov	r0, r2
 80009d4:	4619      	mov	r1, r3
 80009d6:	e72c      	b.n	8000832 <__aeabi_dmul+0x24a>
 80009d8:	ea95 0f0c 	teq	r5, ip
 80009dc:	d106      	bne.n	80009ec <__aeabi_ddiv+0x1b0>
 80009de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009e2:	f43f aefd 	beq.w	80007e0 <__aeabi_dmul+0x1f8>
 80009e6:	4610      	mov	r0, r2
 80009e8:	4619      	mov	r1, r3
 80009ea:	e722      	b.n	8000832 <__aeabi_dmul+0x24a>
 80009ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009f6:	f47f aec5 	bne.w	8000784 <__aeabi_dmul+0x19c>
 80009fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009fe:	f47f af0d 	bne.w	800081c <__aeabi_dmul+0x234>
 8000a02:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a06:	f47f aeeb 	bne.w	80007e0 <__aeabi_dmul+0x1f8>
 8000a0a:	e712      	b.n	8000832 <__aeabi_dmul+0x24a>

08000a0c <__aeabi_d2uiz>:
 8000a0c:	004a      	lsls	r2, r1, #1
 8000a0e:	d211      	bcs.n	8000a34 <__aeabi_d2uiz+0x28>
 8000a10:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a14:	d211      	bcs.n	8000a3a <__aeabi_d2uiz+0x2e>
 8000a16:	d50d      	bpl.n	8000a34 <__aeabi_d2uiz+0x28>
 8000a18:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a1c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a20:	d40e      	bmi.n	8000a40 <__aeabi_d2uiz+0x34>
 8000a22:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a26:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a2a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a32:	4770      	bx	lr
 8000a34:	f04f 0000 	mov.w	r0, #0
 8000a38:	4770      	bx	lr
 8000a3a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a3e:	d102      	bne.n	8000a46 <__aeabi_d2uiz+0x3a>
 8000a40:	f04f 30ff 	mov.w	r0, #4294967295
 8000a44:	4770      	bx	lr
 8000a46:	f04f 0000 	mov.w	r0, #0
 8000a4a:	4770      	bx	lr

08000a4c <__aeabi_uldivmod>:
 8000a4c:	b953      	cbnz	r3, 8000a64 <__aeabi_uldivmod+0x18>
 8000a4e:	b94a      	cbnz	r2, 8000a64 <__aeabi_uldivmod+0x18>
 8000a50:	2900      	cmp	r1, #0
 8000a52:	bf08      	it	eq
 8000a54:	2800      	cmpeq	r0, #0
 8000a56:	bf1c      	itt	ne
 8000a58:	f04f 31ff 	movne.w	r1, #4294967295
 8000a5c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a60:	f000 b988 	b.w	8000d74 <__aeabi_idiv0>
 8000a64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a6c:	f000 f806 	bl	8000a7c <__udivmoddi4>
 8000a70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a78:	b004      	add	sp, #16
 8000a7a:	4770      	bx	lr

08000a7c <__udivmoddi4>:
 8000a7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a80:	9d08      	ldr	r5, [sp, #32]
 8000a82:	468e      	mov	lr, r1
 8000a84:	4604      	mov	r4, r0
 8000a86:	4688      	mov	r8, r1
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d14a      	bne.n	8000b22 <__udivmoddi4+0xa6>
 8000a8c:	428a      	cmp	r2, r1
 8000a8e:	4617      	mov	r7, r2
 8000a90:	d962      	bls.n	8000b58 <__udivmoddi4+0xdc>
 8000a92:	fab2 f682 	clz	r6, r2
 8000a96:	b14e      	cbz	r6, 8000aac <__udivmoddi4+0x30>
 8000a98:	f1c6 0320 	rsb	r3, r6, #32
 8000a9c:	fa01 f806 	lsl.w	r8, r1, r6
 8000aa0:	fa20 f303 	lsr.w	r3, r0, r3
 8000aa4:	40b7      	lsls	r7, r6
 8000aa6:	ea43 0808 	orr.w	r8, r3, r8
 8000aaa:	40b4      	lsls	r4, r6
 8000aac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ab0:	fa1f fc87 	uxth.w	ip, r7
 8000ab4:	fbb8 f1fe 	udiv	r1, r8, lr
 8000ab8:	0c23      	lsrs	r3, r4, #16
 8000aba:	fb0e 8811 	mls	r8, lr, r1, r8
 8000abe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000ac2:	fb01 f20c 	mul.w	r2, r1, ip
 8000ac6:	429a      	cmp	r2, r3
 8000ac8:	d909      	bls.n	8000ade <__udivmoddi4+0x62>
 8000aca:	18fb      	adds	r3, r7, r3
 8000acc:	f101 30ff 	add.w	r0, r1, #4294967295
 8000ad0:	f080 80ea 	bcs.w	8000ca8 <__udivmoddi4+0x22c>
 8000ad4:	429a      	cmp	r2, r3
 8000ad6:	f240 80e7 	bls.w	8000ca8 <__udivmoddi4+0x22c>
 8000ada:	3902      	subs	r1, #2
 8000adc:	443b      	add	r3, r7
 8000ade:	1a9a      	subs	r2, r3, r2
 8000ae0:	b2a3      	uxth	r3, r4
 8000ae2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000ae6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000aea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000aee:	fb00 fc0c 	mul.w	ip, r0, ip
 8000af2:	459c      	cmp	ip, r3
 8000af4:	d909      	bls.n	8000b0a <__udivmoddi4+0x8e>
 8000af6:	18fb      	adds	r3, r7, r3
 8000af8:	f100 32ff 	add.w	r2, r0, #4294967295
 8000afc:	f080 80d6 	bcs.w	8000cac <__udivmoddi4+0x230>
 8000b00:	459c      	cmp	ip, r3
 8000b02:	f240 80d3 	bls.w	8000cac <__udivmoddi4+0x230>
 8000b06:	443b      	add	r3, r7
 8000b08:	3802      	subs	r0, #2
 8000b0a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000b0e:	eba3 030c 	sub.w	r3, r3, ip
 8000b12:	2100      	movs	r1, #0
 8000b14:	b11d      	cbz	r5, 8000b1e <__udivmoddi4+0xa2>
 8000b16:	40f3      	lsrs	r3, r6
 8000b18:	2200      	movs	r2, #0
 8000b1a:	e9c5 3200 	strd	r3, r2, [r5]
 8000b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b22:	428b      	cmp	r3, r1
 8000b24:	d905      	bls.n	8000b32 <__udivmoddi4+0xb6>
 8000b26:	b10d      	cbz	r5, 8000b2c <__udivmoddi4+0xb0>
 8000b28:	e9c5 0100 	strd	r0, r1, [r5]
 8000b2c:	2100      	movs	r1, #0
 8000b2e:	4608      	mov	r0, r1
 8000b30:	e7f5      	b.n	8000b1e <__udivmoddi4+0xa2>
 8000b32:	fab3 f183 	clz	r1, r3
 8000b36:	2900      	cmp	r1, #0
 8000b38:	d146      	bne.n	8000bc8 <__udivmoddi4+0x14c>
 8000b3a:	4573      	cmp	r3, lr
 8000b3c:	d302      	bcc.n	8000b44 <__udivmoddi4+0xc8>
 8000b3e:	4282      	cmp	r2, r0
 8000b40:	f200 8105 	bhi.w	8000d4e <__udivmoddi4+0x2d2>
 8000b44:	1a84      	subs	r4, r0, r2
 8000b46:	eb6e 0203 	sbc.w	r2, lr, r3
 8000b4a:	2001      	movs	r0, #1
 8000b4c:	4690      	mov	r8, r2
 8000b4e:	2d00      	cmp	r5, #0
 8000b50:	d0e5      	beq.n	8000b1e <__udivmoddi4+0xa2>
 8000b52:	e9c5 4800 	strd	r4, r8, [r5]
 8000b56:	e7e2      	b.n	8000b1e <__udivmoddi4+0xa2>
 8000b58:	2a00      	cmp	r2, #0
 8000b5a:	f000 8090 	beq.w	8000c7e <__udivmoddi4+0x202>
 8000b5e:	fab2 f682 	clz	r6, r2
 8000b62:	2e00      	cmp	r6, #0
 8000b64:	f040 80a4 	bne.w	8000cb0 <__udivmoddi4+0x234>
 8000b68:	1a8a      	subs	r2, r1, r2
 8000b6a:	0c03      	lsrs	r3, r0, #16
 8000b6c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000b70:	b280      	uxth	r0, r0
 8000b72:	b2bc      	uxth	r4, r7
 8000b74:	2101      	movs	r1, #1
 8000b76:	fbb2 fcfe 	udiv	ip, r2, lr
 8000b7a:	fb0e 221c 	mls	r2, lr, ip, r2
 8000b7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b82:	fb04 f20c 	mul.w	r2, r4, ip
 8000b86:	429a      	cmp	r2, r3
 8000b88:	d907      	bls.n	8000b9a <__udivmoddi4+0x11e>
 8000b8a:	18fb      	adds	r3, r7, r3
 8000b8c:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000b90:	d202      	bcs.n	8000b98 <__udivmoddi4+0x11c>
 8000b92:	429a      	cmp	r2, r3
 8000b94:	f200 80e0 	bhi.w	8000d58 <__udivmoddi4+0x2dc>
 8000b98:	46c4      	mov	ip, r8
 8000b9a:	1a9b      	subs	r3, r3, r2
 8000b9c:	fbb3 f2fe 	udiv	r2, r3, lr
 8000ba0:	fb0e 3312 	mls	r3, lr, r2, r3
 8000ba4:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000ba8:	fb02 f404 	mul.w	r4, r2, r4
 8000bac:	429c      	cmp	r4, r3
 8000bae:	d907      	bls.n	8000bc0 <__udivmoddi4+0x144>
 8000bb0:	18fb      	adds	r3, r7, r3
 8000bb2:	f102 30ff 	add.w	r0, r2, #4294967295
 8000bb6:	d202      	bcs.n	8000bbe <__udivmoddi4+0x142>
 8000bb8:	429c      	cmp	r4, r3
 8000bba:	f200 80ca 	bhi.w	8000d52 <__udivmoddi4+0x2d6>
 8000bbe:	4602      	mov	r2, r0
 8000bc0:	1b1b      	subs	r3, r3, r4
 8000bc2:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000bc6:	e7a5      	b.n	8000b14 <__udivmoddi4+0x98>
 8000bc8:	f1c1 0620 	rsb	r6, r1, #32
 8000bcc:	408b      	lsls	r3, r1
 8000bce:	fa22 f706 	lsr.w	r7, r2, r6
 8000bd2:	431f      	orrs	r7, r3
 8000bd4:	fa0e f401 	lsl.w	r4, lr, r1
 8000bd8:	fa20 f306 	lsr.w	r3, r0, r6
 8000bdc:	fa2e fe06 	lsr.w	lr, lr, r6
 8000be0:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000be4:	4323      	orrs	r3, r4
 8000be6:	fa00 f801 	lsl.w	r8, r0, r1
 8000bea:	fa1f fc87 	uxth.w	ip, r7
 8000bee:	fbbe f0f9 	udiv	r0, lr, r9
 8000bf2:	0c1c      	lsrs	r4, r3, #16
 8000bf4:	fb09 ee10 	mls	lr, r9, r0, lr
 8000bf8:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000bfc:	fb00 fe0c 	mul.w	lr, r0, ip
 8000c00:	45a6      	cmp	lr, r4
 8000c02:	fa02 f201 	lsl.w	r2, r2, r1
 8000c06:	d909      	bls.n	8000c1c <__udivmoddi4+0x1a0>
 8000c08:	193c      	adds	r4, r7, r4
 8000c0a:	f100 3aff 	add.w	sl, r0, #4294967295
 8000c0e:	f080 809c 	bcs.w	8000d4a <__udivmoddi4+0x2ce>
 8000c12:	45a6      	cmp	lr, r4
 8000c14:	f240 8099 	bls.w	8000d4a <__udivmoddi4+0x2ce>
 8000c18:	3802      	subs	r0, #2
 8000c1a:	443c      	add	r4, r7
 8000c1c:	eba4 040e 	sub.w	r4, r4, lr
 8000c20:	fa1f fe83 	uxth.w	lr, r3
 8000c24:	fbb4 f3f9 	udiv	r3, r4, r9
 8000c28:	fb09 4413 	mls	r4, r9, r3, r4
 8000c2c:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000c30:	fb03 fc0c 	mul.w	ip, r3, ip
 8000c34:	45a4      	cmp	ip, r4
 8000c36:	d908      	bls.n	8000c4a <__udivmoddi4+0x1ce>
 8000c38:	193c      	adds	r4, r7, r4
 8000c3a:	f103 3eff 	add.w	lr, r3, #4294967295
 8000c3e:	f080 8082 	bcs.w	8000d46 <__udivmoddi4+0x2ca>
 8000c42:	45a4      	cmp	ip, r4
 8000c44:	d97f      	bls.n	8000d46 <__udivmoddi4+0x2ca>
 8000c46:	3b02      	subs	r3, #2
 8000c48:	443c      	add	r4, r7
 8000c4a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000c4e:	eba4 040c 	sub.w	r4, r4, ip
 8000c52:	fba0 ec02 	umull	lr, ip, r0, r2
 8000c56:	4564      	cmp	r4, ip
 8000c58:	4673      	mov	r3, lr
 8000c5a:	46e1      	mov	r9, ip
 8000c5c:	d362      	bcc.n	8000d24 <__udivmoddi4+0x2a8>
 8000c5e:	d05f      	beq.n	8000d20 <__udivmoddi4+0x2a4>
 8000c60:	b15d      	cbz	r5, 8000c7a <__udivmoddi4+0x1fe>
 8000c62:	ebb8 0203 	subs.w	r2, r8, r3
 8000c66:	eb64 0409 	sbc.w	r4, r4, r9
 8000c6a:	fa04 f606 	lsl.w	r6, r4, r6
 8000c6e:	fa22 f301 	lsr.w	r3, r2, r1
 8000c72:	431e      	orrs	r6, r3
 8000c74:	40cc      	lsrs	r4, r1
 8000c76:	e9c5 6400 	strd	r6, r4, [r5]
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	e74f      	b.n	8000b1e <__udivmoddi4+0xa2>
 8000c7e:	fbb1 fcf2 	udiv	ip, r1, r2
 8000c82:	0c01      	lsrs	r1, r0, #16
 8000c84:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000c88:	b280      	uxth	r0, r0
 8000c8a:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000c8e:	463b      	mov	r3, r7
 8000c90:	4638      	mov	r0, r7
 8000c92:	463c      	mov	r4, r7
 8000c94:	46b8      	mov	r8, r7
 8000c96:	46be      	mov	lr, r7
 8000c98:	2620      	movs	r6, #32
 8000c9a:	fbb1 f1f7 	udiv	r1, r1, r7
 8000c9e:	eba2 0208 	sub.w	r2, r2, r8
 8000ca2:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ca6:	e766      	b.n	8000b76 <__udivmoddi4+0xfa>
 8000ca8:	4601      	mov	r1, r0
 8000caa:	e718      	b.n	8000ade <__udivmoddi4+0x62>
 8000cac:	4610      	mov	r0, r2
 8000cae:	e72c      	b.n	8000b0a <__udivmoddi4+0x8e>
 8000cb0:	f1c6 0220 	rsb	r2, r6, #32
 8000cb4:	fa2e f302 	lsr.w	r3, lr, r2
 8000cb8:	40b7      	lsls	r7, r6
 8000cba:	40b1      	lsls	r1, r6
 8000cbc:	fa20 f202 	lsr.w	r2, r0, r2
 8000cc0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cc4:	430a      	orrs	r2, r1
 8000cc6:	fbb3 f8fe 	udiv	r8, r3, lr
 8000cca:	b2bc      	uxth	r4, r7
 8000ccc:	fb0e 3318 	mls	r3, lr, r8, r3
 8000cd0:	0c11      	lsrs	r1, r2, #16
 8000cd2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000cd6:	fb08 f904 	mul.w	r9, r8, r4
 8000cda:	40b0      	lsls	r0, r6
 8000cdc:	4589      	cmp	r9, r1
 8000cde:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000ce2:	b280      	uxth	r0, r0
 8000ce4:	d93e      	bls.n	8000d64 <__udivmoddi4+0x2e8>
 8000ce6:	1879      	adds	r1, r7, r1
 8000ce8:	f108 3cff 	add.w	ip, r8, #4294967295
 8000cec:	d201      	bcs.n	8000cf2 <__udivmoddi4+0x276>
 8000cee:	4589      	cmp	r9, r1
 8000cf0:	d81f      	bhi.n	8000d32 <__udivmoddi4+0x2b6>
 8000cf2:	eba1 0109 	sub.w	r1, r1, r9
 8000cf6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000cfa:	fb09 f804 	mul.w	r8, r9, r4
 8000cfe:	fb0e 1119 	mls	r1, lr, r9, r1
 8000d02:	b292      	uxth	r2, r2
 8000d04:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d08:	4542      	cmp	r2, r8
 8000d0a:	d229      	bcs.n	8000d60 <__udivmoddi4+0x2e4>
 8000d0c:	18ba      	adds	r2, r7, r2
 8000d0e:	f109 31ff 	add.w	r1, r9, #4294967295
 8000d12:	d2c4      	bcs.n	8000c9e <__udivmoddi4+0x222>
 8000d14:	4542      	cmp	r2, r8
 8000d16:	d2c2      	bcs.n	8000c9e <__udivmoddi4+0x222>
 8000d18:	f1a9 0102 	sub.w	r1, r9, #2
 8000d1c:	443a      	add	r2, r7
 8000d1e:	e7be      	b.n	8000c9e <__udivmoddi4+0x222>
 8000d20:	45f0      	cmp	r8, lr
 8000d22:	d29d      	bcs.n	8000c60 <__udivmoddi4+0x1e4>
 8000d24:	ebbe 0302 	subs.w	r3, lr, r2
 8000d28:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000d2c:	3801      	subs	r0, #1
 8000d2e:	46e1      	mov	r9, ip
 8000d30:	e796      	b.n	8000c60 <__udivmoddi4+0x1e4>
 8000d32:	eba7 0909 	sub.w	r9, r7, r9
 8000d36:	4449      	add	r1, r9
 8000d38:	f1a8 0c02 	sub.w	ip, r8, #2
 8000d3c:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d40:	fb09 f804 	mul.w	r8, r9, r4
 8000d44:	e7db      	b.n	8000cfe <__udivmoddi4+0x282>
 8000d46:	4673      	mov	r3, lr
 8000d48:	e77f      	b.n	8000c4a <__udivmoddi4+0x1ce>
 8000d4a:	4650      	mov	r0, sl
 8000d4c:	e766      	b.n	8000c1c <__udivmoddi4+0x1a0>
 8000d4e:	4608      	mov	r0, r1
 8000d50:	e6fd      	b.n	8000b4e <__udivmoddi4+0xd2>
 8000d52:	443b      	add	r3, r7
 8000d54:	3a02      	subs	r2, #2
 8000d56:	e733      	b.n	8000bc0 <__udivmoddi4+0x144>
 8000d58:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d5c:	443b      	add	r3, r7
 8000d5e:	e71c      	b.n	8000b9a <__udivmoddi4+0x11e>
 8000d60:	4649      	mov	r1, r9
 8000d62:	e79c      	b.n	8000c9e <__udivmoddi4+0x222>
 8000d64:	eba1 0109 	sub.w	r1, r1, r9
 8000d68:	46c4      	mov	ip, r8
 8000d6a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d6e:	fb09 f804 	mul.w	r8, r9, r4
 8000d72:	e7c4      	b.n	8000cfe <__udivmoddi4+0x282>

08000d74 <__aeabi_idiv0>:
 8000d74:	4770      	bx	lr
 8000d76:	bf00      	nop

08000d78 <spi1_communication>:
//	return chTemp;
//}

extern SPI_HandleTypeDef hspi1;
uint8_t spi1_communication(uint8_t send_char)
{
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	b086      	sub	sp, #24
 8000d7c:	af02      	add	r7, sp, #8
 8000d7e:	4603      	mov	r3, r0
 8000d80:	71fb      	strb	r3, [r7, #7]
    uint8_t receive_char = 0;
 8000d82:	2300      	movs	r3, #0
 8000d84:	73bb      	strb	r3, [r7, #14]
    HAL_StatusTypeDef status;

    status = HAL_SPI_TransmitReceive(&hspi1, &send_char, &receive_char, 1, 10);  // timeout 10ms
 8000d86:	f107 020e 	add.w	r2, r7, #14
 8000d8a:	1df9      	adds	r1, r7, #7
 8000d8c:	230a      	movs	r3, #10
 8000d8e:	9300      	str	r3, [sp, #0]
 8000d90:	2301      	movs	r3, #1
 8000d92:	4807      	ldr	r0, [pc, #28]	@ (8000db0 <spi1_communication+0x38>)
 8000d94:	f006 fc09 	bl	80075aa <HAL_SPI_TransmitReceive>
 8000d98:	4603      	mov	r3, r0
 8000d9a:	73fb      	strb	r3, [r7, #15]

    if (status == HAL_OK) {
 8000d9c:	7bfb      	ldrb	r3, [r7, #15]
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d101      	bne.n	8000da6 <spi1_communication+0x2e>
        return receive_char;
 8000da2:	7bbb      	ldrb	r3, [r7, #14]
 8000da4:	e000      	b.n	8000da8 <spi1_communication+0x30>
    } else {
        return 0;  // lỗi
 8000da6:	2300      	movs	r3, #0
    }
}
 8000da8:	4618      	mov	r0, r3
 8000daa:	3710      	adds	r7, #16
 8000dac:	46bd      	mov	sp, r7
 8000dae:	bd80      	pop	{r7, pc}
 8000db0:	200004cc 	.word	0x200004cc

08000db4 <lcd_write_byte>:
parameter:
  chByte : send data
  chCmd  : command or data
******************************************************************************/
void lcd_write_byte(uint8_t chByte, uint8_t chCmd)
{
 8000db4:	b580      	push	{r7, lr}
 8000db6:	b082      	sub	sp, #8
 8000db8:	af00      	add	r7, sp, #0
 8000dba:	4603      	mov	r3, r0
 8000dbc:	460a      	mov	r2, r1
 8000dbe:	71fb      	strb	r3, [r7, #7]
 8000dc0:	4613      	mov	r3, r2
 8000dc2:	71bb      	strb	r3, [r7, #6]
    if (chCmd) {
 8000dc4:	79bb      	ldrb	r3, [r7, #6]
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	d006      	beq.n	8000dd8 <lcd_write_byte+0x24>
        LCD_DC_H();
 8000dca:	2201      	movs	r2, #1
 8000dcc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000dd0:	480d      	ldr	r0, [pc, #52]	@ (8000e08 <lcd_write_byte+0x54>)
 8000dd2:	f004 fb97 	bl	8005504 <HAL_GPIO_WritePin>
 8000dd6:	e005      	b.n	8000de4 <lcd_write_byte+0x30>
    } else {
        LCD_DC_L();
 8000dd8:	2200      	movs	r2, #0
 8000dda:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000dde:	480a      	ldr	r0, [pc, #40]	@ (8000e08 <lcd_write_byte+0x54>)
 8000de0:	f004 fb90 	bl	8005504 <HAL_GPIO_WritePin>
    }
    
    LCD_CS_L();
 8000de4:	2200      	movs	r2, #0
 8000de6:	2180      	movs	r1, #128	@ 0x80
 8000de8:	4807      	ldr	r0, [pc, #28]	@ (8000e08 <lcd_write_byte+0x54>)
 8000dea:	f004 fb8b 	bl	8005504 <HAL_GPIO_WritePin>
    spi1_communication(chByte);
 8000dee:	79fb      	ldrb	r3, [r7, #7]
 8000df0:	4618      	mov	r0, r3
 8000df2:	f7ff ffc1 	bl	8000d78 <spi1_communication>
    LCD_CS_H();
 8000df6:	2201      	movs	r2, #1
 8000df8:	2180      	movs	r1, #128	@ 0x80
 8000dfa:	4803      	ldr	r0, [pc, #12]	@ (8000e08 <lcd_write_byte+0x54>)
 8000dfc:	f004 fb82 	bl	8005504 <HAL_GPIO_WritePin>
}
 8000e00:	bf00      	nop
 8000e02:	3708      	adds	r7, #8
 8000e04:	46bd      	mov	sp, r7
 8000e06:	bd80      	pop	{r7, pc}
 8000e08:	40020400 	.word	0x40020400

08000e0c <lcd_write_word>:
parameter:
  chByte : send data
  chCmd  : command or data
******************************************************************************/
void lcd_write_word(uint16_t hwData)
{
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	b082      	sub	sp, #8
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	4603      	mov	r3, r0
 8000e14:	80fb      	strh	r3, [r7, #6]
    LCD_DC_H();
 8000e16:	2201      	movs	r2, #1
 8000e18:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000e1c:	480e      	ldr	r0, [pc, #56]	@ (8000e58 <lcd_write_word+0x4c>)
 8000e1e:	f004 fb71 	bl	8005504 <HAL_GPIO_WritePin>
    LCD_CS_L();
 8000e22:	2200      	movs	r2, #0
 8000e24:	2180      	movs	r1, #128	@ 0x80
 8000e26:	480c      	ldr	r0, [pc, #48]	@ (8000e58 <lcd_write_word+0x4c>)
 8000e28:	f004 fb6c 	bl	8005504 <HAL_GPIO_WritePin>
    spi1_communication(hwData >> 8);
 8000e2c:	88fb      	ldrh	r3, [r7, #6]
 8000e2e:	0a1b      	lsrs	r3, r3, #8
 8000e30:	b29b      	uxth	r3, r3
 8000e32:	b2db      	uxtb	r3, r3
 8000e34:	4618      	mov	r0, r3
 8000e36:	f7ff ff9f 	bl	8000d78 <spi1_communication>
    spi1_communication(hwData & 0xFF);
 8000e3a:	88fb      	ldrh	r3, [r7, #6]
 8000e3c:	b2db      	uxtb	r3, r3
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f7ff ff9a 	bl	8000d78 <spi1_communication>
    LCD_CS_H();
 8000e44:	2201      	movs	r2, #1
 8000e46:	2180      	movs	r1, #128	@ 0x80
 8000e48:	4803      	ldr	r0, [pc, #12]	@ (8000e58 <lcd_write_word+0x4c>)
 8000e4a:	f004 fb5b 	bl	8005504 <HAL_GPIO_WritePin>
}
 8000e4e:	bf00      	nop
 8000e50:	3708      	adds	r7, #8
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
 8000e56:	bf00      	nop
 8000e58:	40020400 	.word	0x40020400

08000e5c <lcd_write_command>:
parameter:
     chByte : send data
		 chCmd  : command or data
******************************************************************************/
void lcd_write_command(uint8_t chRegister, uint8_t chValue)
{
 8000e5c:	b580      	push	{r7, lr}
 8000e5e:	b082      	sub	sp, #8
 8000e60:	af00      	add	r7, sp, #0
 8000e62:	4603      	mov	r3, r0
 8000e64:	460a      	mov	r2, r1
 8000e66:	71fb      	strb	r3, [r7, #7]
 8000e68:	4613      	mov	r3, r2
 8000e6a:	71bb      	strb	r3, [r7, #6]
	lcd_write_byte(chRegister, LCD_CMD);
 8000e6c:	79fb      	ldrb	r3, [r7, #7]
 8000e6e:	2100      	movs	r1, #0
 8000e70:	4618      	mov	r0, r3
 8000e72:	f7ff ff9f 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(chValue, LCD_DATA);
 8000e76:	79bb      	ldrb	r3, [r7, #6]
 8000e78:	2101      	movs	r1, #1
 8000e7a:	4618      	mov	r0, r3
 8000e7c:	f7ff ff9a 	bl	8000db4 <lcd_write_byte>
}
 8000e80:	bf00      	nop
 8000e82:	3708      	adds	r7, #8
 8000e84:	46bd      	mov	sp, r7
 8000e86:	bd80      	pop	{r7, pc}

08000e88 <delay_ms>:
/******************************************************************************
Function Name  : delay
			parameter: ms
******************************************************************************/
void delay_ms(uint32_t ms)
{
 8000e88:	b480      	push	{r7}
 8000e8a:	b085      	sub	sp, #20
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]
	uint32_t j=5000;
 8000e90:	f241 3388 	movw	r3, #5000	@ 0x1388
 8000e94:	60fb      	str	r3, [r7, #12]
	for(;ms>2;ms--)
 8000e96:	e008      	b.n	8000eaa <delay_ms+0x22>
		for(;j>2;j--){
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	3b01      	subs	r3, #1
 8000e9c:	60fb      	str	r3, [r7, #12]
 8000e9e:	68fb      	ldr	r3, [r7, #12]
 8000ea0:	2b02      	cmp	r3, #2
 8000ea2:	d8f9      	bhi.n	8000e98 <delay_ms+0x10>
	for(;ms>2;ms--)
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	3b01      	subs	r3, #1
 8000ea8:	607b      	str	r3, [r7, #4]
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	2b02      	cmp	r3, #2
 8000eae:	d8f6      	bhi.n	8000e9e <delay_ms+0x16>
			
		}
}
 8000eb0:	bf00      	nop
 8000eb2:	bf00      	nop
 8000eb4:	3714      	adds	r7, #20
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr
	...

08000ec0 <lcd_init>:
/******************************************************************************
Function Name  : initials lcd control pin 
			parameter:
******************************************************************************/
void lcd_init(void)
{
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	af00      	add	r7, sp, #0
  //lcd_ctrl_port_init();
	LCD_RST_H();
 8000ec4:	2201      	movs	r2, #1
 8000ec6:	2104      	movs	r1, #4
 8000ec8:	4880      	ldr	r0, [pc, #512]	@ (80010cc <lcd_init+0x20c>)
 8000eca:	f004 fb1b 	bl	8005504 <HAL_GPIO_WritePin>
  //Sspi_init();
	
	LCD_CS_H();
 8000ece:	2201      	movs	r2, #1
 8000ed0:	2180      	movs	r1, #128	@ 0x80
 8000ed2:	487e      	ldr	r0, [pc, #504]	@ (80010cc <lcd_init+0x20c>)
 8000ed4:	f004 fb16 	bl	8005504 <HAL_GPIO_WritePin>
	LCD_BKL_H();
 8000ed8:	2201      	movs	r2, #1
 8000eda:	2140      	movs	r1, #64	@ 0x40
 8000edc:	487b      	ldr	r0, [pc, #492]	@ (80010cc <lcd_init+0x20c>)
 8000ede:	f004 fb11 	bl	8005504 <HAL_GPIO_WritePin>
#ifdef 	ST7789_DEVICE
	LCD_RST_H();
 8000ee2:	2201      	movs	r2, #1
 8000ee4:	2104      	movs	r1, #4
 8000ee6:	4879      	ldr	r0, [pc, #484]	@ (80010cc <lcd_init+0x20c>)
 8000ee8:	f004 fb0c 	bl	8005504 <HAL_GPIO_WritePin>
	delay_ms(5);
 8000eec:	2005      	movs	r0, #5
 8000eee:	f7ff ffcb 	bl	8000e88 <delay_ms>
	LCD_RST_L();
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	2104      	movs	r1, #4
 8000ef6:	4875      	ldr	r0, [pc, #468]	@ (80010cc <lcd_init+0x20c>)
 8000ef8:	f004 fb04 	bl	8005504 <HAL_GPIO_WritePin>
	delay_ms(5);
 8000efc:	2005      	movs	r0, #5
 8000efe:	f7ff ffc3 	bl	8000e88 <delay_ms>
	LCD_RST_H();
 8000f02:	2201      	movs	r2, #1
 8000f04:	2104      	movs	r1, #4
 8000f06:	4871      	ldr	r0, [pc, #452]	@ (80010cc <lcd_init+0x20c>)
 8000f08:	f004 fafc 	bl	8005504 <HAL_GPIO_WritePin>
	delay_ms(5);
 8000f0c:	2005      	movs	r0, #5
 8000f0e:	f7ff ffbb 	bl	8000e88 <delay_ms>
	LCD_CS_H();
 8000f12:	2201      	movs	r2, #1
 8000f14:	2180      	movs	r1, #128	@ 0x80
 8000f16:	486d      	ldr	r0, [pc, #436]	@ (80010cc <lcd_init+0x20c>)
 8000f18:	f004 faf4 	bl	8005504 <HAL_GPIO_WritePin>
	lcd_write_command(0x09,0x3F);
	lcd_write_byte(0x20, LCD_CMD);

	
#elif defined ST7789_DEVICE
	lcd_write_byte(0x11,LCD_CMD);
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	2011      	movs	r0, #17
 8000f20:	f7ff ff48 	bl	8000db4 <lcd_write_byte>
	delay_ms(10);
 8000f24:	200a      	movs	r0, #10
 8000f26:	f7ff ffaf 	bl	8000e88 <delay_ms>
	lcd_write_command(0x36,0x00);
 8000f2a:	2100      	movs	r1, #0
 8000f2c:	2036      	movs	r0, #54	@ 0x36
 8000f2e:	f7ff ff95 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0x3a,0x05);
 8000f32:	2105      	movs	r1, #5
 8000f34:	203a      	movs	r0, #58	@ 0x3a
 8000f36:	f7ff ff91 	bl	8000e5c <lcd_write_command>
	lcd_write_byte(0xb2,LCD_CMD);
 8000f3a:	2100      	movs	r1, #0
 8000f3c:	20b2      	movs	r0, #178	@ 0xb2
 8000f3e:	f7ff ff39 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0c,LCD_DATA);
 8000f42:	2101      	movs	r1, #1
 8000f44:	200c      	movs	r0, #12
 8000f46:	f7ff ff35 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0c,LCD_DATA);
 8000f4a:	2101      	movs	r1, #1
 8000f4c:	200c      	movs	r0, #12
 8000f4e:	f7ff ff31 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x00,LCD_DATA);
 8000f52:	2101      	movs	r1, #1
 8000f54:	2000      	movs	r0, #0
 8000f56:	f7ff ff2d 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x33,LCD_DATA);
 8000f5a:	2101      	movs	r1, #1
 8000f5c:	2033      	movs	r0, #51	@ 0x33
 8000f5e:	f7ff ff29 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x33,LCD_DATA);
 8000f62:	2101      	movs	r1, #1
 8000f64:	2033      	movs	r0, #51	@ 0x33
 8000f66:	f7ff ff25 	bl	8000db4 <lcd_write_byte>
	lcd_write_command(0xb7,0x35);
 8000f6a:	2135      	movs	r1, #53	@ 0x35
 8000f6c:	20b7      	movs	r0, #183	@ 0xb7
 8000f6e:	f7ff ff75 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xbb,0x28);
 8000f72:	2128      	movs	r1, #40	@ 0x28
 8000f74:	20bb      	movs	r0, #187	@ 0xbb
 8000f76:	f7ff ff71 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xc0,0x3c);
 8000f7a:	213c      	movs	r1, #60	@ 0x3c
 8000f7c:	20c0      	movs	r0, #192	@ 0xc0
 8000f7e:	f7ff ff6d 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xc2,0x01);
 8000f82:	2101      	movs	r1, #1
 8000f84:	20c2      	movs	r0, #194	@ 0xc2
 8000f86:	f7ff ff69 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xc3,0x0b);
 8000f8a:	210b      	movs	r1, #11
 8000f8c:	20c3      	movs	r0, #195	@ 0xc3
 8000f8e:	f7ff ff65 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xc4,0x20);
 8000f92:	2120      	movs	r1, #32
 8000f94:	20c4      	movs	r0, #196	@ 0xc4
 8000f96:	f7ff ff61 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0xc6,0x0f);
 8000f9a:	210f      	movs	r1, #15
 8000f9c:	20c6      	movs	r0, #198	@ 0xc6
 8000f9e:	f7ff ff5d 	bl	8000e5c <lcd_write_command>
	lcd_write_byte(0xD0,LCD_CMD);
 8000fa2:	2100      	movs	r1, #0
 8000fa4:	20d0      	movs	r0, #208	@ 0xd0
 8000fa6:	f7ff ff05 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xa4,LCD_DATA);
 8000faa:	2101      	movs	r1, #1
 8000fac:	20a4      	movs	r0, #164	@ 0xa4
 8000fae:	f7ff ff01 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xa1,LCD_DATA);
 8000fb2:	2101      	movs	r1, #1
 8000fb4:	20a1      	movs	r0, #161	@ 0xa1
 8000fb6:	f7ff fefd 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xe0,LCD_CMD);
 8000fba:	2100      	movs	r1, #0
 8000fbc:	20e0      	movs	r0, #224	@ 0xe0
 8000fbe:	f7ff fef9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xd0,LCD_DATA);
 8000fc2:	2101      	movs	r1, #1
 8000fc4:	20d0      	movs	r0, #208	@ 0xd0
 8000fc6:	f7ff fef5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x01,LCD_DATA);
 8000fca:	2101      	movs	r1, #1
 8000fcc:	2001      	movs	r0, #1
 8000fce:	f7ff fef1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x08,LCD_DATA);
 8000fd2:	2101      	movs	r1, #1
 8000fd4:	2008      	movs	r0, #8
 8000fd6:	f7ff feed 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0f,LCD_DATA);
 8000fda:	2101      	movs	r1, #1
 8000fdc:	200f      	movs	r0, #15
 8000fde:	f7ff fee9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x11,LCD_DATA);
 8000fe2:	2101      	movs	r1, #1
 8000fe4:	2011      	movs	r0, #17
 8000fe6:	f7ff fee5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x2a,LCD_DATA);
 8000fea:	2101      	movs	r1, #1
 8000fec:	202a      	movs	r0, #42	@ 0x2a
 8000fee:	f7ff fee1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x36,LCD_DATA);
 8000ff2:	2101      	movs	r1, #1
 8000ff4:	2036      	movs	r0, #54	@ 0x36
 8000ff6:	f7ff fedd 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x55,LCD_DATA);
 8000ffa:	2101      	movs	r1, #1
 8000ffc:	2055      	movs	r0, #85	@ 0x55
 8000ffe:	f7ff fed9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x44,LCD_DATA);
 8001002:	2101      	movs	r1, #1
 8001004:	2044      	movs	r0, #68	@ 0x44
 8001006:	f7ff fed5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x3a,LCD_DATA);
 800100a:	2101      	movs	r1, #1
 800100c:	203a      	movs	r0, #58	@ 0x3a
 800100e:	f7ff fed1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0b,LCD_DATA);
 8001012:	2101      	movs	r1, #1
 8001014:	200b      	movs	r0, #11
 8001016:	f7ff fecd 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x06,LCD_DATA);
 800101a:	2101      	movs	r1, #1
 800101c:	2006      	movs	r0, #6
 800101e:	f7ff fec9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x11,LCD_DATA);
 8001022:	2101      	movs	r1, #1
 8001024:	2011      	movs	r0, #17
 8001026:	f7ff fec5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x20,LCD_DATA);
 800102a:	2101      	movs	r1, #1
 800102c:	2020      	movs	r0, #32
 800102e:	f7ff fec1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xe1,LCD_CMD);
 8001032:	2100      	movs	r1, #0
 8001034:	20e1      	movs	r0, #225	@ 0xe1
 8001036:	f7ff febd 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0xd0,LCD_DATA);
 800103a:	2101      	movs	r1, #1
 800103c:	20d0      	movs	r0, #208	@ 0xd0
 800103e:	f7ff feb9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x01,LCD_DATA);
 8001042:	2101      	movs	r1, #1
 8001044:	2001      	movs	r0, #1
 8001046:	f7ff feb5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x07,LCD_DATA);
 800104a:	2101      	movs	r1, #1
 800104c:	2007      	movs	r0, #7
 800104e:	f7ff feb1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0a,LCD_DATA);
 8001052:	2101      	movs	r1, #1
 8001054:	200a      	movs	r0, #10
 8001056:	f7ff fead 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x0b,LCD_DATA);
 800105a:	2101      	movs	r1, #1
 800105c:	200b      	movs	r0, #11
 800105e:	f7ff fea9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x18,LCD_DATA);
 8001062:	2101      	movs	r1, #1
 8001064:	2018      	movs	r0, #24
 8001066:	f7ff fea5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x34,LCD_DATA);
 800106a:	2101      	movs	r1, #1
 800106c:	2034      	movs	r0, #52	@ 0x34
 800106e:	f7ff fea1 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x43,LCD_DATA);
 8001072:	2101      	movs	r1, #1
 8001074:	2043      	movs	r0, #67	@ 0x43
 8001076:	f7ff fe9d 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x4a,LCD_DATA);
 800107a:	2101      	movs	r1, #1
 800107c:	204a      	movs	r0, #74	@ 0x4a
 800107e:	f7ff fe99 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x2b,LCD_DATA);
 8001082:	2101      	movs	r1, #1
 8001084:	202b      	movs	r0, #43	@ 0x2b
 8001086:	f7ff fe95 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x1b,LCD_DATA);
 800108a:	2101      	movs	r1, #1
 800108c:	201b      	movs	r0, #27
 800108e:	f7ff fe91 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x1c,LCD_DATA);
 8001092:	2101      	movs	r1, #1
 8001094:	201c      	movs	r0, #28
 8001096:	f7ff fe8d 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x22,LCD_DATA);
 800109a:	2101      	movs	r1, #1
 800109c:	2022      	movs	r0, #34	@ 0x22
 800109e:	f7ff fe89 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x1f,LCD_DATA);
 80010a2:	2101      	movs	r1, #1
 80010a4:	201f      	movs	r0, #31
 80010a6:	f7ff fe85 	bl	8000db4 <lcd_write_byte>
	//lcd_write_byte(0x21, LCD_CMD);
	lcd_write_byte(0x29,LCD_CMD);
 80010aa:	2100      	movs	r1, #0
 80010ac:	2029      	movs	r0, #41	@ 0x29
 80010ae:	f7ff fe81 	bl	8000db4 <lcd_write_byte>
	lcd_write_command(0x51,0xff);
 80010b2:	21ff      	movs	r1, #255	@ 0xff
 80010b4:	2051      	movs	r0, #81	@ 0x51
 80010b6:	f7ff fed1 	bl	8000e5c <lcd_write_command>
	lcd_write_command(0x55,0xB0);
 80010ba:	21b0      	movs	r1, #176	@ 0xb0
 80010bc:	2055      	movs	r0, #85	@ 0x55
 80010be:	f7ff fecd 	bl	8000e5c <lcd_write_command>
#endif

	lcd_clear_screen(BLACK);
 80010c2:	2000      	movs	r0, #0
 80010c4:	f000 f804 	bl	80010d0 <lcd_clear_screen>
}
 80010c8:	bf00      	nop
 80010ca:	bd80      	pop	{r7, pc}
 80010cc:	40020400 	.word	0x40020400

080010d0 <lcd_clear_screen>:
//	}
//	LCD_CS_H();
//}

void lcd_clear_screen(uint16_t hwColor)
{
 80010d0:	b580      	push	{r7, lr}
 80010d2:	f5ad 7d06 	sub.w	sp, sp, #536	@ 0x218
 80010d6:	af00      	add	r7, sp, #0
 80010d8:	4602      	mov	r2, r0
 80010da:	f507 7306 	add.w	r3, r7, #536	@ 0x218
 80010de:	f2a3 2312 	subw	r3, r3, #530	@ 0x212
 80010e2:	801a      	strh	r2, [r3, #0]
    uint32_t wCount = LCD_WIDTH * LCD_HEIGHT;
 80010e4:	f44f 3396 	mov.w	r3, #76800	@ 0x12c00
 80010e8:	f8c7 320c 	str.w	r3, [r7, #524]	@ 0x20c
    uint8_t color_buf[512]; // Smaller buffer, e.g., 256 pixels (512 bytes)
    uint16_t buf_size = sizeof(color_buf) / 2;
 80010ec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80010f0:	f8a7 320a 	strh.w	r3, [r7, #522]	@ 0x20a

    // Fill small buffer
    for (uint16_t i = 0; i < buf_size * 2; i += 2) {
 80010f4:	2300      	movs	r3, #0
 80010f6:	f8a7 3216 	strh.w	r3, [r7, #534]	@ 0x216
 80010fa:	e021      	b.n	8001140 <lcd_clear_screen+0x70>
        color_buf[i] = hwColor >> 8;
 80010fc:	f507 7306 	add.w	r3, r7, #536	@ 0x218
 8001100:	f2a3 2312 	subw	r3, r3, #530	@ 0x212
 8001104:	881b      	ldrh	r3, [r3, #0]
 8001106:	0a1b      	lsrs	r3, r3, #8
 8001108:	b29a      	uxth	r2, r3
 800110a:	f8b7 3216 	ldrh.w	r3, [r7, #534]	@ 0x216
 800110e:	b2d1      	uxtb	r1, r2
 8001110:	f507 7206 	add.w	r2, r7, #536	@ 0x218
 8001114:	f5a2 7204 	sub.w	r2, r2, #528	@ 0x210
 8001118:	54d1      	strb	r1, [r2, r3]
        color_buf[i + 1] = hwColor & 0xFF;
 800111a:	f8b7 3216 	ldrh.w	r3, [r7, #534]	@ 0x216
 800111e:	3301      	adds	r3, #1
 8001120:	f507 7206 	add.w	r2, r7, #536	@ 0x218
 8001124:	f2a2 2212 	subw	r2, r2, #530	@ 0x212
 8001128:	8812      	ldrh	r2, [r2, #0]
 800112a:	b2d1      	uxtb	r1, r2
 800112c:	f507 7206 	add.w	r2, r7, #536	@ 0x218
 8001130:	f5a2 7204 	sub.w	r2, r2, #528	@ 0x210
 8001134:	54d1      	strb	r1, [r2, r3]
    for (uint16_t i = 0; i < buf_size * 2; i += 2) {
 8001136:	f8b7 3216 	ldrh.w	r3, [r7, #534]	@ 0x216
 800113a:	3302      	adds	r3, #2
 800113c:	f8a7 3216 	strh.w	r3, [r7, #534]	@ 0x216
 8001140:	f8b7 2216 	ldrh.w	r2, [r7, #534]	@ 0x216
 8001144:	f8b7 320a 	ldrh.w	r3, [r7, #522]	@ 0x20a
 8001148:	005b      	lsls	r3, r3, #1
 800114a:	429a      	cmp	r2, r3
 800114c:	dbd6      	blt.n	80010fc <lcd_clear_screen+0x2c>

#ifdef HX8347D_DEVICE
    lcd_set_cursor(0, 0);
    lcd_write_byte(0x22, LCD_CMD);
#elif defined ST7789_DEVICE
    lcd_write_byte(0x2A, LCD_CMD);
 800114e:	2100      	movs	r1, #0
 8001150:	202a      	movs	r0, #42	@ 0x2a
 8001152:	f7ff fe2f 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x00, LCD_DATA);
 8001156:	2101      	movs	r1, #1
 8001158:	2000      	movs	r0, #0
 800115a:	f7ff fe2b 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x00, LCD_DATA);
 800115e:	2101      	movs	r1, #1
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff fe27 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x00, LCD_DATA);
 8001166:	2101      	movs	r1, #1
 8001168:	2000      	movs	r0, #0
 800116a:	f7ff fe23 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte((LCD_WIDTH - 1) & 0xFF, LCD_DATA);
 800116e:	2101      	movs	r1, #1
 8001170:	20ef      	movs	r0, #239	@ 0xef
 8001172:	f7ff fe1f 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x2B, LCD_CMD);
 8001176:	2100      	movs	r1, #0
 8001178:	202b      	movs	r0, #43	@ 0x2b
 800117a:	f7ff fe1b 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x00, LCD_DATA);
 800117e:	2101      	movs	r1, #1
 8001180:	2000      	movs	r0, #0
 8001182:	f7ff fe17 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x00, LCD_DATA);
 8001186:	2101      	movs	r1, #1
 8001188:	2000      	movs	r0, #0
 800118a:	f7ff fe13 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(((LCD_HEIGHT - 1) >> 8) & 0xFF, LCD_DATA);
 800118e:	2101      	movs	r1, #1
 8001190:	2001      	movs	r0, #1
 8001192:	f7ff fe0f 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte((LCD_HEIGHT - 1) & 0xFF, LCD_DATA);
 8001196:	2101      	movs	r1, #1
 8001198:	203f      	movs	r0, #63	@ 0x3f
 800119a:	f7ff fe0b 	bl	8000db4 <lcd_write_byte>
    lcd_write_byte(0x2C, LCD_CMD);
 800119e:	2100      	movs	r1, #0
 80011a0:	202c      	movs	r0, #44	@ 0x2c
 80011a2:	f7ff fe07 	bl	8000db4 <lcd_write_byte>
#endif

    LCD_CS_L();
 80011a6:	2200      	movs	r2, #0
 80011a8:	2180      	movs	r1, #128	@ 0x80
 80011aa:	481d      	ldr	r0, [pc, #116]	@ (8001220 <lcd_clear_screen+0x150>)
 80011ac:	f004 f9aa 	bl	8005504 <HAL_GPIO_WritePin>
    LCD_DC_H();
 80011b0:	2201      	movs	r2, #1
 80011b2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80011b6:	481a      	ldr	r0, [pc, #104]	@ (8001220 <lcd_clear_screen+0x150>)
 80011b8:	f004 f9a4 	bl	8005504 <HAL_GPIO_WritePin>
    // Send buffer multiple times to cover entire screen
    for (uint32_t i = 0; i < wCount; i += buf_size) {
 80011bc:	2300      	movs	r3, #0
 80011be:	f8c7 3210 	str.w	r3, [r7, #528]	@ 0x210
 80011c2:	e01d      	b.n	8001200 <lcd_clear_screen+0x130>
        uint16_t remaining = (wCount - i) > buf_size ? buf_size : (wCount - i);
 80011c4:	f8d7 220c 	ldr.w	r2, [r7, #524]	@ 0x20c
 80011c8:	f8d7 3210 	ldr.w	r3, [r7, #528]	@ 0x210
 80011cc:	1ad2      	subs	r2, r2, r3
 80011ce:	f8b7 320a 	ldrh.w	r3, [r7, #522]	@ 0x20a
 80011d2:	4293      	cmp	r3, r2
 80011d4:	bf28      	it	cs
 80011d6:	4613      	movcs	r3, r2
 80011d8:	f8a7 3208 	strh.w	r3, [r7, #520]	@ 0x208
        HAL_SPI_Transmit(&hspi1, color_buf, remaining * 2, HAL_MAX_DELAY);
 80011dc:	f8b7 3208 	ldrh.w	r3, [r7, #520]	@ 0x208
 80011e0:	005b      	lsls	r3, r3, #1
 80011e2:	b29a      	uxth	r2, r3
 80011e4:	f107 0108 	add.w	r1, r7, #8
 80011e8:	f04f 33ff 	mov.w	r3, #4294967295
 80011ec:	480d      	ldr	r0, [pc, #52]	@ (8001224 <lcd_clear_screen+0x154>)
 80011ee:	f006 f898 	bl	8007322 <HAL_SPI_Transmit>
    for (uint32_t i = 0; i < wCount; i += buf_size) {
 80011f2:	f8b7 320a 	ldrh.w	r3, [r7, #522]	@ 0x20a
 80011f6:	f8d7 2210 	ldr.w	r2, [r7, #528]	@ 0x210
 80011fa:	4413      	add	r3, r2
 80011fc:	f8c7 3210 	str.w	r3, [r7, #528]	@ 0x210
 8001200:	f8d7 2210 	ldr.w	r2, [r7, #528]	@ 0x210
 8001204:	f8d7 320c 	ldr.w	r3, [r7, #524]	@ 0x20c
 8001208:	429a      	cmp	r2, r3
 800120a:	d3db      	bcc.n	80011c4 <lcd_clear_screen+0xf4>
    }
    LCD_CS_H();
 800120c:	2201      	movs	r2, #1
 800120e:	2180      	movs	r1, #128	@ 0x80
 8001210:	4803      	ldr	r0, [pc, #12]	@ (8001220 <lcd_clear_screen+0x150>)
 8001212:	f004 f977 	bl	8005504 <HAL_GPIO_WritePin>
}
 8001216:	bf00      	nop
 8001218:	f507 7706 	add.w	r7, r7, #536	@ 0x218
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}
 8001220:	40020400 	.word	0x40020400
 8001224:	200004cc 	.word	0x200004cc

08001228 <lcd_set_cursor>:
			parameter:
				 hwXpos: x axis position
				 hwYpos: y axis position
******************************************************************************/
void lcd_set_cursor(uint16_t hwXpos, uint16_t hwYpos)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	b082      	sub	sp, #8
 800122c:	af00      	add	r7, sp, #0
 800122e:	4603      	mov	r3, r0
 8001230:	460a      	mov	r2, r1
 8001232:	80fb      	strh	r3, [r7, #6]
 8001234:	4613      	mov	r3, r2
 8001236:	80bb      	strh	r3, [r7, #4]
	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 8001238:	88fb      	ldrh	r3, [r7, #6]
 800123a:	2bef      	cmp	r3, #239	@ 0xef
 800123c:	d824      	bhi.n	8001288 <lcd_set_cursor+0x60>
 800123e:	88bb      	ldrh	r3, [r7, #4]
 8001240:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001244:	d220      	bcs.n	8001288 <lcd_set_cursor+0x60>
	lcd_write_command(0x02, hwXpos >> 8);
	lcd_write_command(0x03, hwXpos & 0xFF); 
	lcd_write_command(0x06, hwYpos >> 8);
	lcd_write_command(0x07, hwYpos & 0xFF); 
#elif defined ST7789_DEVICE
	lcd_write_byte(0x2A,LCD_CMD);
 8001246:	2100      	movs	r1, #0
 8001248:	202a      	movs	r0, #42	@ 0x2a
 800124a:	f7ff fdb3 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x00,LCD_DATA);
 800124e:	2101      	movs	r1, #1
 8001250:	2000      	movs	r0, #0
 8001252:	f7ff fdaf 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(hwXpos,LCD_DATA);
 8001256:	88fb      	ldrh	r3, [r7, #6]
 8001258:	b2db      	uxtb	r3, r3
 800125a:	2101      	movs	r1, #1
 800125c:	4618      	mov	r0, r3
 800125e:	f7ff fda9 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x2B,LCD_CMD);
 8001262:	2100      	movs	r1, #0
 8001264:	202b      	movs	r0, #43	@ 0x2b
 8001266:	f7ff fda5 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte((hwYpos>>8)&0xff,LCD_DATA);
 800126a:	88bb      	ldrh	r3, [r7, #4]
 800126c:	0a1b      	lsrs	r3, r3, #8
 800126e:	b29b      	uxth	r3, r3
 8001270:	b2db      	uxtb	r3, r3
 8001272:	2101      	movs	r1, #1
 8001274:	4618      	mov	r0, r3
 8001276:	f7ff fd9d 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(hwYpos&0xff,LCD_DATA);	
 800127a:	88bb      	ldrh	r3, [r7, #4]
 800127c:	b2db      	uxtb	r3, r3
 800127e:	2101      	movs	r1, #1
 8001280:	4618      	mov	r0, r3
 8001282:	f7ff fd97 	bl	8000db4 <lcd_write_byte>
 8001286:	e000      	b.n	800128a <lcd_set_cursor+0x62>
		return;
 8001288:	bf00      	nop
#endif
}
 800128a:	3708      	adds	r7, #8
 800128c:	46bd      	mov	sp, r7
 800128e:	bd80      	pop	{r7, pc}

08001290 <lcd_display_char>:
void lcd_display_char(	 uint16_t hwXpos, 
                         uint16_t hwYpos, 
                         uint8_t chChr,   
                         uint8_t chSize,  
                         uint16_t hwColor)
{      	
 8001290:	b590      	push	{r4, r7, lr}
 8001292:	b085      	sub	sp, #20
 8001294:	af00      	add	r7, sp, #0
 8001296:	4604      	mov	r4, r0
 8001298:	4608      	mov	r0, r1
 800129a:	4611      	mov	r1, r2
 800129c:	461a      	mov	r2, r3
 800129e:	4623      	mov	r3, r4
 80012a0:	80fb      	strh	r3, [r7, #6]
 80012a2:	4603      	mov	r3, r0
 80012a4:	80bb      	strh	r3, [r7, #4]
 80012a6:	460b      	mov	r3, r1
 80012a8:	70fb      	strb	r3, [r7, #3]
 80012aa:	4613      	mov	r3, r2
 80012ac:	70bb      	strb	r3, [r7, #2]
	uint8_t i, j, chTemp;
	uint16_t hwYpos0 = hwYpos, hwColorVal = 0;
 80012ae:	88bb      	ldrh	r3, [r7, #4]
 80012b0:	817b      	strh	r3, [r7, #10]
 80012b2:	2300      	movs	r3, #0
 80012b4:	813b      	strh	r3, [r7, #8]

	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 80012b6:	88fb      	ldrh	r3, [r7, #6]
 80012b8:	2bef      	cmp	r3, #239	@ 0xef
 80012ba:	f200 8095 	bhi.w	80013e8 <lcd_display_char+0x158>
 80012be:	88bb      	ldrh	r3, [r7, #4]
 80012c0:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80012c4:	f080 8090 	bcs.w	80013e8 <lcd_display_char+0x158>
		return;
	}
#ifdef HX8347D_DEVICE
	
#elif defined ST7789_DEVICE
	lcd_write_byte(0x2A,LCD_CMD);
 80012c8:	2100      	movs	r1, #0
 80012ca:	202a      	movs	r0, #42	@ 0x2a
 80012cc:	f7ff fd72 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x00,LCD_DATA);
 80012d0:	2101      	movs	r1, #1
 80012d2:	2000      	movs	r0, #0
 80012d4:	f7ff fd6e 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(hwXpos,LCD_DATA);
 80012d8:	88fb      	ldrh	r3, [r7, #6]
 80012da:	b2db      	uxtb	r3, r3
 80012dc:	2101      	movs	r1, #1
 80012de:	4618      	mov	r0, r3
 80012e0:	f7ff fd68 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte((hwXpos) >> 8,LCD_DATA);
 80012e4:	88fb      	ldrh	r3, [r7, #6]
 80012e6:	0a1b      	lsrs	r3, r3, #8
 80012e8:	b29b      	uxth	r3, r3
 80012ea:	b2db      	uxtb	r3, r3
 80012ec:	2101      	movs	r1, #1
 80012ee:	4618      	mov	r0, r3
 80012f0:	f7ff fd60 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte((hwXpos) & 0xFF,LCD_DATA);
 80012f4:	88fb      	ldrh	r3, [r7, #6]
 80012f6:	b2db      	uxtb	r3, r3
 80012f8:	2101      	movs	r1, #1
 80012fa:	4618      	mov	r0, r3
 80012fc:	f7ff fd5a 	bl	8000db4 <lcd_write_byte>

	lcd_write_byte(0x2B,LCD_CMD);
 8001300:	2100      	movs	r1, #0
 8001302:	202b      	movs	r0, #43	@ 0x2b
 8001304:	f7ff fd56 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(hwYpos >> 8,LCD_DATA);
 8001308:	88bb      	ldrh	r3, [r7, #4]
 800130a:	0a1b      	lsrs	r3, r3, #8
 800130c:	b29b      	uxth	r3, r3
 800130e:	b2db      	uxtb	r3, r3
 8001310:	2101      	movs	r1, #1
 8001312:	4618      	mov	r0, r3
 8001314:	f7ff fd4e 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(hwYpos & 0xFF,LCD_DATA);
 8001318:	88bb      	ldrh	r3, [r7, #4]
 800131a:	b2db      	uxtb	r3, r3
 800131c:	2101      	movs	r1, #1
 800131e:	4618      	mov	r0, r3
 8001320:	f7ff fd48 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte((hwYpos) >> 8,LCD_DATA);
 8001324:	88bb      	ldrh	r3, [r7, #4]
 8001326:	0a1b      	lsrs	r3, r3, #8
 8001328:	b29b      	uxth	r3, r3
 800132a:	b2db      	uxtb	r3, r3
 800132c:	2101      	movs	r1, #1
 800132e:	4618      	mov	r0, r3
 8001330:	f7ff fd40 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte((hwYpos) & 0xFF,LCD_DATA);
 8001334:	88bb      	ldrh	r3, [r7, #4]
 8001336:	b2db      	uxtb	r3, r3
 8001338:	2101      	movs	r1, #1
 800133a:	4618      	mov	r0, r3
 800133c:	f7ff fd3a 	bl	8000db4 <lcd_write_byte>
	lcd_write_byte(0x2C, LCD_CMD);
 8001340:	2100      	movs	r1, #0
 8001342:	202c      	movs	r0, #44	@ 0x2c
 8001344:	f7ff fd36 	bl	8000db4 <lcd_write_byte>
#endif
    for (i = 0; i < chSize; i ++) {
 8001348:	2300      	movs	r3, #0
 800134a:	73fb      	strb	r3, [r7, #15]
 800134c:	e047      	b.n	80013de <lcd_display_char+0x14e>
				if (FONT_1206 == chSize) {
 800134e:	78bb      	ldrb	r3, [r7, #2]
 8001350:	2b0c      	cmp	r3, #12
 8001352:	d10d      	bne.n	8001370 <lcd_display_char+0xe0>
					chTemp = c_chFont1206[chChr - 0x20][i];  
 8001354:	78fb      	ldrb	r3, [r7, #3]
 8001356:	f1a3 0220 	sub.w	r2, r3, #32
 800135a:	7bf9      	ldrb	r1, [r7, #15]
 800135c:	4824      	ldr	r0, [pc, #144]	@ (80013f0 <lcd_display_char+0x160>)
 800135e:	4613      	mov	r3, r2
 8001360:	005b      	lsls	r3, r3, #1
 8001362:	4413      	add	r3, r2
 8001364:	009b      	lsls	r3, r3, #2
 8001366:	4403      	add	r3, r0
 8001368:	440b      	add	r3, r1
 800136a:	781b      	ldrb	r3, [r3, #0]
 800136c:	737b      	strb	r3, [r7, #13]
 800136e:	e00c      	b.n	800138a <lcd_display_char+0xfa>
				}
				else if (FONT_1608 == chSize) { 
 8001370:	78bb      	ldrb	r3, [r7, #2]
 8001372:	2b10      	cmp	r3, #16
 8001374:	d109      	bne.n	800138a <lcd_display_char+0xfa>
					chTemp = c_chFont1608[chChr - 0x20][i];
 8001376:	78fb      	ldrb	r3, [r7, #3]
 8001378:	f1a3 0220 	sub.w	r2, r3, #32
 800137c:	7bfb      	ldrb	r3, [r7, #15]
 800137e:	491d      	ldr	r1, [pc, #116]	@ (80013f4 <lcd_display_char+0x164>)
 8001380:	0112      	lsls	r2, r2, #4
 8001382:	440a      	add	r2, r1
 8001384:	4413      	add	r3, r2
 8001386:	781b      	ldrb	r3, [r3, #0]
 8001388:	737b      	strb	r3, [r7, #13]
				}			
        for (j = 0; j < 8; j ++) {
 800138a:	2300      	movs	r3, #0
 800138c:	73bb      	strb	r3, [r7, #14]
 800138e:	e020      	b.n	80013d2 <lcd_display_char+0x142>
					if (chTemp & 0x80) {
 8001390:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001394:	2b00      	cmp	r3, #0
 8001396:	da07      	bge.n	80013a8 <lcd_display_char+0x118>
						hwColorVal = hwColor;
 8001398:	8c3b      	ldrh	r3, [r7, #32]
 800139a:	813b      	strh	r3, [r7, #8]
						lcd_draw_dot(hwXpos, hwYpos, hwColorVal);
 800139c:	893a      	ldrh	r2, [r7, #8]
 800139e:	88b9      	ldrh	r1, [r7, #4]
 80013a0:	88fb      	ldrh	r3, [r7, #6]
 80013a2:	4618      	mov	r0, r3
 80013a4:	f000 f874 	bl	8001490 <lcd_draw_dot>
					}			
					chTemp <<= 1;
 80013a8:	7b7b      	ldrb	r3, [r7, #13]
 80013aa:	005b      	lsls	r3, r3, #1
 80013ac:	737b      	strb	r3, [r7, #13]
					hwYpos ++;
 80013ae:	88bb      	ldrh	r3, [r7, #4]
 80013b0:	3301      	adds	r3, #1
 80013b2:	80bb      	strh	r3, [r7, #4]
					if ((hwYpos - hwYpos0) == chSize) {
 80013b4:	88ba      	ldrh	r2, [r7, #4]
 80013b6:	897b      	ldrh	r3, [r7, #10]
 80013b8:	1ad2      	subs	r2, r2, r3
 80013ba:	78bb      	ldrb	r3, [r7, #2]
 80013bc:	429a      	cmp	r2, r3
 80013be:	d105      	bne.n	80013cc <lcd_display_char+0x13c>
						hwYpos = hwYpos0;
 80013c0:	897b      	ldrh	r3, [r7, #10]
 80013c2:	80bb      	strh	r3, [r7, #4]
						hwXpos ++;
 80013c4:	88fb      	ldrh	r3, [r7, #6]
 80013c6:	3301      	adds	r3, #1
 80013c8:	80fb      	strh	r3, [r7, #6]
						break;
 80013ca:	e005      	b.n	80013d8 <lcd_display_char+0x148>
        for (j = 0; j < 8; j ++) {
 80013cc:	7bbb      	ldrb	r3, [r7, #14]
 80013ce:	3301      	adds	r3, #1
 80013d0:	73bb      	strb	r3, [r7, #14]
 80013d2:	7bbb      	ldrb	r3, [r7, #14]
 80013d4:	2b07      	cmp	r3, #7
 80013d6:	d9db      	bls.n	8001390 <lcd_display_char+0x100>
    for (i = 0; i < chSize; i ++) {
 80013d8:	7bfb      	ldrb	r3, [r7, #15]
 80013da:	3301      	adds	r3, #1
 80013dc:	73fb      	strb	r3, [r7, #15]
 80013de:	7bfa      	ldrb	r2, [r7, #15]
 80013e0:	78bb      	ldrb	r3, [r7, #2]
 80013e2:	429a      	cmp	r2, r3
 80013e4:	d3b3      	bcc.n	800134e <lcd_display_char+0xbe>
 80013e6:	e000      	b.n	80013ea <lcd_display_char+0x15a>
		return;
 80013e8:	bf00      	nop
					}
				}  	 
    } 
}
 80013ea:	3714      	adds	r7, #20
 80013ec:	46bd      	mov	sp, r7
 80013ee:	bd90      	pop	{r4, r7, pc}
 80013f0:	0800a584 	.word	0x0800a584
 80013f4:	0800a9f8 	.word	0x0800a9f8

080013f8 <lcd_display_string>:
			  hwColor: string color
******************************************************************************/
void lcd_display_string(	uint16_t hwXpos,uint16_t hwYpos,
													const uint8_t *pchString,
													uint8_t chSize,uint16_t hwColor)
{
 80013f8:	b590      	push	{r4, r7, lr}
 80013fa:	b087      	sub	sp, #28
 80013fc:	af02      	add	r7, sp, #8
 80013fe:	60ba      	str	r2, [r7, #8]
 8001400:	461a      	mov	r2, r3
 8001402:	4603      	mov	r3, r0
 8001404:	81fb      	strh	r3, [r7, #14]
 8001406:	460b      	mov	r3, r1
 8001408:	81bb      	strh	r3, [r7, #12]
 800140a:	4613      	mov	r3, r2
 800140c:	71fb      	strb	r3, [r7, #7]

	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 800140e:	89fb      	ldrh	r3, [r7, #14]
 8001410:	2bef      	cmp	r3, #239	@ 0xef
 8001412:	d839      	bhi.n	8001488 <lcd_display_string+0x90>
 8001414:	89bb      	ldrh	r3, [r7, #12]
 8001416:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 800141a:	d235      	bcs.n	8001488 <lcd_display_string+0x90>
		return;
	}
	
    while (*pchString != '\0') {       
 800141c:	e02f      	b.n	800147e <lcd_display_string+0x86>
        if (hwXpos > (LCD_WIDTH - chSize / 2)) {
 800141e:	89fa      	ldrh	r2, [r7, #14]
 8001420:	79fb      	ldrb	r3, [r7, #7]
 8001422:	085b      	lsrs	r3, r3, #1
 8001424:	b2db      	uxtb	r3, r3
 8001426:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 800142a:	429a      	cmp	r2, r3
 800142c:	dd13      	ble.n	8001456 <lcd_display_string+0x5e>
					hwXpos = 0;
 800142e:	2300      	movs	r3, #0
 8001430:	81fb      	strh	r3, [r7, #14]
					hwYpos += chSize;
 8001432:	79fb      	ldrb	r3, [r7, #7]
 8001434:	b29a      	uxth	r2, r3
 8001436:	89bb      	ldrh	r3, [r7, #12]
 8001438:	4413      	add	r3, r2
 800143a:	81bb      	strh	r3, [r7, #12]
					if (hwYpos > (LCD_HEIGHT - chSize)) {
 800143c:	89ba      	ldrh	r2, [r7, #12]
 800143e:	79fb      	ldrb	r3, [r7, #7]
 8001440:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8001444:	429a      	cmp	r2, r3
 8001446:	dd06      	ble.n	8001456 <lcd_display_string+0x5e>
						hwYpos = hwXpos = 0;
 8001448:	2300      	movs	r3, #0
 800144a:	81fb      	strh	r3, [r7, #14]
 800144c:	89fb      	ldrh	r3, [r7, #14]
 800144e:	81bb      	strh	r3, [r7, #12]
						lcd_clear_screen(0x00);
 8001450:	2000      	movs	r0, #0
 8001452:	f7ff fe3d 	bl	80010d0 <lcd_clear_screen>
					}
				}
		
        lcd_display_char(hwXpos, hwYpos, (uint8_t)*pchString, chSize, hwColor);
 8001456:	68bb      	ldr	r3, [r7, #8]
 8001458:	781a      	ldrb	r2, [r3, #0]
 800145a:	79fc      	ldrb	r4, [r7, #7]
 800145c:	89b9      	ldrh	r1, [r7, #12]
 800145e:	89f8      	ldrh	r0, [r7, #14]
 8001460:	8c3b      	ldrh	r3, [r7, #32]
 8001462:	9300      	str	r3, [sp, #0]
 8001464:	4623      	mov	r3, r4
 8001466:	f7ff ff13 	bl	8001290 <lcd_display_char>
        hwXpos += chSize / 2;
 800146a:	79fb      	ldrb	r3, [r7, #7]
 800146c:	085b      	lsrs	r3, r3, #1
 800146e:	b2db      	uxtb	r3, r3
 8001470:	461a      	mov	r2, r3
 8001472:	89fb      	ldrh	r3, [r7, #14]
 8001474:	4413      	add	r3, r2
 8001476:	81fb      	strh	r3, [r7, #14]
        pchString ++;
 8001478:	68bb      	ldr	r3, [r7, #8]
 800147a:	3301      	adds	r3, #1
 800147c:	60bb      	str	r3, [r7, #8]
    while (*pchString != '\0') {       
 800147e:	68bb      	ldr	r3, [r7, #8]
 8001480:	781b      	ldrb	r3, [r3, #0]
 8001482:	2b00      	cmp	r3, #0
 8001484:	d1cb      	bne.n	800141e <lcd_display_string+0x26>
 8001486:	e000      	b.n	800148a <lcd_display_string+0x92>
		return;
 8001488:	bf00      	nop
    } 
}
 800148a:	3714      	adds	r7, #20
 800148c:	46bd      	mov	sp, r7
 800148e:	bd90      	pop	{r4, r7, pc}

08001490 <lcd_draw_dot>:
				 hwXpos: x axis position
				 hwYpos: y axis position
				hwColor:	dot color
******************************************************************************/
void lcd_draw_dot(uint16_t hwXpos, uint16_t hwYpos, uint16_t hwColor)
{
 8001490:	b580      	push	{r7, lr}
 8001492:	b082      	sub	sp, #8
 8001494:	af00      	add	r7, sp, #0
 8001496:	4603      	mov	r3, r0
 8001498:	80fb      	strh	r3, [r7, #6]
 800149a:	460b      	mov	r3, r1
 800149c:	80bb      	strh	r3, [r7, #4]
 800149e:	4613      	mov	r3, r2
 80014a0:	807b      	strh	r3, [r7, #2]
	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 80014a2:	88fb      	ldrh	r3, [r7, #6]
 80014a4:	2bef      	cmp	r3, #239	@ 0xef
 80014a6:	d812      	bhi.n	80014ce <lcd_draw_dot+0x3e>
 80014a8:	88bb      	ldrh	r3, [r7, #4]
 80014aa:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80014ae:	d20e      	bcs.n	80014ce <lcd_draw_dot+0x3e>
		return;
	}
	lcd_set_cursor(hwXpos, hwYpos);
 80014b0:	88ba      	ldrh	r2, [r7, #4]
 80014b2:	88fb      	ldrh	r3, [r7, #6]
 80014b4:	4611      	mov	r1, r2
 80014b6:	4618      	mov	r0, r3
 80014b8:	f7ff feb6 	bl	8001228 <lcd_set_cursor>
#ifdef HX8347D_DEVICE
	lcd_write_byte(0x22, LCD_CMD);
#elif defined ST7789_DEVICE
	lcd_write_byte(0x2C, LCD_CMD);
 80014bc:	2100      	movs	r1, #0
 80014be:	202c      	movs	r0, #44	@ 0x2c
 80014c0:	f7ff fc78 	bl	8000db4 <lcd_write_byte>
#endif
	lcd_write_word(hwColor);
 80014c4:	887b      	ldrh	r3, [r7, #2]
 80014c6:	4618      	mov	r0, r3
 80014c8:	f7ff fca0 	bl	8000e0c <lcd_write_word>
 80014cc:	e000      	b.n	80014d0 <lcd_draw_dot+0x40>
		return;
 80014ce:	bf00      	nop

}
 80014d0:	3708      	adds	r7, #8
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bd80      	pop	{r7, pc}

080014d6 <lcd_draw_line>:
				hwColor: line color
******************************************************************************/
void lcd_draw_line(		uint16_t hwXpos0, uint16_t hwYpos0, 
                      uint16_t hwXpos1, uint16_t hwYpos1, 
                      uint16_t hwColor) 
{
 80014d6:	b590      	push	{r4, r7, lr}
 80014d8:	b08b      	sub	sp, #44	@ 0x2c
 80014da:	af00      	add	r7, sp, #0
 80014dc:	4604      	mov	r4, r0
 80014de:	4608      	mov	r0, r1
 80014e0:	4611      	mov	r1, r2
 80014e2:	461a      	mov	r2, r3
 80014e4:	4623      	mov	r3, r4
 80014e6:	80fb      	strh	r3, [r7, #6]
 80014e8:	4603      	mov	r3, r0
 80014ea:	80bb      	strh	r3, [r7, #4]
 80014ec:	460b      	mov	r3, r1
 80014ee:	807b      	strh	r3, [r7, #2]
 80014f0:	4613      	mov	r3, r2
 80014f2:	803b      	strh	r3, [r7, #0]
	int x = hwXpos1 - hwXpos0;
 80014f4:	887a      	ldrh	r2, [r7, #2]
 80014f6:	88fb      	ldrh	r3, [r7, #6]
 80014f8:	1ad3      	subs	r3, r2, r3
 80014fa:	623b      	str	r3, [r7, #32]
	int y = hwYpos1 - hwYpos0;
 80014fc:	883a      	ldrh	r2, [r7, #0]
 80014fe:	88bb      	ldrh	r3, [r7, #4]
 8001500:	1ad3      	subs	r3, r2, r3
 8001502:	61fb      	str	r3, [r7, #28]
	int dx = abs(x), sx = hwXpos0 < hwXpos1 ? 1 : -1;
 8001504:	6a3b      	ldr	r3, [r7, #32]
 8001506:	2b00      	cmp	r3, #0
 8001508:	bfb8      	it	lt
 800150a:	425b      	neglt	r3, r3
 800150c:	61bb      	str	r3, [r7, #24]
 800150e:	88fa      	ldrh	r2, [r7, #6]
 8001510:	887b      	ldrh	r3, [r7, #2]
 8001512:	429a      	cmp	r2, r3
 8001514:	d201      	bcs.n	800151a <lcd_draw_line+0x44>
 8001516:	2301      	movs	r3, #1
 8001518:	e001      	b.n	800151e <lcd_draw_line+0x48>
 800151a:	f04f 33ff 	mov.w	r3, #4294967295
 800151e:	617b      	str	r3, [r7, #20]
	int dy = -abs(y), sy = hwYpos0 < hwYpos1 ? 1 : -1;
 8001520:	69fb      	ldr	r3, [r7, #28]
 8001522:	2b00      	cmp	r3, #0
 8001524:	bfb8      	it	lt
 8001526:	425b      	neglt	r3, r3
 8001528:	425b      	negs	r3, r3
 800152a:	613b      	str	r3, [r7, #16]
 800152c:	88ba      	ldrh	r2, [r7, #4]
 800152e:	883b      	ldrh	r3, [r7, #0]
 8001530:	429a      	cmp	r2, r3
 8001532:	d201      	bcs.n	8001538 <lcd_draw_line+0x62>
 8001534:	2301      	movs	r3, #1
 8001536:	e001      	b.n	800153c <lcd_draw_line+0x66>
 8001538:	f04f 33ff 	mov.w	r3, #4294967295
 800153c:	60fb      	str	r3, [r7, #12]
	int err = dx + dy, e2;
 800153e:	69ba      	ldr	r2, [r7, #24]
 8001540:	693b      	ldr	r3, [r7, #16]
 8001542:	4413      	add	r3, r2
 8001544:	627b      	str	r3, [r7, #36]	@ 0x24

	if (hwXpos0 >= LCD_WIDTH || hwYpos0 >= LCD_HEIGHT || hwXpos1 >= LCD_WIDTH || hwYpos1 >= LCD_HEIGHT) {
 8001546:	88fb      	ldrh	r3, [r7, #6]
 8001548:	2bef      	cmp	r3, #239	@ 0xef
 800154a:	d836      	bhi.n	80015ba <lcd_draw_line+0xe4>
 800154c:	88bb      	ldrh	r3, [r7, #4]
 800154e:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001552:	d232      	bcs.n	80015ba <lcd_draw_line+0xe4>
 8001554:	887b      	ldrh	r3, [r7, #2]
 8001556:	2bef      	cmp	r3, #239	@ 0xef
 8001558:	d82f      	bhi.n	80015ba <lcd_draw_line+0xe4>
 800155a:	883b      	ldrh	r3, [r7, #0]
 800155c:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001560:	d22b      	bcs.n	80015ba <lcd_draw_line+0xe4>
		return;
	}
    
    for (;;){
        lcd_draw_dot(hwXpos0, hwYpos0 , hwColor);
 8001562:	8f3a      	ldrh	r2, [r7, #56]	@ 0x38
 8001564:	88b9      	ldrh	r1, [r7, #4]
 8001566:	88fb      	ldrh	r3, [r7, #6]
 8001568:	4618      	mov	r0, r3
 800156a:	f7ff ff91 	bl	8001490 <lcd_draw_dot>
        e2 = 2 * err;
 800156e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001570:	005b      	lsls	r3, r3, #1
 8001572:	60bb      	str	r3, [r7, #8]
        if (e2 >= dy) {     
 8001574:	68ba      	ldr	r2, [r7, #8]
 8001576:	693b      	ldr	r3, [r7, #16]
 8001578:	429a      	cmp	r2, r3
 800157a:	db0c      	blt.n	8001596 <lcd_draw_line+0xc0>
            if (hwXpos0 == hwXpos1) break;
 800157c:	88fa      	ldrh	r2, [r7, #6]
 800157e:	887b      	ldrh	r3, [r7, #2]
 8001580:	429a      	cmp	r2, r3
 8001582:	d01c      	beq.n	80015be <lcd_draw_line+0xe8>
            err += dy; hwXpos0 += sx;
 8001584:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001586:	693b      	ldr	r3, [r7, #16]
 8001588:	4413      	add	r3, r2
 800158a:	627b      	str	r3, [r7, #36]	@ 0x24
 800158c:	697b      	ldr	r3, [r7, #20]
 800158e:	b29a      	uxth	r2, r3
 8001590:	88fb      	ldrh	r3, [r7, #6]
 8001592:	4413      	add	r3, r2
 8001594:	80fb      	strh	r3, [r7, #6]
        }
        if (e2 <= dx) {
 8001596:	68ba      	ldr	r2, [r7, #8]
 8001598:	69bb      	ldr	r3, [r7, #24]
 800159a:	429a      	cmp	r2, r3
 800159c:	dce1      	bgt.n	8001562 <lcd_draw_line+0x8c>
            if (hwYpos0 == hwYpos1) break;
 800159e:	88ba      	ldrh	r2, [r7, #4]
 80015a0:	883b      	ldrh	r3, [r7, #0]
 80015a2:	429a      	cmp	r2, r3
 80015a4:	d00d      	beq.n	80015c2 <lcd_draw_line+0xec>
            err += dx; hwYpos0 += sy;
 80015a6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015a8:	69bb      	ldr	r3, [r7, #24]
 80015aa:	4413      	add	r3, r2
 80015ac:	627b      	str	r3, [r7, #36]	@ 0x24
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	b29a      	uxth	r2, r3
 80015b2:	88bb      	ldrh	r3, [r7, #4]
 80015b4:	4413      	add	r3, r2
 80015b6:	80bb      	strh	r3, [r7, #4]
        lcd_draw_dot(hwXpos0, hwYpos0 , hwColor);
 80015b8:	e7d3      	b.n	8001562 <lcd_draw_line+0x8c>
		return;
 80015ba:	bf00      	nop
 80015bc:	e002      	b.n	80015c4 <lcd_draw_line+0xee>
            if (hwXpos0 == hwXpos1) break;
 80015be:	bf00      	nop
 80015c0:	e000      	b.n	80015c4 <lcd_draw_line+0xee>
            if (hwYpos0 == hwYpos1) break;
 80015c2:	bf00      	nop
        }
    }
}
 80015c4:	372c      	adds	r7, #44	@ 0x2c
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bd90      	pop	{r4, r7, pc}

080015ca <lcd_draw_circle>:
			 hwRadius: circle radius
				hwColor: cirlce color
******************************************************************************/
void lcd_draw_circle(		uint16_t hwXpos, uint16_t hwYpos, 
                        uint16_t hwRadius,uint16_t hwColor) 
{
 80015ca:	b590      	push	{r4, r7, lr}
 80015cc:	b087      	sub	sp, #28
 80015ce:	af00      	add	r7, sp, #0
 80015d0:	4604      	mov	r4, r0
 80015d2:	4608      	mov	r0, r1
 80015d4:	4611      	mov	r1, r2
 80015d6:	461a      	mov	r2, r3
 80015d8:	4623      	mov	r3, r4
 80015da:	80fb      	strh	r3, [r7, #6]
 80015dc:	4603      	mov	r3, r0
 80015de:	80bb      	strh	r3, [r7, #4]
 80015e0:	460b      	mov	r3, r1
 80015e2:	807b      	strh	r3, [r7, #2]
 80015e4:	4613      	mov	r3, r2
 80015e6:	803b      	strh	r3, [r7, #0]
	int x = -hwRadius, y = 0, err = 2 - 2 * hwRadius, e2;
 80015e8:	887b      	ldrh	r3, [r7, #2]
 80015ea:	425b      	negs	r3, r3
 80015ec:	617b      	str	r3, [r7, #20]
 80015ee:	2300      	movs	r3, #0
 80015f0:	613b      	str	r3, [r7, #16]
 80015f2:	887b      	ldrh	r3, [r7, #2]
 80015f4:	f1c3 0301 	rsb	r3, r3, #1
 80015f8:	005b      	lsls	r3, r3, #1
 80015fa:	60fb      	str	r3, [r7, #12]

	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 80015fc:	88fb      	ldrh	r3, [r7, #6]
 80015fe:	2bef      	cmp	r3, #239	@ 0xef
 8001600:	d866      	bhi.n	80016d0 <lcd_draw_circle+0x106>
 8001602:	88bb      	ldrh	r3, [r7, #4]
 8001604:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001608:	d262      	bcs.n	80016d0 <lcd_draw_circle+0x106>
		return;
	}
	
    do {
        lcd_draw_dot(hwXpos - x, hwYpos + y, hwColor);
 800160a:	697b      	ldr	r3, [r7, #20]
 800160c:	b29b      	uxth	r3, r3
 800160e:	88fa      	ldrh	r2, [r7, #6]
 8001610:	1ad3      	subs	r3, r2, r3
 8001612:	b298      	uxth	r0, r3
 8001614:	693b      	ldr	r3, [r7, #16]
 8001616:	b29a      	uxth	r2, r3
 8001618:	88bb      	ldrh	r3, [r7, #4]
 800161a:	4413      	add	r3, r2
 800161c:	b29b      	uxth	r3, r3
 800161e:	883a      	ldrh	r2, [r7, #0]
 8001620:	4619      	mov	r1, r3
 8001622:	f7ff ff35 	bl	8001490 <lcd_draw_dot>
        lcd_draw_dot(hwXpos + x, hwYpos + y, hwColor);
 8001626:	697b      	ldr	r3, [r7, #20]
 8001628:	b29a      	uxth	r2, r3
 800162a:	88fb      	ldrh	r3, [r7, #6]
 800162c:	4413      	add	r3, r2
 800162e:	b298      	uxth	r0, r3
 8001630:	693b      	ldr	r3, [r7, #16]
 8001632:	b29a      	uxth	r2, r3
 8001634:	88bb      	ldrh	r3, [r7, #4]
 8001636:	4413      	add	r3, r2
 8001638:	b29b      	uxth	r3, r3
 800163a:	883a      	ldrh	r2, [r7, #0]
 800163c:	4619      	mov	r1, r3
 800163e:	f7ff ff27 	bl	8001490 <lcd_draw_dot>
        lcd_draw_dot(hwXpos + x, hwYpos - y, hwColor);
 8001642:	697b      	ldr	r3, [r7, #20]
 8001644:	b29a      	uxth	r2, r3
 8001646:	88fb      	ldrh	r3, [r7, #6]
 8001648:	4413      	add	r3, r2
 800164a:	b298      	uxth	r0, r3
 800164c:	693b      	ldr	r3, [r7, #16]
 800164e:	b29b      	uxth	r3, r3
 8001650:	88ba      	ldrh	r2, [r7, #4]
 8001652:	1ad3      	subs	r3, r2, r3
 8001654:	b29b      	uxth	r3, r3
 8001656:	883a      	ldrh	r2, [r7, #0]
 8001658:	4619      	mov	r1, r3
 800165a:	f7ff ff19 	bl	8001490 <lcd_draw_dot>
        lcd_draw_dot(hwXpos - x, hwYpos - y, hwColor);
 800165e:	697b      	ldr	r3, [r7, #20]
 8001660:	b29b      	uxth	r3, r3
 8001662:	88fa      	ldrh	r2, [r7, #6]
 8001664:	1ad3      	subs	r3, r2, r3
 8001666:	b298      	uxth	r0, r3
 8001668:	693b      	ldr	r3, [r7, #16]
 800166a:	b29b      	uxth	r3, r3
 800166c:	88ba      	ldrh	r2, [r7, #4]
 800166e:	1ad3      	subs	r3, r2, r3
 8001670:	b29b      	uxth	r3, r3
 8001672:	883a      	ldrh	r2, [r7, #0]
 8001674:	4619      	mov	r1, r3
 8001676:	f7ff ff0b 	bl	8001490 <lcd_draw_dot>
        e2 = err;
 800167a:	68fb      	ldr	r3, [r7, #12]
 800167c:	60bb      	str	r3, [r7, #8]
        if (e2 <= y) {
 800167e:	68ba      	ldr	r2, [r7, #8]
 8001680:	693b      	ldr	r3, [r7, #16]
 8001682:	429a      	cmp	r2, r3
 8001684:	dc13      	bgt.n	80016ae <lcd_draw_circle+0xe4>
            err += ++ y * 2 + 1;
 8001686:	693b      	ldr	r3, [r7, #16]
 8001688:	3301      	adds	r3, #1
 800168a:	613b      	str	r3, [r7, #16]
 800168c:	693b      	ldr	r3, [r7, #16]
 800168e:	005b      	lsls	r3, r3, #1
 8001690:	3301      	adds	r3, #1
 8001692:	68fa      	ldr	r2, [r7, #12]
 8001694:	4413      	add	r3, r2
 8001696:	60fb      	str	r3, [r7, #12]
            if(-x == y && e2 <= x) e2 = 0;
 8001698:	697b      	ldr	r3, [r7, #20]
 800169a:	425b      	negs	r3, r3
 800169c:	693a      	ldr	r2, [r7, #16]
 800169e:	429a      	cmp	r2, r3
 80016a0:	d105      	bne.n	80016ae <lcd_draw_circle+0xe4>
 80016a2:	68ba      	ldr	r2, [r7, #8]
 80016a4:	697b      	ldr	r3, [r7, #20]
 80016a6:	429a      	cmp	r2, r3
 80016a8:	dc01      	bgt.n	80016ae <lcd_draw_circle+0xe4>
 80016aa:	2300      	movs	r3, #0
 80016ac:	60bb      	str	r3, [r7, #8]
        }
        if(e2 > x) err += ++ x * 2 + 1;
 80016ae:	68ba      	ldr	r2, [r7, #8]
 80016b0:	697b      	ldr	r3, [r7, #20]
 80016b2:	429a      	cmp	r2, r3
 80016b4:	dd08      	ble.n	80016c8 <lcd_draw_circle+0xfe>
 80016b6:	697b      	ldr	r3, [r7, #20]
 80016b8:	3301      	adds	r3, #1
 80016ba:	617b      	str	r3, [r7, #20]
 80016bc:	697b      	ldr	r3, [r7, #20]
 80016be:	005b      	lsls	r3, r3, #1
 80016c0:	3301      	adds	r3, #1
 80016c2:	68fa      	ldr	r2, [r7, #12]
 80016c4:	4413      	add	r3, r2
 80016c6:	60fb      	str	r3, [r7, #12]
    } while(x <= 0);
 80016c8:	697b      	ldr	r3, [r7, #20]
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	dd9d      	ble.n	800160a <lcd_draw_circle+0x40>
 80016ce:	e000      	b.n	80016d2 <lcd_draw_circle+0x108>
		return;
 80016d0:	bf00      	nop
}
 80016d2:	371c      	adds	r7, #28
 80016d4:	46bd      	mov	sp, r7
 80016d6:	bd90      	pop	{r4, r7, pc}

080016d8 <lcd_draw_v_line>:
			 hwHeight: line height
			  hwColor: vertical linc color
******************************************************************************/
void lcd_draw_v_line(		uint16_t hwXpos,uint16_t hwYpos, 
                        uint16_t hwHeight,uint16_t hwColor)  
{	
 80016d8:	b590      	push	{r4, r7, lr}
 80016da:	b085      	sub	sp, #20
 80016dc:	af00      	add	r7, sp, #0
 80016de:	4604      	mov	r4, r0
 80016e0:	4608      	mov	r0, r1
 80016e2:	4611      	mov	r1, r2
 80016e4:	461a      	mov	r2, r3
 80016e6:	4623      	mov	r3, r4
 80016e8:	80fb      	strh	r3, [r7, #6]
 80016ea:	4603      	mov	r3, r0
 80016ec:	80bb      	strh	r3, [r7, #4]
 80016ee:	460b      	mov	r3, r1
 80016f0:	807b      	strh	r3, [r7, #2]
 80016f2:	4613      	mov	r3, r2
 80016f4:	803b      	strh	r3, [r7, #0]
	uint16_t i, y1 = MIN(hwYpos + hwHeight, LCD_HEIGHT - 1);
 80016f6:	88ba      	ldrh	r2, [r7, #4]
 80016f8:	887b      	ldrh	r3, [r7, #2]
 80016fa:	4413      	add	r3, r2
 80016fc:	f240 123f 	movw	r2, #319	@ 0x13f
 8001700:	4293      	cmp	r3, r2
 8001702:	bfa8      	it	ge
 8001704:	4613      	movge	r3, r2
 8001706:	81bb      	strh	r3, [r7, #12]

	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 8001708:	88fb      	ldrh	r3, [r7, #6]
 800170a:	2bef      	cmp	r3, #239	@ 0xef
 800170c:	d814      	bhi.n	8001738 <lcd_draw_v_line+0x60>
 800170e:	88bb      	ldrh	r3, [r7, #4]
 8001710:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001714:	d210      	bcs.n	8001738 <lcd_draw_v_line+0x60>
		return;
	}
	
    for (i = hwYpos; i < y1; i ++) {
 8001716:	88bb      	ldrh	r3, [r7, #4]
 8001718:	81fb      	strh	r3, [r7, #14]
 800171a:	e008      	b.n	800172e <lcd_draw_v_line+0x56>
        lcd_draw_dot(hwXpos, i, hwColor);
 800171c:	883a      	ldrh	r2, [r7, #0]
 800171e:	89f9      	ldrh	r1, [r7, #14]
 8001720:	88fb      	ldrh	r3, [r7, #6]
 8001722:	4618      	mov	r0, r3
 8001724:	f7ff feb4 	bl	8001490 <lcd_draw_dot>
    for (i = hwYpos; i < y1; i ++) {
 8001728:	89fb      	ldrh	r3, [r7, #14]
 800172a:	3301      	adds	r3, #1
 800172c:	81fb      	strh	r3, [r7, #14]
 800172e:	89fa      	ldrh	r2, [r7, #14]
 8001730:	89bb      	ldrh	r3, [r7, #12]
 8001732:	429a      	cmp	r2, r3
 8001734:	d3f2      	bcc.n	800171c <lcd_draw_v_line+0x44>
 8001736:	e000      	b.n	800173a <lcd_draw_v_line+0x62>
		return;
 8001738:	bf00      	nop
    }
}
 800173a:	3714      	adds	r7, #20
 800173c:	46bd      	mov	sp, r7
 800173e:	bd90      	pop	{r4, r7, pc}

08001740 <lcd_draw_h_line>:
			  hwWidth: line width
			  hwColor: horizonal linc color
******************************************************************************/
void lcd_draw_h_line(		uint16_t hwXpos, uint16_t hwYpos,  
                        uint16_t hwWidth,uint16_t hwColor)
{	
 8001740:	b590      	push	{r4, r7, lr}
 8001742:	b085      	sub	sp, #20
 8001744:	af00      	add	r7, sp, #0
 8001746:	4604      	mov	r4, r0
 8001748:	4608      	mov	r0, r1
 800174a:	4611      	mov	r1, r2
 800174c:	461a      	mov	r2, r3
 800174e:	4623      	mov	r3, r4
 8001750:	80fb      	strh	r3, [r7, #6]
 8001752:	4603      	mov	r3, r0
 8001754:	80bb      	strh	r3, [r7, #4]
 8001756:	460b      	mov	r3, r1
 8001758:	807b      	strh	r3, [r7, #2]
 800175a:	4613      	mov	r3, r2
 800175c:	803b      	strh	r3, [r7, #0]
	uint16_t i, x1 = MIN(hwXpos + hwWidth, LCD_WIDTH - 1);
 800175e:	88fa      	ldrh	r2, [r7, #6]
 8001760:	887b      	ldrh	r3, [r7, #2]
 8001762:	4413      	add	r3, r2
 8001764:	2bef      	cmp	r3, #239	@ 0xef
 8001766:	bfa8      	it	ge
 8001768:	23ef      	movge	r3, #239	@ 0xef
 800176a:	81bb      	strh	r3, [r7, #12]

	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 800176c:	88fb      	ldrh	r3, [r7, #6]
 800176e:	2bef      	cmp	r3, #239	@ 0xef
 8001770:	d814      	bhi.n	800179c <lcd_draw_h_line+0x5c>
 8001772:	88bb      	ldrh	r3, [r7, #4]
 8001774:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8001778:	d210      	bcs.n	800179c <lcd_draw_h_line+0x5c>
		return;
	}
	
    for (i = hwXpos; i < x1; i ++) {
 800177a:	88fb      	ldrh	r3, [r7, #6]
 800177c:	81fb      	strh	r3, [r7, #14]
 800177e:	e008      	b.n	8001792 <lcd_draw_h_line+0x52>
        lcd_draw_dot(i, hwYpos, hwColor);
 8001780:	883a      	ldrh	r2, [r7, #0]
 8001782:	88b9      	ldrh	r1, [r7, #4]
 8001784:	89fb      	ldrh	r3, [r7, #14]
 8001786:	4618      	mov	r0, r3
 8001788:	f7ff fe82 	bl	8001490 <lcd_draw_dot>
    for (i = hwXpos; i < x1; i ++) {
 800178c:	89fb      	ldrh	r3, [r7, #14]
 800178e:	3301      	adds	r3, #1
 8001790:	81fb      	strh	r3, [r7, #14]
 8001792:	89fa      	ldrh	r2, [r7, #14]
 8001794:	89bb      	ldrh	r3, [r7, #12]
 8001796:	429a      	cmp	r2, r3
 8001798:	d3f2      	bcc.n	8001780 <lcd_draw_h_line+0x40>
 800179a:	e000      	b.n	800179e <lcd_draw_h_line+0x5e>
		return;
 800179c:	bf00      	nop
    }
}
 800179e:	3714      	adds	r7, #20
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bd90      	pop	{r4, r7, pc}

080017a4 <lcd_draw_rect>:
			  hwColor: rectangle color
******************************************************************************/
void lcd_draw_rect(		uint16_t hwXpos,  
                      uint16_t hwYpos,uint16_t hwWidth, 
                      uint16_t hwHeight,uint16_t hwColor) 
{
 80017a4:	b590      	push	{r4, r7, lr}
 80017a6:	b083      	sub	sp, #12
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	4604      	mov	r4, r0
 80017ac:	4608      	mov	r0, r1
 80017ae:	4611      	mov	r1, r2
 80017b0:	461a      	mov	r2, r3
 80017b2:	4623      	mov	r3, r4
 80017b4:	80fb      	strh	r3, [r7, #6]
 80017b6:	4603      	mov	r3, r0
 80017b8:	80bb      	strh	r3, [r7, #4]
 80017ba:	460b      	mov	r3, r1
 80017bc:	807b      	strh	r3, [r7, #2]
 80017be:	4613      	mov	r3, r2
 80017c0:	803b      	strh	r3, [r7, #0]
	if (hwXpos >= LCD_WIDTH || hwYpos >= LCD_HEIGHT) {
 80017c2:	88fb      	ldrh	r3, [r7, #6]
 80017c4:	2bef      	cmp	r3, #239	@ 0xef
 80017c6:	d824      	bhi.n	8001812 <lcd_draw_rect+0x6e>
 80017c8:	88bb      	ldrh	r3, [r7, #4]
 80017ca:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80017ce:	d220      	bcs.n	8001812 <lcd_draw_rect+0x6e>
		return;
	}

	lcd_draw_h_line(hwXpos, hwYpos, hwWidth, hwColor);
 80017d0:	8b3b      	ldrh	r3, [r7, #24]
 80017d2:	887a      	ldrh	r2, [r7, #2]
 80017d4:	88b9      	ldrh	r1, [r7, #4]
 80017d6:	88f8      	ldrh	r0, [r7, #6]
 80017d8:	f7ff ffb2 	bl	8001740 <lcd_draw_h_line>
	lcd_draw_h_line(hwXpos, hwYpos + hwHeight, hwWidth, hwColor);
 80017dc:	88ba      	ldrh	r2, [r7, #4]
 80017de:	883b      	ldrh	r3, [r7, #0]
 80017e0:	4413      	add	r3, r2
 80017e2:	b299      	uxth	r1, r3
 80017e4:	8b3b      	ldrh	r3, [r7, #24]
 80017e6:	887a      	ldrh	r2, [r7, #2]
 80017e8:	88f8      	ldrh	r0, [r7, #6]
 80017ea:	f7ff ffa9 	bl	8001740 <lcd_draw_h_line>
	lcd_draw_v_line(hwXpos, hwYpos, hwHeight, hwColor);
 80017ee:	8b3b      	ldrh	r3, [r7, #24]
 80017f0:	883a      	ldrh	r2, [r7, #0]
 80017f2:	88b9      	ldrh	r1, [r7, #4]
 80017f4:	88f8      	ldrh	r0, [r7, #6]
 80017f6:	f7ff ff6f 	bl	80016d8 <lcd_draw_v_line>
	lcd_draw_v_line(hwXpos + hwWidth, hwYpos, hwHeight + 1, hwColor);
 80017fa:	88fa      	ldrh	r2, [r7, #6]
 80017fc:	887b      	ldrh	r3, [r7, #2]
 80017fe:	4413      	add	r3, r2
 8001800:	b298      	uxth	r0, r3
 8001802:	883b      	ldrh	r3, [r7, #0]
 8001804:	3301      	adds	r3, #1
 8001806:	b29a      	uxth	r2, r3
 8001808:	8b3b      	ldrh	r3, [r7, #24]
 800180a:	88b9      	ldrh	r1, [r7, #4]
 800180c:	f7ff ff64 	bl	80016d8 <lcd_draw_v_line>
 8001810:	e000      	b.n	8001814 <lcd_draw_rect+0x70>
		return;
 8001812:	bf00      	nop
}
 8001814:	370c      	adds	r7, #12
 8001816:	46bd      	mov	sp, r7
 8001818:	bd90      	pop	{r4, r7, pc}

0800181a <FRAM_Init>:
 800181a:	b580      	push	{r7, lr}
 800181c:	b082      	sub	sp, #8
 800181e:	af00      	add	r7, sp, #0
 8001820:	6078      	str	r0, [r7, #4]
 8001822:	230a      	movs	r3, #10
 8001824:	2202      	movs	r2, #2
 8001826:	21a0      	movs	r1, #160	@ 0xa0
 8001828:	6878      	ldr	r0, [r7, #4]
 800182a:	f004 f8dd 	bl	80059e8 <HAL_I2C_IsDeviceReady>
 800182e:	4603      	mov	r3, r0
 8001830:	4618      	mov	r0, r3
 8001832:	3708      	adds	r7, #8
 8001834:	46bd      	mov	sp, r7
 8001836:	bd80      	pop	{r7, pc}

08001838 <FRAM_WriteBytes>:
 8001838:	b580      	push	{r7, lr}
 800183a:	b088      	sub	sp, #32
 800183c:	af04      	add	r7, sp, #16
 800183e:	60f8      	str	r0, [r7, #12]
 8001840:	607a      	str	r2, [r7, #4]
 8001842:	461a      	mov	r2, r3
 8001844:	460b      	mov	r3, r1
 8001846:	817b      	strh	r3, [r7, #10]
 8001848:	4613      	mov	r3, r2
 800184a:	813b      	strh	r3, [r7, #8]
 800184c:	897a      	ldrh	r2, [r7, #10]
 800184e:	893b      	ldrh	r3, [r7, #8]
 8001850:	4413      	add	r3, r2
 8001852:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001856:	dd01      	ble.n	800185c <FRAM_WriteBytes+0x24>
 8001858:	2301      	movs	r3, #1
 800185a:	e00c      	b.n	8001876 <FRAM_WriteBytes+0x3e>
 800185c:	897a      	ldrh	r2, [r7, #10]
 800185e:	2364      	movs	r3, #100	@ 0x64
 8001860:	9302      	str	r3, [sp, #8]
 8001862:	893b      	ldrh	r3, [r7, #8]
 8001864:	9301      	str	r3, [sp, #4]
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	9300      	str	r3, [sp, #0]
 800186a:	2310      	movs	r3, #16
 800186c:	21a0      	movs	r1, #160	@ 0xa0
 800186e:	68f8      	ldr	r0, [r7, #12]
 8001870:	f003 ffc0 	bl	80057f4 <HAL_I2C_Mem_Write>
 8001874:	4603      	mov	r3, r0
 8001876:	4618      	mov	r0, r3
 8001878:	3710      	adds	r7, #16
 800187a:	46bd      	mov	sp, r7
 800187c:	bd80      	pop	{r7, pc}
	...

08001880 <vApplicationGetIdleTaskMemory>:
 8001880:	b480      	push	{r7}
 8001882:	b085      	sub	sp, #20
 8001884:	af00      	add	r7, sp, #0
 8001886:	60f8      	str	r0, [r7, #12]
 8001888:	60b9      	str	r1, [r7, #8]
 800188a:	607a      	str	r2, [r7, #4]
 800188c:	68fb      	ldr	r3, [r7, #12]
 800188e:	4a07      	ldr	r2, [pc, #28]	@ (80018ac <vApplicationGetIdleTaskMemory+0x2c>)
 8001890:	601a      	str	r2, [r3, #0]
 8001892:	68bb      	ldr	r3, [r7, #8]
 8001894:	4a06      	ldr	r2, [pc, #24]	@ (80018b0 <vApplicationGetIdleTaskMemory+0x30>)
 8001896:	601a      	str	r2, [r3, #0]
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	2280      	movs	r2, #128	@ 0x80
 800189c:	601a      	str	r2, [r3, #0]
 800189e:	bf00      	nop
 80018a0:	3714      	adds	r7, #20
 80018a2:	46bd      	mov	sp, r7
 80018a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a8:	4770      	bx	lr
 80018aa:	bf00      	nop
 80018ac:	20000084 	.word	0x20000084
 80018b0:	200000d8 	.word	0x200000d8

080018b4 <write_to_backup_sram>:

    result = HAL_I2C_Master_Receive(&hi2c2, FRAM_ADDR, data, len, HAL_MAX_DELAY);
    return (result == HAL_OK) ? 0 : 1;
}
*/
int8_t write_to_backup_sram(uint8_t *data, uint16_t bytes, uint16_t offset) {
 80018b4:	b480      	push	{r7}
 80018b6:	b085      	sub	sp, #20
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	6078      	str	r0, [r7, #4]
 80018bc:	460b      	mov	r3, r1
 80018be:	807b      	strh	r3, [r7, #2]
 80018c0:	4613      	mov	r3, r2
 80018c2:	803b      	strh	r3, [r7, #0]
  const uint16_t backup_size = 0x1000;
 80018c4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80018c8:	81bb      	strh	r3, [r7, #12]
  uint8_t* base_addr = (uint8_t *) BKPSRAM_BASE;
 80018ca:	4b1f      	ldr	r3, [pc, #124]	@ (8001948 <write_to_backup_sram+0x94>)
 80018cc:	60bb      	str	r3, [r7, #8]
  uint16_t i;

  if (bytes + offset >= backup_size) {
 80018ce:	887a      	ldrh	r2, [r7, #2]
 80018d0:	883b      	ldrh	r3, [r7, #0]
 80018d2:	441a      	add	r2, r3
 80018d4:	89bb      	ldrh	r3, [r7, #12]
 80018d6:	429a      	cmp	r2, r3
 80018d8:	db02      	blt.n	80018e0 <write_to_backup_sram+0x2c>
	  return -1;
 80018da:	f04f 33ff 	mov.w	r3, #4294967295
 80018de:	e02c      	b.n	800193a <write_to_backup_sram+0x86>
  }

  ENABLE_BIT(RCC->AHB1ENR, RCC_AHB1ENR_BKPSRAMEN_Pos);
 80018e0:	4b1a      	ldr	r3, [pc, #104]	@ (800194c <write_to_backup_sram+0x98>)
 80018e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018e4:	4a19      	ldr	r2, [pc, #100]	@ (800194c <write_to_backup_sram+0x98>)
 80018e6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80018ea:	6313      	str	r3, [r2, #48]	@ 0x30
  ENABLE_BIT(RCC->AHB1ENR, RCC_APB1ENR_PWREN_Pos);
 80018ec:	4b17      	ldr	r3, [pc, #92]	@ (800194c <write_to_backup_sram+0x98>)
 80018ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018f0:	4a16      	ldr	r2, [pc, #88]	@ (800194c <write_to_backup_sram+0x98>)
 80018f2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80018f6:	6313      	str	r3, [r2, #48]	@ 0x30
  // ENABLE_BIT(PWR->CR, 8);
  // ENABLE_BIT(PWR->CSR, 9);
  ENABLE_BIT(PWR->CR, PWR_CR_DBP_Pos);
 80018f8:	4b15      	ldr	r3, [pc, #84]	@ (8001950 <write_to_backup_sram+0x9c>)
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	4a14      	ldr	r2, [pc, #80]	@ (8001950 <write_to_backup_sram+0x9c>)
 80018fe:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001902:	6013      	str	r3, [r2, #0]

  for (i = 0; i < bytes; i++) {
 8001904:	2300      	movs	r3, #0
 8001906:	81fb      	strh	r3, [r7, #14]
 8001908:	e00c      	b.n	8001924 <write_to_backup_sram+0x70>
	  *(base_addr + offset + i) = *(data + i);
 800190a:	89fb      	ldrh	r3, [r7, #14]
 800190c:	687a      	ldr	r2, [r7, #4]
 800190e:	441a      	add	r2, r3
 8001910:	8839      	ldrh	r1, [r7, #0]
 8001912:	89fb      	ldrh	r3, [r7, #14]
 8001914:	440b      	add	r3, r1
 8001916:	68b9      	ldr	r1, [r7, #8]
 8001918:	440b      	add	r3, r1
 800191a:	7812      	ldrb	r2, [r2, #0]
 800191c:	701a      	strb	r2, [r3, #0]
  for (i = 0; i < bytes; i++) {
 800191e:	89fb      	ldrh	r3, [r7, #14]
 8001920:	3301      	adds	r3, #1
 8001922:	81fb      	strh	r3, [r7, #14]
 8001924:	89fa      	ldrh	r2, [r7, #14]
 8001926:	887b      	ldrh	r3, [r7, #2]
 8001928:	429a      	cmp	r2, r3
 800192a:	d3ee      	bcc.n	800190a <write_to_backup_sram+0x56>
  }

  // DISABLE_BIT(PWR->CR, 8);
  DISABLE_BIT(PWR->CR, PWR_CR_DBP_Pos);
 800192c:	4b08      	ldr	r3, [pc, #32]	@ (8001950 <write_to_backup_sram+0x9c>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	4a07      	ldr	r2, [pc, #28]	@ (8001950 <write_to_backup_sram+0x9c>)
 8001932:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001936:	6013      	str	r3, [r2, #0]
  return 0;
 8001938:	2300      	movs	r3, #0
}
 800193a:	4618      	mov	r0, r3
 800193c:	3714      	adds	r7, #20
 800193e:	46bd      	mov	sp, r7
 8001940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001944:	4770      	bx	lr
 8001946:	bf00      	nop
 8001948:	40024000 	.word	0x40024000
 800194c:	40023800 	.word	0x40023800
 8001950:	40007000 	.word	0x40007000

08001954 <read_from_backup_sram>:

int8_t read_from_backup_sram(uint8_t *data, uint16_t bytes, uint16_t offset) {
 8001954:	b480      	push	{r7}
 8001956:	b085      	sub	sp, #20
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	460b      	mov	r3, r1
 800195e:	807b      	strh	r3, [r7, #2]
 8001960:	4613      	mov	r3, r2
 8001962:	803b      	strh	r3, [r7, #0]
  const uint16_t backup_size = 0x1000;
 8001964:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001968:	81bb      	strh	r3, [r7, #12]
  uint8_t* base_addr = (uint8_t *) BKPSRAM_BASE;
 800196a:	4b1f      	ldr	r3, [pc, #124]	@ (80019e8 <read_from_backup_sram+0x94>)
 800196c:	60bb      	str	r3, [r7, #8]
  uint16_t i;

  if (bytes + offset >= backup_size) {
 800196e:	887a      	ldrh	r2, [r7, #2]
 8001970:	883b      	ldrh	r3, [r7, #0]
 8001972:	441a      	add	r2, r3
 8001974:	89bb      	ldrh	r3, [r7, #12]
 8001976:	429a      	cmp	r2, r3
 8001978:	db02      	blt.n	8001980 <read_from_backup_sram+0x2c>
	  return -1;
 800197a:	f04f 33ff 	mov.w	r3, #4294967295
 800197e:	e02c      	b.n	80019da <read_from_backup_sram+0x86>
  }

  ENABLE_BIT(RCC->AHB1ENR, RCC_APB1ENR_PWREN_Pos);
 8001980:	4b1a      	ldr	r3, [pc, #104]	@ (80019ec <read_from_backup_sram+0x98>)
 8001982:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001984:	4a19      	ldr	r2, [pc, #100]	@ (80019ec <read_from_backup_sram+0x98>)
 8001986:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800198a:	6313      	str	r3, [r2, #48]	@ 0x30
  // ENABLE_BIT(PWR->CR, 8);
  ENABLE_BIT(RCC->AHB1ENR, RCC_AHB1ENR_BKPSRAMEN_Pos);
 800198c:	4b17      	ldr	r3, [pc, #92]	@ (80019ec <read_from_backup_sram+0x98>)
 800198e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001990:	4a16      	ldr	r2, [pc, #88]	@ (80019ec <read_from_backup_sram+0x98>)
 8001992:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001996:	6313      	str	r3, [r2, #48]	@ 0x30
  ENABLE_BIT(PWR->CR, PWR_CR_DBP_Pos);
 8001998:	4b15      	ldr	r3, [pc, #84]	@ (80019f0 <read_from_backup_sram+0x9c>)
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	4a14      	ldr	r2, [pc, #80]	@ (80019f0 <read_from_backup_sram+0x9c>)
 800199e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80019a2:	6013      	str	r3, [r2, #0]

  for (i = 0; i < bytes; i++) {
 80019a4:	2300      	movs	r3, #0
 80019a6:	81fb      	strh	r3, [r7, #14]
 80019a8:	e00c      	b.n	80019c4 <read_from_backup_sram+0x70>
	  *(data + i) = *(base_addr + offset + i);
 80019aa:	883a      	ldrh	r2, [r7, #0]
 80019ac:	89fb      	ldrh	r3, [r7, #14]
 80019ae:	4413      	add	r3, r2
 80019b0:	68ba      	ldr	r2, [r7, #8]
 80019b2:	441a      	add	r2, r3
 80019b4:	89fb      	ldrh	r3, [r7, #14]
 80019b6:	6879      	ldr	r1, [r7, #4]
 80019b8:	440b      	add	r3, r1
 80019ba:	7812      	ldrb	r2, [r2, #0]
 80019bc:	701a      	strb	r2, [r3, #0]
  for (i = 0; i < bytes; i++) {
 80019be:	89fb      	ldrh	r3, [r7, #14]
 80019c0:	3301      	adds	r3, #1
 80019c2:	81fb      	strh	r3, [r7, #14]
 80019c4:	89fa      	ldrh	r2, [r7, #14]
 80019c6:	887b      	ldrh	r3, [r7, #2]
 80019c8:	429a      	cmp	r2, r3
 80019ca:	d3ee      	bcc.n	80019aa <read_from_backup_sram+0x56>
  }
  // DISABLE_BIT(PWR->CR, 8);
  DISABLE_BIT(PWR->CR, PWR_CR_DBP_Pos);
 80019cc:	4b08      	ldr	r3, [pc, #32]	@ (80019f0 <read_from_backup_sram+0x9c>)
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	4a07      	ldr	r2, [pc, #28]	@ (80019f0 <read_from_backup_sram+0x9c>)
 80019d2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80019d6:	6013      	str	r3, [r2, #0]
  return 0;
 80019d8:	2300      	movs	r3, #0
}
 80019da:	4618      	mov	r0, r3
 80019dc:	3714      	adds	r7, #20
 80019de:	46bd      	mov	sp, r7
 80019e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e4:	4770      	bx	lr
 80019e6:	bf00      	nop
 80019e8:	40024000 	.word	0x40024000
 80019ec:	40023800 	.word	0x40023800
 80019f0:	40007000 	.word	0x40007000

080019f4 <HAL_CAN_RxFifo0MsgPendingCallback>:
void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 80019f4:	b580      	push	{r7, lr}
 80019f6:	b082      	sub	sp, #8
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	6078      	str	r0, [r7, #4]
        HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 80019fc:	4b04      	ldr	r3, [pc, #16]	@ (8001a10 <HAL_CAN_RxFifo0MsgPendingCallback+0x1c>)
 80019fe:	4a05      	ldr	r2, [pc, #20]	@ (8001a14 <HAL_CAN_RxFifo0MsgPendingCallback+0x20>)
 8001a00:	2100      	movs	r1, #0
 8001a02:	6878      	ldr	r0, [r7, #4]
 8001a04:	f002 fe30 	bl	8004668 <HAL_CAN_GetRxMessage>
}
 8001a08:	bf00      	nop
 8001a0a:	3708      	adds	r7, #8
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	bd80      	pop	{r7, pc}
 8001a10:	200002e0 	.word	0x200002e0
 8001a14:	20000320 	.word	0x20000320

08001a18 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
 8001a18:	b480      	push	{r7}
 8001a1a:	b083      	sub	sp, #12
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
	if(hadc->Instance == ADC1){
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	4a05      	ldr	r2, [pc, #20]	@ (8001a3c <HAL_ADC_ConvCpltCallback+0x24>)
 8001a26:	4293      	cmp	r3, r2
 8001a28:	d102      	bne.n	8001a30 <HAL_ADC_ConvCpltCallback+0x18>
		AdcConvCmplt = 255;
 8001a2a:	4b05      	ldr	r3, [pc, #20]	@ (8001a40 <HAL_ADC_ConvCpltCallback+0x28>)
 8001a2c:	22ff      	movs	r2, #255	@ 0xff
 8001a2e:	701a      	strb	r2, [r3, #0]

	}
}
 8001a30:	bf00      	nop
 8001a32:	370c      	adds	r7, #12
 8001a34:	46bd      	mov	sp, r7
 8001a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3a:	4770      	bx	lr
 8001a3c:	40012000 	.word	0x40012000
 8001a40:	200002e8 	.word	0x200002e8
 8001a44:	00000000 	.word	0x00000000

08001a48 <UpdateTemperature>:

void UpdateTemperature(void) {
 8001a48:	b5b0      	push	{r4, r5, r7, lr}
 8001a4a:	af00      	add	r7, sp, #0
    if (AdcConvCmplt) {
 8001a4c:	4b4e      	ldr	r3, [pc, #312]	@ (8001b88 <UpdateTemperature+0x140>)
 8001a4e:	781b      	ldrb	r3, [r3, #0]
 8001a50:	2b00      	cmp	r3, #0
 8001a52:	f000 8088 	beq.w	8001b66 <UpdateTemperature+0x11e>
//        char debug_str[50];
        VrefInt = (VREFINT * ADCMAX) / AdcRaw[0];
 8001a56:	4b4d      	ldr	r3, [pc, #308]	@ (8001b8c <UpdateTemperature+0x144>)
 8001a58:	881b      	ldrh	r3, [r3, #0]
 8001a5a:	ee07 3a90 	vmov	s15, r3
 8001a5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a62:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8001b90 <UpdateTemperature+0x148>
 8001a66:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8001a6a:	ee16 0a90 	vmov	r0, s13
 8001a6e:	f7fe fd63 	bl	8000538 <__aeabi_f2d>
 8001a72:	4602      	mov	r2, r0
 8001a74:	460b      	mov	r3, r1
 8001a76:	4947      	ldr	r1, [pc, #284]	@ (8001b94 <UpdateTemperature+0x14c>)
 8001a78:	e9c1 2300 	strd	r2, r3, [r1]
        VTempSens = (VrefInt * AdcRaw[1]) / ADCMAX;
 8001a7c:	4b43      	ldr	r3, [pc, #268]	@ (8001b8c <UpdateTemperature+0x144>)
 8001a7e:	885b      	ldrh	r3, [r3, #2]
 8001a80:	4618      	mov	r0, r3
 8001a82:	f7fe fd47 	bl	8000514 <__aeabi_i2d>
 8001a86:	4b43      	ldr	r3, [pc, #268]	@ (8001b94 <UpdateTemperature+0x14c>)
 8001a88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a8c:	f7fe fdac 	bl	80005e8 <__aeabi_dmul>
 8001a90:	4602      	mov	r2, r0
 8001a92:	460b      	mov	r3, r1
 8001a94:	4610      	mov	r0, r2
 8001a96:	4619      	mov	r1, r3
 8001a98:	a335      	add	r3, pc, #212	@ (adr r3, 8001b70 <UpdateTemperature+0x128>)
 8001a9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a9e:	f7fe fecd 	bl	800083c <__aeabi_ddiv>
 8001aa2:	4602      	mov	r2, r0
 8001aa4:	460b      	mov	r3, r1
 8001aa6:	493c      	ldr	r1, [pc, #240]	@ (8001b98 <UpdateTemperature+0x150>)
 8001aa8:	e9c1 2300 	strd	r2, r3, [r1]
        Temperature = (VTempSens - V25) / AVG_SlOPE + 25.0;
 8001aac:	4b3a      	ldr	r3, [pc, #232]	@ (8001b98 <UpdateTemperature+0x150>)
 8001aae:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001ab2:	a331      	add	r3, pc, #196	@ (adr r3, 8001b78 <UpdateTemperature+0x130>)
 8001ab4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ab8:	f7fe fbde 	bl	8000278 <__aeabi_dsub>
 8001abc:	4602      	mov	r2, r0
 8001abe:	460b      	mov	r3, r1
 8001ac0:	4610      	mov	r0, r2
 8001ac2:	4619      	mov	r1, r3
 8001ac4:	a32e      	add	r3, pc, #184	@ (adr r3, 8001b80 <UpdateTemperature+0x138>)
 8001ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001aca:	f7fe feb7 	bl	800083c <__aeabi_ddiv>
 8001ace:	4602      	mov	r2, r0
 8001ad0:	460b      	mov	r3, r1
 8001ad2:	4610      	mov	r0, r2
 8001ad4:	4619      	mov	r1, r3
 8001ad6:	f04f 0200 	mov.w	r2, #0
 8001ada:	4b30      	ldr	r3, [pc, #192]	@ (8001b9c <UpdateTemperature+0x154>)
 8001adc:	f7fe fbce 	bl	800027c <__adddf3>
 8001ae0:	4602      	mov	r2, r0
 8001ae2:	460b      	mov	r3, r1
 8001ae4:	492e      	ldr	r1, [pc, #184]	@ (8001ba0 <UpdateTemperature+0x158>)
 8001ae6:	e9c1 2300 	strd	r2, r3, [r1]
//      sprintf(debug_str, "T=%.2f do C", Temperature);
//      lcd_display_string(10, 180, (uint8_t*)debug_str, FONT_1206, BLACK);

        temperature_data[0] = (uint8_t)Temperature;
 8001aea:	4b2d      	ldr	r3, [pc, #180]	@ (8001ba0 <UpdateTemperature+0x158>)
 8001aec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001af0:	4610      	mov	r0, r2
 8001af2:	4619      	mov	r1, r3
 8001af4:	f7fe ff8a 	bl	8000a0c <__aeabi_d2uiz>
 8001af8:	4603      	mov	r3, r0
 8001afa:	b2da      	uxtb	r2, r3
 8001afc:	4b29      	ldr	r3, [pc, #164]	@ (8001ba4 <UpdateTemperature+0x15c>)
 8001afe:	701a      	strb	r2, [r3, #0]
        temperature_data[1] = (uint8_t)((Temperature - temperature_data[0]) * 100);
 8001b00:	4b27      	ldr	r3, [pc, #156]	@ (8001ba0 <UpdateTemperature+0x158>)
 8001b02:	e9d3 4500 	ldrd	r4, r5, [r3]
 8001b06:	4b27      	ldr	r3, [pc, #156]	@ (8001ba4 <UpdateTemperature+0x15c>)
 8001b08:	781b      	ldrb	r3, [r3, #0]
 8001b0a:	4618      	mov	r0, r3
 8001b0c:	f7fe fd02 	bl	8000514 <__aeabi_i2d>
 8001b10:	4602      	mov	r2, r0
 8001b12:	460b      	mov	r3, r1
 8001b14:	4620      	mov	r0, r4
 8001b16:	4629      	mov	r1, r5
 8001b18:	f7fe fbae 	bl	8000278 <__aeabi_dsub>
 8001b1c:	4602      	mov	r2, r0
 8001b1e:	460b      	mov	r3, r1
 8001b20:	4610      	mov	r0, r2
 8001b22:	4619      	mov	r1, r3
 8001b24:	f04f 0200 	mov.w	r2, #0
 8001b28:	4b1f      	ldr	r3, [pc, #124]	@ (8001ba8 <UpdateTemperature+0x160>)
 8001b2a:	f7fe fd5d 	bl	80005e8 <__aeabi_dmul>
 8001b2e:	4602      	mov	r2, r0
 8001b30:	460b      	mov	r3, r1
 8001b32:	4610      	mov	r0, r2
 8001b34:	4619      	mov	r1, r3
 8001b36:	f7fe ff69 	bl	8000a0c <__aeabi_d2uiz>
 8001b3a:	4603      	mov	r3, r0
 8001b3c:	b2da      	uxtb	r2, r3
 8001b3e:	4b19      	ldr	r3, [pc, #100]	@ (8001ba4 <UpdateTemperature+0x15c>)
 8001b40:	705a      	strb	r2, [r3, #1]
        write_to_backup_sram(temperature_data, sizeof(temperature_data), 0);
 8001b42:	2200      	movs	r2, #0
 8001b44:	2102      	movs	r1, #2
 8001b46:	4817      	ldr	r0, [pc, #92]	@ (8001ba4 <UpdateTemperature+0x15c>)
 8001b48:	f7ff feb4 	bl	80018b4 <write_to_backup_sram>
        read_from_backup_sram(data_sram, sizeof(temperature_data), 0);
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	2102      	movs	r1, #2
 8001b50:	4816      	ldr	r0, [pc, #88]	@ (8001bac <UpdateTemperature+0x164>)
 8001b52:	f7ff feff 	bl	8001954 <read_from_backup_sram>

        AdcConvCmplt = 0;
 8001b56:	4b0c      	ldr	r3, [pc, #48]	@ (8001b88 <UpdateTemperature+0x140>)
 8001b58:	2200      	movs	r2, #0
 8001b5a:	701a      	strb	r2, [r3, #0]
        HAL_ADC_Start_DMA(&hadc1, (uint32_t*)AdcRaw, 2);
 8001b5c:	2202      	movs	r2, #2
 8001b5e:	490b      	ldr	r1, [pc, #44]	@ (8001b8c <UpdateTemperature+0x144>)
 8001b60:	4813      	ldr	r0, [pc, #76]	@ (8001bb0 <UpdateTemperature+0x168>)
 8001b62:	f001 fecb 	bl	80038fc <HAL_ADC_Start_DMA>
    }
}
 8001b66:	bf00      	nop
 8001b68:	bdb0      	pop	{r4, r5, r7, pc}
 8001b6a:	bf00      	nop
 8001b6c:	f3af 8000 	nop.w
 8001b70:	00000000 	.word	0x00000000
 8001b74:	40affe00 	.word	0x40affe00
 8001b78:	80000000 	.word	0x80000000
 8001b7c:	3fe851eb 	.word	0x3fe851eb
 8001b80:	40000000 	.word	0x40000000
 8001b84:	3f647ae1 	.word	0x3f647ae1
 8001b88:	200002e8 	.word	0x200002e8
 8001b8c:	200002e4 	.word	0x200002e4
 8001b90:	459ad79a 	.word	0x459ad79a
 8001b94:	200002f0 	.word	0x200002f0
 8001b98:	200002f8 	.word	0x200002f8
 8001b9c:	40390000 	.word	0x40390000
 8001ba0:	20000300 	.word	0x20000300
 8001ba4:	200002d8 	.word	0x200002d8
 8001ba8:	40590000 	.word	0x40590000
 8001bac:	200002dc 	.word	0x200002dc
 8001bb0:	20000360 	.word	0x20000360

08001bb4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001bb4:	b5b0      	push	{r4, r5, r7, lr}
 8001bb6:	b0ac      	sub	sp, #176	@ 0xb0
 8001bb8:	af02      	add	r7, sp, #8

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */

	HAL_Init();
 8001bba:	f001 fe19 	bl	80037f0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001bbe:	f000 f911 	bl	8001de4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001bc2:	f000 fb7b 	bl	80022bc <MX_GPIO_Init>
  MX_DMA_Init();
 8001bc6:	f000 fb59 	bl	800227c <MX_DMA_Init>
  MX_SPI1_Init();
 8001bca:	f000 fb21 	bl	8002210 <MX_SPI1_Init>
  MX_ADC1_Init();
 8001bce:	f000 f975 	bl	8001ebc <MX_ADC1_Init>
  MX_CAN1_Init();
 8001bd2:	f000 f9e5 	bl	8001fa0 <MX_CAN1_Init>
  MX_CAN2_Init();
 8001bd6:	f000 fa3b 	bl	8002050 <MX_CAN2_Init>
  MX_I2C2_Init();
 8001bda:	f000 fa91 	bl	8002100 <MX_I2C2_Init>
  MX_RTC_Init();
 8001bde:	f000 fabd 	bl	800215c <MX_RTC_Init>
  /* USER CODE BEGIN 2 */
  HAL_CAN_Start(&hcan1);
 8001be2:	486b      	ldr	r0, [pc, #428]	@ (8001d90 <main+0x1dc>)
 8001be4:	f002 fc2c 	bl	8004440 <HAL_CAN_Start>
  HAL_CAN_Start(&hcan2);
 8001be8:	486a      	ldr	r0, [pc, #424]	@ (8001d94 <main+0x1e0>)
 8001bea:	f002 fc29 	bl	8004440 <HAL_CAN_Start>
  HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 8001bee:	2102      	movs	r1, #2
 8001bf0:	4868      	ldr	r0, [pc, #416]	@ (8001d94 <main+0x1e0>)
 8001bf2:	f002 fe5b 	bl	80048ac <HAL_CAN_ActivateNotification>
  ADC->CCR |= ADC_CCR_TSVREFE;
 8001bf6:	4b68      	ldr	r3, [pc, #416]	@ (8001d98 <main+0x1e4>)
 8001bf8:	685b      	ldr	r3, [r3, #4]
 8001bfa:	4a67      	ldr	r2, [pc, #412]	@ (8001d98 <main+0x1e4>)
 8001bfc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001c00:	6053      	str	r3, [r2, #4]
  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)AdcRaw, 2);
 8001c02:	2202      	movs	r2, #2
 8001c04:	4965      	ldr	r1, [pc, #404]	@ (8001d9c <main+0x1e8>)
 8001c06:	4866      	ldr	r0, [pc, #408]	@ (8001da0 <main+0x1ec>)
 8001c08:	f001 fe78 	bl	80038fc <HAL_ADC_Start_DMA>

  txHeader.StdId = 0x123;
 8001c0c:	4b65      	ldr	r3, [pc, #404]	@ (8001da4 <main+0x1f0>)
 8001c0e:	f240 1223 	movw	r2, #291	@ 0x123
 8001c12:	601a      	str	r2, [r3, #0]
  txHeader.ExtId = 0;
 8001c14:	4b63      	ldr	r3, [pc, #396]	@ (8001da4 <main+0x1f0>)
 8001c16:	2200      	movs	r2, #0
 8001c18:	605a      	str	r2, [r3, #4]
  txHeader.IDE = CAN_ID_STD;
 8001c1a:	4b62      	ldr	r3, [pc, #392]	@ (8001da4 <main+0x1f0>)
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	609a      	str	r2, [r3, #8]
  txHeader.RTR = CAN_RTR_DATA;
 8001c20:	4b60      	ldr	r3, [pc, #384]	@ (8001da4 <main+0x1f0>)
 8001c22:	2200      	movs	r2, #0
 8001c24:	60da      	str	r2, [r3, #12]
  txHeader.DLC = 3;
 8001c26:	4b5f      	ldr	r3, [pc, #380]	@ (8001da4 <main+0x1f0>)
 8001c28:	2203      	movs	r2, #3
 8001c2a:	611a      	str	r2, [r3, #16]
  txHeader.TransmitGlobalTime = DISABLE;
 8001c2c:	4b5d      	ldr	r3, [pc, #372]	@ (8001da4 <main+0x1f0>)
 8001c2e:	2200      	movs	r2, #0
 8001c30:	751a      	strb	r2, [r3, #20]
  lcd_init();
 8001c32:	f7ff f945 	bl	8000ec0 <lcd_init>
  tp_init();
 8001c36:	f001 fb03 	bl	8003240 <tp_init>
  tp_adjust();
 8001c3a:	f001 fc05 	bl	8003448 <tp_adjust>
  tp_dialog();
 8001c3e:	f001 fc3d 	bl	80034bc <tp_dialog>
  if (FRAM_Init(&hi2c2) == HAL_OK) {
 8001c42:	4859      	ldr	r0, [pc, #356]	@ (8001da8 <main+0x1f4>)
 8001c44:	f7ff fde9 	bl	800181a <FRAM_Init>
 8001c48:	4603      	mov	r3, r0
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d10a      	bne.n	8001c64 <main+0xb0>
    lcd_display_string(10, 260, (uint8_t*)"FRAM OK", FONT_1206, GREEN);
 8001c4e:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8001c52:	9300      	str	r3, [sp, #0]
 8001c54:	230c      	movs	r3, #12
 8001c56:	4a55      	ldr	r2, [pc, #340]	@ (8001dac <main+0x1f8>)
 8001c58:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8001c5c:	200a      	movs	r0, #10
 8001c5e:	f7ff fbcb 	bl	80013f8 <lcd_display_string>
 8001c62:	e009      	b.n	8001c78 <main+0xc4>
  } else {
    lcd_display_string(10, 260, (uint8_t*)"FRAM Fail!", FONT_1206, RED);
 8001c64:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001c68:	9300      	str	r3, [sp, #0]
 8001c6a:	230c      	movs	r3, #12
 8001c6c:	4a50      	ldr	r2, [pc, #320]	@ (8001db0 <main+0x1fc>)
 8001c6e:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8001c72:	200a      	movs	r0, #10
 8001c74:	f7ff fbc0 	bl	80013f8 <lcd_display_string>
  }
  osDelay(1000); // Để xem thông báo
 8001c78:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001c7c:	f006 fa33 	bl	80080e6 <osDelay>
  /* USER CODE BEGIN RTOS_QUEUES */
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 1024);
 8001c80:	4b4c      	ldr	r3, [pc, #304]	@ (8001db4 <main+0x200>)
 8001c82:	f107 048c 	add.w	r4, r7, #140	@ 0x8c
 8001c86:	461d      	mov	r5, r3
 8001c88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001c8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001c90:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8001c94:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 8001c98:	2100      	movs	r1, #0
 8001c9a:	4618      	mov	r0, r3
 8001c9c:	f006 f9d7 	bl	800804e <osThreadCreate>
 8001ca0:	4603      	mov	r3, r0
 8001ca2:	4a45      	ldr	r2, [pc, #276]	@ (8001db8 <main+0x204>)
 8001ca4:	6013      	str	r3, [r2, #0]

  osThreadDef(LCD_Touch_Task, LCD_Touch, osPriorityNormal, 0, 1024);
 8001ca6:	4b45      	ldr	r3, [pc, #276]	@ (8001dbc <main+0x208>)
 8001ca8:	f107 0470 	add.w	r4, r7, #112	@ 0x70
 8001cac:	461d      	mov	r5, r3
 8001cae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001cb0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001cb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001cb6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  LCD_Touch_TaskHandle = osThreadCreate(osThread(LCD_Touch_Task), NULL);
 8001cba:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 8001cbe:	2100      	movs	r1, #0
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f006 f9c4 	bl	800804e <osThreadCreate>
 8001cc6:	4603      	mov	r3, r0
 8001cc8:	4a3d      	ldr	r2, [pc, #244]	@ (8001dc0 <main+0x20c>)
 8001cca:	6013      	str	r3, [r2, #0]

  osThreadDef(LED_Task, LED, osPriorityBelowNormal, 0, 128);
 8001ccc:	4b3d      	ldr	r3, [pc, #244]	@ (8001dc4 <main+0x210>)
 8001cce:	f107 0454 	add.w	r4, r7, #84	@ 0x54
 8001cd2:	461d      	mov	r5, r3
 8001cd4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001cd6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001cd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001cdc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  LED_TaskHandle = osThreadCreate(osThread(LED_Task), NULL);
 8001ce0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001ce4:	2100      	movs	r1, #0
 8001ce6:	4618      	mov	r0, r3
 8001ce8:	f006 f9b1 	bl	800804e <osThreadCreate>
 8001cec:	4603      	mov	r3, r0
 8001cee:	4a36      	ldr	r2, [pc, #216]	@ (8001dc8 <main+0x214>)
 8001cf0:	6013      	str	r3, [r2, #0]

  osThreadDef(CAN_Task, CAN, osPriorityAboveNormal, 0, 526);
 8001cf2:	4b36      	ldr	r3, [pc, #216]	@ (8001dcc <main+0x218>)
 8001cf4:	f107 0438 	add.w	r4, r7, #56	@ 0x38
 8001cf8:	461d      	mov	r5, r3
 8001cfa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001cfc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001cfe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001d02:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  CAN_TaskHandle = osThreadCreate(osThread(CAN_Task), NULL);
 8001d06:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001d0a:	2100      	movs	r1, #0
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f006 f99e 	bl	800804e <osThreadCreate>
 8001d12:	4603      	mov	r3, r0
 8001d14:	4a2e      	ldr	r2, [pc, #184]	@ (8001dd0 <main+0x21c>)
 8001d16:	6013      	str	r3, [r2, #0]

  osThreadDef(Button_FRAM_Tas, Button_FRAM, osPriorityBelowNormal, 0, 128);
 8001d18:	4b2e      	ldr	r3, [pc, #184]	@ (8001dd4 <main+0x220>)
 8001d1a:	f107 041c 	add.w	r4, r7, #28
 8001d1e:	461d      	mov	r5, r3
 8001d20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001d28:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  Button_FRAM_TasHandle = osThreadCreate(osThread(Button_FRAM_Tas), NULL);
 8001d2c:	f107 031c 	add.w	r3, r7, #28
 8001d30:	2100      	movs	r1, #0
 8001d32:	4618      	mov	r0, r3
 8001d34:	f006 f98b 	bl	800804e <osThreadCreate>
 8001d38:	4603      	mov	r3, r0
 8001d3a:	4a27      	ldr	r2, [pc, #156]	@ (8001dd8 <main+0x224>)
 8001d3c:	6013      	str	r3, [r2, #0]

  osThreadDef(Display_CAN_Dat, Display_CAN, osPriorityLow, 0, 128);
 8001d3e:	4b27      	ldr	r3, [pc, #156]	@ (8001ddc <main+0x228>)
 8001d40:	463c      	mov	r4, r7
 8001d42:	461d      	mov	r5, r3
 8001d44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001d4c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  Display_CAN_DatHandle = osThreadCreate(osThread(Display_CAN_Dat), NULL);
 8001d50:	463b      	mov	r3, r7
 8001d52:	2100      	movs	r1, #0
 8001d54:	4618      	mov	r0, r3
 8001d56:	f006 f97a 	bl	800804e <osThreadCreate>
 8001d5a:	4603      	mov	r3, r0
 8001d5c:	4a20      	ldr	r2, [pc, #128]	@ (8001de0 <main+0x22c>)
 8001d5e:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */

  osThreadSuspend(LED_TaskHandle);
 8001d60:	4b19      	ldr	r3, [pc, #100]	@ (8001dc8 <main+0x214>)
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	4618      	mov	r0, r3
 8001d66:	f006 f9d2 	bl	800810e <osThreadSuspend>
  osThreadSuspend(CAN_TaskHandle);
 8001d6a:	4b19      	ldr	r3, [pc, #100]	@ (8001dd0 <main+0x21c>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	4618      	mov	r0, r3
 8001d70:	f006 f9cd 	bl	800810e <osThreadSuspend>
  osThreadSuspend(Button_FRAM_TasHandle);
 8001d74:	4b18      	ldr	r3, [pc, #96]	@ (8001dd8 <main+0x224>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	4618      	mov	r0, r3
 8001d7a:	f006 f9c8 	bl	800810e <osThreadSuspend>
  osThreadSuspend(Display_CAN_DatHandle);
 8001d7e:	4b18      	ldr	r3, [pc, #96]	@ (8001de0 <main+0x22c>)
 8001d80:	681b      	ldr	r3, [r3, #0]
 8001d82:	4618      	mov	r0, r3
 8001d84:	f006 f9c3 	bl	800810e <osThreadSuspend>

  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8001d88:	f006 f95a 	bl	8008040 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8001d8c:	bf00      	nop
 8001d8e:	e7fd      	b.n	8001d8c <main+0x1d8>
 8001d90:	20000408 	.word	0x20000408
 8001d94:	20000430 	.word	0x20000430
 8001d98:	40012300 	.word	0x40012300
 8001d9c:	200002e4 	.word	0x200002e4
 8001da0:	20000360 	.word	0x20000360
 8001da4:	20000308 	.word	0x20000308
 8001da8:	20000458 	.word	0x20000458
 8001dac:	0800a230 	.word	0x0800a230
 8001db0:	0800a238 	.word	0x0800a238
 8001db4:	0800a250 	.word	0x0800a250
 8001db8:	20000524 	.word	0x20000524
 8001dbc:	0800a27c 	.word	0x0800a27c
 8001dc0:	20000528 	.word	0x20000528
 8001dc4:	0800a2a4 	.word	0x0800a2a4
 8001dc8:	2000052c 	.word	0x2000052c
 8001dcc:	0800a2cc 	.word	0x0800a2cc
 8001dd0:	20000530 	.word	0x20000530
 8001dd4:	0800a2f8 	.word	0x0800a2f8
 8001dd8:	20000534 	.word	0x20000534
 8001ddc:	0800a324 	.word	0x0800a324
 8001de0:	20000538 	.word	0x20000538

08001de4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001de4:	b580      	push	{r7, lr}
 8001de6:	b094      	sub	sp, #80	@ 0x50
 8001de8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001dea:	f107 0320 	add.w	r3, r7, #32
 8001dee:	2230      	movs	r2, #48	@ 0x30
 8001df0:	2100      	movs	r1, #0
 8001df2:	4618      	mov	r0, r3
 8001df4:	f007 fd92 	bl	800991c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001df8:	f107 030c 	add.w	r3, r7, #12
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	601a      	str	r2, [r3, #0]
 8001e00:	605a      	str	r2, [r3, #4]
 8001e02:	609a      	str	r2, [r3, #8]
 8001e04:	60da      	str	r2, [r3, #12]
 8001e06:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e08:	2300      	movs	r3, #0
 8001e0a:	60bb      	str	r3, [r7, #8]
 8001e0c:	4b29      	ldr	r3, [pc, #164]	@ (8001eb4 <SystemClock_Config+0xd0>)
 8001e0e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e10:	4a28      	ldr	r2, [pc, #160]	@ (8001eb4 <SystemClock_Config+0xd0>)
 8001e12:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001e16:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e18:	4b26      	ldr	r3, [pc, #152]	@ (8001eb4 <SystemClock_Config+0xd0>)
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e1c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001e20:	60bb      	str	r3, [r7, #8]
 8001e22:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001e24:	2300      	movs	r3, #0
 8001e26:	607b      	str	r3, [r7, #4]
 8001e28:	4b23      	ldr	r3, [pc, #140]	@ (8001eb8 <SystemClock_Config+0xd4>)
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	4a22      	ldr	r2, [pc, #136]	@ (8001eb8 <SystemClock_Config+0xd4>)
 8001e2e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e32:	6013      	str	r3, [r2, #0]
 8001e34:	4b20      	ldr	r3, [pc, #128]	@ (8001eb8 <SystemClock_Config+0xd4>)
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e3c:	607b      	str	r3, [r7, #4]
 8001e3e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8001e40:	2309      	movs	r3, #9
 8001e42:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001e44:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001e48:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8001e4a:	2301      	movs	r3, #1
 8001e4c:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001e4e:	2302      	movs	r3, #2
 8001e50:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e52:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001e56:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8001e58:	2319      	movs	r3, #25
 8001e5a:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001e5c:	23a8      	movs	r3, #168	@ 0xa8
 8001e5e:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001e60:	2302      	movs	r3, #2
 8001e62:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001e64:	2304      	movs	r3, #4
 8001e66:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e68:	f107 0320 	add.w	r3, r7, #32
 8001e6c:	4618      	mov	r0, r3
 8001e6e:	f004 f959 	bl	8006124 <HAL_RCC_OscConfig>
 8001e72:	4603      	mov	r3, r0
 8001e74:	2b00      	cmp	r3, #0
 8001e76:	d001      	beq.n	8001e7c <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001e78:	f000 fef8 	bl	8002c6c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e7c:	230f      	movs	r3, #15
 8001e7e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e80:	2302      	movs	r3, #2
 8001e82:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e84:	2300      	movs	r3, #0
 8001e86:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001e88:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001e8c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e8e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001e92:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e94:	f107 030c 	add.w	r3, r7, #12
 8001e98:	2102      	movs	r1, #2
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	f004 fbba 	bl	8006614 <HAL_RCC_ClockConfig>
 8001ea0:	4603      	mov	r3, r0
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d001      	beq.n	8001eaa <SystemClock_Config+0xc6>
  {
    Error_Handler();
 8001ea6:	f000 fee1 	bl	8002c6c <Error_Handler>
  }
}
 8001eaa:	bf00      	nop
 8001eac:	3750      	adds	r7, #80	@ 0x50
 8001eae:	46bd      	mov	sp, r7
 8001eb0:	bd80      	pop	{r7, pc}
 8001eb2:	bf00      	nop
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40007000 	.word	0x40007000

08001ebc <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001ebc:	b580      	push	{r7, lr}
 8001ebe:	b084      	sub	sp, #16
 8001ec0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001ec2:	463b      	mov	r3, r7
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	601a      	str	r2, [r3, #0]
 8001ec8:	605a      	str	r2, [r3, #4]
 8001eca:	609a      	str	r2, [r3, #8]
 8001ecc:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001ece:	4b31      	ldr	r3, [pc, #196]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001ed0:	4a31      	ldr	r2, [pc, #196]	@ (8001f98 <MX_ADC1_Init+0xdc>)
 8001ed2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001ed4:	4b2f      	ldr	r3, [pc, #188]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001eda:	4b2e      	ldr	r3, [pc, #184]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001edc:	2200      	movs	r2, #0
 8001ede:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8001ee0:	4b2c      	ldr	r3, [pc, #176]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001ee2:	2201      	movs	r2, #1
 8001ee4:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001ee6:	4b2b      	ldr	r3, [pc, #172]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001ee8:	2201      	movs	r2, #1
 8001eea:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001eec:	4b29      	ldr	r3, [pc, #164]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001eee:	2200      	movs	r2, #0
 8001ef0:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001ef4:	4b27      	ldr	r3, [pc, #156]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001efa:	4b26      	ldr	r3, [pc, #152]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001efc:	4a27      	ldr	r2, [pc, #156]	@ (8001f9c <MX_ADC1_Init+0xe0>)
 8001efe:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001f00:	4b24      	ldr	r3, [pc, #144]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f02:	2200      	movs	r2, #0
 8001f04:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 2;
 8001f06:	4b23      	ldr	r3, [pc, #140]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f08:	2202      	movs	r2, #2
 8001f0a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 8001f0c:	4b21      	ldr	r3, [pc, #132]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f0e:	2201      	movs	r2, #1
 8001f10:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001f14:	4b1f      	ldr	r3, [pc, #124]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f16:	2201      	movs	r2, #1
 8001f18:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001f1a:	481e      	ldr	r0, [pc, #120]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f1c:	f001 fcaa 	bl	8003874 <HAL_ADC_Init>
 8001f20:	4603      	mov	r3, r0
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d001      	beq.n	8001f2a <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8001f26:	f000 fea1 	bl	8002c6c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 8001f2a:	2310      	movs	r3, #16
 8001f2c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 8001f2e:	2302      	movs	r3, #2
 8001f30:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001f32:	2306      	movs	r3, #6
 8001f34:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f36:	463b      	mov	r3, r7
 8001f38:	4619      	mov	r1, r3
 8001f3a:	4816      	ldr	r0, [pc, #88]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f3c:	f001 fe06 	bl	8003b4c <HAL_ADC_ConfigChannel>
 8001f40:	4603      	mov	r3, r0
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d001      	beq.n	8001f4a <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 8001f46:	f000 fe91 	bl	8002c6c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 8001f4a:	2310      	movs	r3, #16
 8001f4c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 8001f4e:	2302      	movs	r3, #2
 8001f50:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001f52:	2307      	movs	r3, #7
 8001f54:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f56:	463b      	mov	r3, r7
 8001f58:	4619      	mov	r1, r3
 8001f5a:	480e      	ldr	r0, [pc, #56]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f5c:	f001 fdf6 	bl	8003b4c <HAL_ADC_ConfigChannel>
 8001f60:	4603      	mov	r3, r0
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d001      	beq.n	8001f6a <MX_ADC1_Init+0xae>
  {
    Error_Handler();
 8001f66:	f000 fe81 	bl	8002c6c <Error_Handler>
  }

  /* USER CODE BEGIN ADC1_Init 2 */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8001f6a:	2311      	movs	r3, #17
 8001f6c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001f6e:	2301      	movs	r3, #1
 8001f70:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001f72:	2307      	movs	r3, #7
 8001f74:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f76:	463b      	mov	r3, r7
 8001f78:	4619      	mov	r1, r3
 8001f7a:	4806      	ldr	r0, [pc, #24]	@ (8001f94 <MX_ADC1_Init+0xd8>)
 8001f7c:	f001 fde6 	bl	8003b4c <HAL_ADC_ConfigChannel>
 8001f80:	4603      	mov	r3, r0
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d001      	beq.n	8001f8a <MX_ADC1_Init+0xce>
  {
      Error_Handler();
 8001f86:	f000 fe71 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE END ADC1_Init 2 */

}
 8001f8a:	bf00      	nop
 8001f8c:	3710      	adds	r7, #16
 8001f8e:	46bd      	mov	sp, r7
 8001f90:	bd80      	pop	{r7, pc}
 8001f92:	bf00      	nop
 8001f94:	20000360 	.word	0x20000360
 8001f98:	40012000 	.word	0x40012000
 8001f9c:	0f000001 	.word	0x0f000001

08001fa0 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b08a      	sub	sp, #40	@ 0x28
 8001fa4:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8001fa6:	4b28      	ldr	r3, [pc, #160]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fa8:	4a28      	ldr	r2, [pc, #160]	@ (800204c <MX_CAN1_Init+0xac>)
 8001faa:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 6;
 8001fac:	4b26      	ldr	r3, [pc, #152]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fae:	2206      	movs	r2, #6
 8001fb0:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8001fb2:	4b25      	ldr	r3, [pc, #148]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8001fb8:	4b23      	ldr	r3, [pc, #140]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fba:	2200      	movs	r2, #0
 8001fbc:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_6TQ;
 8001fbe:	4b22      	ldr	r3, [pc, #136]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fc0:	f44f 22a0 	mov.w	r2, #327680	@ 0x50000
 8001fc4:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_3TQ;
 8001fc6:	4b20      	ldr	r3, [pc, #128]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fc8:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8001fcc:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8001fce:	4b1e      	ldr	r3, [pc, #120]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8001fd4:	4b1c      	ldr	r3, [pc, #112]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fd6:	2200      	movs	r2, #0
 8001fd8:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8001fda:	4b1b      	ldr	r3, [pc, #108]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fdc:	2200      	movs	r2, #0
 8001fde:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8001fe0:	4b19      	ldr	r3, [pc, #100]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fe2:	2200      	movs	r2, #0
 8001fe4:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8001fe6:	4b18      	ldr	r3, [pc, #96]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fe8:	2200      	movs	r2, #0
 8001fea:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8001fec:	4b16      	ldr	r3, [pc, #88]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001fee:	2200      	movs	r2, #0
 8001ff0:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8001ff2:	4815      	ldr	r0, [pc, #84]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8001ff4:	f002 f84a 	bl	800408c <HAL_CAN_Init>
 8001ff8:	4603      	mov	r3, r0
 8001ffa:	2b00      	cmp	r3, #0
 8001ffc:	d001      	beq.n	8002002 <MX_CAN1_Init+0x62>
  {
    Error_Handler();
 8001ffe:	f000 fe35 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */
  // Cấu hình bộ lọc CAN1

   CAN_FilterTypeDef filter;
   filter.FilterIdHigh = 0x0000;
 8002002:	2300      	movs	r3, #0
 8002004:	603b      	str	r3, [r7, #0]
   filter.FilterIdLow = 0x0000;
 8002006:	2300      	movs	r3, #0
 8002008:	607b      	str	r3, [r7, #4]
   filter.FilterMaskIdHigh = 0x0000;
 800200a:	2300      	movs	r3, #0
 800200c:	60bb      	str	r3, [r7, #8]
   filter.FilterMaskIdLow = 0x0000;  // Nhận tất cả messages
 800200e:	2300      	movs	r3, #0
 8002010:	60fb      	str	r3, [r7, #12]
   filter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 8002012:	2300      	movs	r3, #0
 8002014:	613b      	str	r3, [r7, #16]
   filter.FilterBank = 0;
 8002016:	2300      	movs	r3, #0
 8002018:	617b      	str	r3, [r7, #20]
   filter.FilterMode = CAN_FILTERMODE_IDMASK;
 800201a:	2300      	movs	r3, #0
 800201c:	61bb      	str	r3, [r7, #24]
   filter.FilterScale = CAN_FILTERSCALE_32BIT;
 800201e:	2301      	movs	r3, #1
 8002020:	61fb      	str	r3, [r7, #28]
   filter.FilterActivation = CAN_FILTER_ENABLE;
 8002022:	2301      	movs	r3, #1
 8002024:	623b      	str	r3, [r7, #32]
   filter.SlaveStartFilterBank = 14; // Số bank bắt đầu cho CAN2
 8002026:	230e      	movs	r3, #14
 8002028:	627b      	str	r3, [r7, #36]	@ 0x24

   if (HAL_CAN_ConfigFilter(&hcan1, &filter) != HAL_OK)
 800202a:	463b      	mov	r3, r7
 800202c:	4619      	mov	r1, r3
 800202e:	4806      	ldr	r0, [pc, #24]	@ (8002048 <MX_CAN1_Init+0xa8>)
 8002030:	f002 f928 	bl	8004284 <HAL_CAN_ConfigFilter>
 8002034:	4603      	mov	r3, r0
 8002036:	2b00      	cmp	r3, #0
 8002038:	d001      	beq.n	800203e <MX_CAN1_Init+0x9e>
   {
     Error_Handler();
 800203a:	f000 fe17 	bl	8002c6c <Error_Handler>
   }

  /* USER CODE END CAN1_Init 2 */

}
 800203e:	bf00      	nop
 8002040:	3728      	adds	r7, #40	@ 0x28
 8002042:	46bd      	mov	sp, r7
 8002044:	bd80      	pop	{r7, pc}
 8002046:	bf00      	nop
 8002048:	20000408 	.word	0x20000408
 800204c:	40006400 	.word	0x40006400

08002050 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8002050:	b580      	push	{r7, lr}
 8002052:	b08a      	sub	sp, #40	@ 0x28
 8002054:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 8002056:	4b28      	ldr	r3, [pc, #160]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002058:	4a28      	ldr	r2, [pc, #160]	@ (80020fc <MX_CAN2_Init+0xac>)
 800205a:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 6;
 800205c:	4b26      	ldr	r3, [pc, #152]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 800205e:	2206      	movs	r2, #6
 8002060:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8002062:	4b25      	ldr	r3, [pc, #148]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002064:	2200      	movs	r2, #0
 8002066:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8002068:	4b23      	ldr	r3, [pc, #140]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 800206a:	2200      	movs	r2, #0
 800206c:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_6TQ;
 800206e:	4b22      	ldr	r3, [pc, #136]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002070:	f44f 22a0 	mov.w	r2, #327680	@ 0x50000
 8002074:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_3TQ;
 8002076:	4b20      	ldr	r3, [pc, #128]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002078:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 800207c:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 800207e:	4b1e      	ldr	r3, [pc, #120]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002080:	2200      	movs	r2, #0
 8002082:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8002084:	4b1c      	ldr	r3, [pc, #112]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002086:	2200      	movs	r2, #0
 8002088:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 800208a:	4b1b      	ldr	r3, [pc, #108]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 800208c:	2200      	movs	r2, #0
 800208e:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = ENABLE;
 8002090:	4b19      	ldr	r3, [pc, #100]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002092:	2201      	movs	r2, #1
 8002094:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8002096:	4b18      	ldr	r3, [pc, #96]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 8002098:	2200      	movs	r2, #0
 800209a:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 800209c:	4b16      	ldr	r3, [pc, #88]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 800209e:	2200      	movs	r2, #0
 80020a0:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 80020a2:	4815      	ldr	r0, [pc, #84]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 80020a4:	f001 fff2 	bl	800408c <HAL_CAN_Init>
 80020a8:	4603      	mov	r3, r0
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d001      	beq.n	80020b2 <MX_CAN2_Init+0x62>
  {
    Error_Handler();
 80020ae:	f000 fddd 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */

  CAN_FilterTypeDef filter2;
  filter2.FilterIdHigh =0x123 << 5;
 80020b2:	f242 4360 	movw	r3, #9312	@ 0x2460
 80020b6:	603b      	str	r3, [r7, #0]
  filter2.FilterIdLow = 0;
 80020b8:	2300      	movs	r3, #0
 80020ba:	607b      	str	r3, [r7, #4]
  filter2.FilterMaskIdHigh = 0x7FF << 5;
 80020bc:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 80020c0:	60bb      	str	r3, [r7, #8]
  filter2.FilterMaskIdLow = 0;
 80020c2:	2300      	movs	r3, #0
 80020c4:	60fb      	str	r3, [r7, #12]
  filter2.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 80020c6:	2300      	movs	r3, #0
 80020c8:	613b      	str	r3, [r7, #16]
  filter2.FilterBank = 14;
 80020ca:	230e      	movs	r3, #14
 80020cc:	617b      	str	r3, [r7, #20]
  filter2.FilterMode = CAN_FILTERMODE_IDMASK;
 80020ce:	2300      	movs	r3, #0
 80020d0:	61bb      	str	r3, [r7, #24]
  filter2.FilterScale = CAN_FILTERSCALE_32BIT;
 80020d2:	2301      	movs	r3, #1
 80020d4:	61fb      	str	r3, [r7, #28]
  filter2.FilterActivation = CAN_FILTER_ENABLE;
 80020d6:	2301      	movs	r3, #1
 80020d8:	623b      	str	r3, [r7, #32]

  if (HAL_CAN_ConfigFilter(&hcan2, &filter2) != HAL_OK)
 80020da:	463b      	mov	r3, r7
 80020dc:	4619      	mov	r1, r3
 80020de:	4806      	ldr	r0, [pc, #24]	@ (80020f8 <MX_CAN2_Init+0xa8>)
 80020e0:	f002 f8d0 	bl	8004284 <HAL_CAN_ConfigFilter>
 80020e4:	4603      	mov	r3, r0
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d001      	beq.n	80020ee <MX_CAN2_Init+0x9e>
  {
    Error_Handler();
 80020ea:	f000 fdbf 	bl	8002c6c <Error_Handler>
  }

  /* USER CODE END CAN2_Init 2 */

}
 80020ee:	bf00      	nop
 80020f0:	3728      	adds	r7, #40	@ 0x28
 80020f2:	46bd      	mov	sp, r7
 80020f4:	bd80      	pop	{r7, pc}
 80020f6:	bf00      	nop
 80020f8:	20000430 	.word	0x20000430
 80020fc:	40006800 	.word	0x40006800

08002100 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8002100:	b580      	push	{r7, lr}
 8002102:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8002104:	4b12      	ldr	r3, [pc, #72]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002106:	4a13      	ldr	r2, [pc, #76]	@ (8002154 <MX_I2C2_Init+0x54>)
 8002108:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 400000;
 800210a:	4b11      	ldr	r3, [pc, #68]	@ (8002150 <MX_I2C2_Init+0x50>)
 800210c:	4a12      	ldr	r2, [pc, #72]	@ (8002158 <MX_I2C2_Init+0x58>)
 800210e:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002110:	4b0f      	ldr	r3, [pc, #60]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002112:	2200      	movs	r2, #0
 8002114:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8002116:	4b0e      	ldr	r3, [pc, #56]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002118:	2200      	movs	r2, #0
 800211a:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800211c:	4b0c      	ldr	r3, [pc, #48]	@ (8002150 <MX_I2C2_Init+0x50>)
 800211e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8002122:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002124:	4b0a      	ldr	r3, [pc, #40]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002126:	2200      	movs	r2, #0
 8002128:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 800212a:	4b09      	ldr	r3, [pc, #36]	@ (8002150 <MX_I2C2_Init+0x50>)
 800212c:	2200      	movs	r2, #0
 800212e:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002130:	4b07      	ldr	r3, [pc, #28]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002132:	2200      	movs	r2, #0
 8002134:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002136:	4b06      	ldr	r3, [pc, #24]	@ (8002150 <MX_I2C2_Init+0x50>)
 8002138:	2200      	movs	r2, #0
 800213a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800213c:	4804      	ldr	r0, [pc, #16]	@ (8002150 <MX_I2C2_Init+0x50>)
 800213e:	f003 fa15 	bl	800556c <HAL_I2C_Init>
 8002142:	4603      	mov	r3, r0
 8002144:	2b00      	cmp	r3, #0
 8002146:	d001      	beq.n	800214c <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8002148:	f000 fd90 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800214c:	bf00      	nop
 800214e:	bd80      	pop	{r7, pc}
 8002150:	20000458 	.word	0x20000458
 8002154:	40005800 	.word	0x40005800
 8002158:	00061a80 	.word	0x00061a80

0800215c <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 800215c:	b580      	push	{r7, lr}
 800215e:	b086      	sub	sp, #24
 8002160:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8002162:	1d3b      	adds	r3, r7, #4
 8002164:	2200      	movs	r2, #0
 8002166:	601a      	str	r2, [r3, #0]
 8002168:	605a      	str	r2, [r3, #4]
 800216a:	609a      	str	r2, [r3, #8]
 800216c:	60da      	str	r2, [r3, #12]
 800216e:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8002170:	2300      	movs	r3, #0
 8002172:	603b      	str	r3, [r7, #0]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8002174:	4b24      	ldr	r3, [pc, #144]	@ (8002208 <MX_RTC_Init+0xac>)
 8002176:	4a25      	ldr	r2, [pc, #148]	@ (800220c <MX_RTC_Init+0xb0>)
 8002178:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 800217a:	4b23      	ldr	r3, [pc, #140]	@ (8002208 <MX_RTC_Init+0xac>)
 800217c:	2200      	movs	r2, #0
 800217e:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8002180:	4b21      	ldr	r3, [pc, #132]	@ (8002208 <MX_RTC_Init+0xac>)
 8002182:	227f      	movs	r2, #127	@ 0x7f
 8002184:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8002186:	4b20      	ldr	r3, [pc, #128]	@ (8002208 <MX_RTC_Init+0xac>)
 8002188:	22ff      	movs	r2, #255	@ 0xff
 800218a:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 800218c:	4b1e      	ldr	r3, [pc, #120]	@ (8002208 <MX_RTC_Init+0xac>)
 800218e:	2200      	movs	r2, #0
 8002190:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8002192:	4b1d      	ldr	r3, [pc, #116]	@ (8002208 <MX_RTC_Init+0xac>)
 8002194:	2200      	movs	r2, #0
 8002196:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8002198:	4b1b      	ldr	r3, [pc, #108]	@ (8002208 <MX_RTC_Init+0xac>)
 800219a:	2200      	movs	r2, #0
 800219c:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 800219e:	481a      	ldr	r0, [pc, #104]	@ (8002208 <MX_RTC_Init+0xac>)
 80021a0:	f004 fd2c 	bl	8006bfc <HAL_RTC_Init>
 80021a4:	4603      	mov	r3, r0
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d001      	beq.n	80021ae <MX_RTC_Init+0x52>
  {
    Error_Handler();
 80021aa:	f000 fd5f 	bl	8002c6c <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 80021ae:	2300      	movs	r3, #0
 80021b0:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 80021b2:	2300      	movs	r3, #0
 80021b4:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 80021b6:	2300      	movs	r3, #0
 80021b8:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80021ba:	2300      	movs	r3, #0
 80021bc:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80021be:	2300      	movs	r3, #0
 80021c0:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80021c2:	1d3b      	adds	r3, r7, #4
 80021c4:	2201      	movs	r2, #1
 80021c6:	4619      	mov	r1, r3
 80021c8:	480f      	ldr	r0, [pc, #60]	@ (8002208 <MX_RTC_Init+0xac>)
 80021ca:	f004 fd98 	bl	8006cfe <HAL_RTC_SetTime>
 80021ce:	4603      	mov	r3, r0
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d001      	beq.n	80021d8 <MX_RTC_Init+0x7c>
  {
    Error_Handler();
 80021d4:	f000 fd4a 	bl	8002c6c <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80021d8:	2301      	movs	r3, #1
 80021da:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 80021dc:	2301      	movs	r3, #1
 80021de:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 80021e0:	2301      	movs	r3, #1
 80021e2:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 80021e4:	2300      	movs	r3, #0
 80021e6:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80021e8:	463b      	mov	r3, r7
 80021ea:	2201      	movs	r2, #1
 80021ec:	4619      	mov	r1, r3
 80021ee:	4806      	ldr	r0, [pc, #24]	@ (8002208 <MX_RTC_Init+0xac>)
 80021f0:	f004 fe7d 	bl	8006eee <HAL_RTC_SetDate>
 80021f4:	4603      	mov	r3, r0
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d001      	beq.n	80021fe <MX_RTC_Init+0xa2>
  {
    Error_Handler();
 80021fa:	f000 fd37 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 80021fe:	bf00      	nop
 8002200:	3718      	adds	r7, #24
 8002202:	46bd      	mov	sp, r7
 8002204:	bd80      	pop	{r7, pc}
 8002206:	bf00      	nop
 8002208:	200004ac 	.word	0x200004ac
 800220c:	40002800 	.word	0x40002800

08002210 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8002210:	b580      	push	{r7, lr}
 8002212:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8002214:	4b17      	ldr	r3, [pc, #92]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002216:	4a18      	ldr	r2, [pc, #96]	@ (8002278 <MX_SPI1_Init+0x68>)
 8002218:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800221a:	4b16      	ldr	r3, [pc, #88]	@ (8002274 <MX_SPI1_Init+0x64>)
 800221c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002220:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002222:	4b14      	ldr	r3, [pc, #80]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002224:	2200      	movs	r2, #0
 8002226:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002228:	4b12      	ldr	r3, [pc, #72]	@ (8002274 <MX_SPI1_Init+0x64>)
 800222a:	2200      	movs	r2, #0
 800222c:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800222e:	4b11      	ldr	r3, [pc, #68]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002230:	2200      	movs	r2, #0
 8002232:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002234:	4b0f      	ldr	r3, [pc, #60]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002236:	2200      	movs	r2, #0
 8002238:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800223a:	4b0e      	ldr	r3, [pc, #56]	@ (8002274 <MX_SPI1_Init+0x64>)
 800223c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002240:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8002242:	4b0c      	ldr	r3, [pc, #48]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002244:	2210      	movs	r2, #16
 8002246:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002248:	4b0a      	ldr	r3, [pc, #40]	@ (8002274 <MX_SPI1_Init+0x64>)
 800224a:	2200      	movs	r2, #0
 800224c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800224e:	4b09      	ldr	r3, [pc, #36]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002250:	2200      	movs	r2, #0
 8002252:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002254:	4b07      	ldr	r3, [pc, #28]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002256:	2200      	movs	r2, #0
 8002258:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 800225a:	4b06      	ldr	r3, [pc, #24]	@ (8002274 <MX_SPI1_Init+0x64>)
 800225c:	220a      	movs	r2, #10
 800225e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002260:	4804      	ldr	r0, [pc, #16]	@ (8002274 <MX_SPI1_Init+0x64>)
 8002262:	f004 ffd5 	bl	8007210 <HAL_SPI_Init>
 8002266:	4603      	mov	r3, r0
 8002268:	2b00      	cmp	r3, #0
 800226a:	d001      	beq.n	8002270 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 800226c:	f000 fcfe 	bl	8002c6c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002270:	bf00      	nop
 8002272:	bd80      	pop	{r7, pc}
 8002274:	200004cc 	.word	0x200004cc
 8002278:	40013000 	.word	0x40013000

0800227c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800227c:	b580      	push	{r7, lr}
 800227e:	b082      	sub	sp, #8
 8002280:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002282:	2300      	movs	r3, #0
 8002284:	607b      	str	r3, [r7, #4]
 8002286:	4b0c      	ldr	r3, [pc, #48]	@ (80022b8 <MX_DMA_Init+0x3c>)
 8002288:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800228a:	4a0b      	ldr	r2, [pc, #44]	@ (80022b8 <MX_DMA_Init+0x3c>)
 800228c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8002290:	6313      	str	r3, [r2, #48]	@ 0x30
 8002292:	4b09      	ldr	r3, [pc, #36]	@ (80022b8 <MX_DMA_Init+0x3c>)
 8002294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002296:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800229a:	607b      	str	r3, [r7, #4]
 800229c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 800229e:	2200      	movs	r2, #0
 80022a0:	2105      	movs	r1, #5
 80022a2:	2038      	movs	r0, #56	@ 0x38
 80022a4:	f002 fbe0 	bl	8004a68 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80022a8:	2038      	movs	r0, #56	@ 0x38
 80022aa:	f002 fbf9 	bl	8004aa0 <HAL_NVIC_EnableIRQ>

}
 80022ae:	bf00      	nop
 80022b0:	3708      	adds	r7, #8
 80022b2:	46bd      	mov	sp, r7
 80022b4:	bd80      	pop	{r7, pc}
 80022b6:	bf00      	nop
 80022b8:	40023800 	.word	0x40023800

080022bc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80022bc:	b580      	push	{r7, lr}
 80022be:	b088      	sub	sp, #32
 80022c0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022c2:	f107 030c 	add.w	r3, r7, #12
 80022c6:	2200      	movs	r2, #0
 80022c8:	601a      	str	r2, [r3, #0]
 80022ca:	605a      	str	r2, [r3, #4]
 80022cc:	609a      	str	r2, [r3, #8]
 80022ce:	60da      	str	r2, [r3, #12]
 80022d0:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80022d2:	2300      	movs	r3, #0
 80022d4:	60bb      	str	r3, [r7, #8]
 80022d6:	4b31      	ldr	r3, [pc, #196]	@ (800239c <MX_GPIO_Init+0xe0>)
 80022d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022da:	4a30      	ldr	r2, [pc, #192]	@ (800239c <MX_GPIO_Init+0xe0>)
 80022dc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80022e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80022e2:	4b2e      	ldr	r3, [pc, #184]	@ (800239c <MX_GPIO_Init+0xe0>)
 80022e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022e6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80022ea:	60bb      	str	r3, [r7, #8]
 80022ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80022ee:	2300      	movs	r3, #0
 80022f0:	607b      	str	r3, [r7, #4]
 80022f2:	4b2a      	ldr	r3, [pc, #168]	@ (800239c <MX_GPIO_Init+0xe0>)
 80022f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022f6:	4a29      	ldr	r2, [pc, #164]	@ (800239c <MX_GPIO_Init+0xe0>)
 80022f8:	f043 0301 	orr.w	r3, r3, #1
 80022fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80022fe:	4b27      	ldr	r3, [pc, #156]	@ (800239c <MX_GPIO_Init+0xe0>)
 8002300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002302:	f003 0301 	and.w	r3, r3, #1
 8002306:	607b      	str	r3, [r7, #4]
 8002308:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800230a:	2300      	movs	r3, #0
 800230c:	603b      	str	r3, [r7, #0]
 800230e:	4b23      	ldr	r3, [pc, #140]	@ (800239c <MX_GPIO_Init+0xe0>)
 8002310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002312:	4a22      	ldr	r2, [pc, #136]	@ (800239c <MX_GPIO_Init+0xe0>)
 8002314:	f043 0302 	orr.w	r3, r3, #2
 8002318:	6313      	str	r3, [r2, #48]	@ 0x30
 800231a:	4b20      	ldr	r3, [pc, #128]	@ (800239c <MX_GPIO_Init+0xe0>)
 800231c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800231e:	f003 0302 	and.w	r3, r3, #2
 8002322:	603b      	str	r3, [r7, #0]
 8002324:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_Pin|GPIO_PIN_2|LCD_CS_Pin|LCD_RS_Pin
 8002326:	2200      	movs	r2, #0
 8002328:	f240 3185 	movw	r1, #901	@ 0x385
 800232c:	481c      	ldr	r0, [pc, #112]	@ (80023a0 <MX_GPIO_Init+0xe4>)
 800232e:	f003 f8e9 	bl	8005504 <HAL_GPIO_WritePin>
                          |GPIO_PIN_9, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_PA9_GPIO_Port, LCD_PA9_Pin, GPIO_PIN_RESET);
 8002332:	2200      	movs	r2, #0
 8002334:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002338:	481a      	ldr	r0, [pc, #104]	@ (80023a4 <MX_GPIO_Init+0xe8>)
 800233a:	f003 f8e3 	bl	8005504 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : btn_Pin */
  GPIO_InitStruct.Pin = btn_Pin;
 800233e:	2302      	movs	r3, #2
 8002340:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002342:	2300      	movs	r3, #0
 8002344:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002346:	2300      	movs	r3, #0
 8002348:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(btn_GPIO_Port, &GPIO_InitStruct);
 800234a:	f107 030c 	add.w	r3, r7, #12
 800234e:	4619      	mov	r1, r3
 8002350:	4814      	ldr	r0, [pc, #80]	@ (80023a4 <MX_GPIO_Init+0xe8>)
 8002352:	f002 ff23 	bl	800519c <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_Pin PB2 LCD_CS_Pin LCD_RS_Pin
                           PB9 */
  GPIO_InitStruct.Pin = LED_Pin|GPIO_PIN_2|LCD_CS_Pin|LCD_RS_Pin
 8002356:	f240 3385 	movw	r3, #901	@ 0x385
 800235a:	60fb      	str	r3, [r7, #12]
                          |GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800235c:	2301      	movs	r3, #1
 800235e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002360:	2300      	movs	r3, #0
 8002362:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002364:	2300      	movs	r3, #0
 8002366:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002368:	f107 030c 	add.w	r3, r7, #12
 800236c:	4619      	mov	r1, r3
 800236e:	480c      	ldr	r0, [pc, #48]	@ (80023a0 <MX_GPIO_Init+0xe4>)
 8002370:	f002 ff14 	bl	800519c <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_PA9_Pin */
  GPIO_InitStruct.Pin = LCD_PA9_Pin;
 8002374:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002378:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800237a:	2301      	movs	r3, #1
 800237c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800237e:	2300      	movs	r3, #0
 8002380:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002382:	2300      	movs	r3, #0
 8002384:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(LCD_PA9_GPIO_Port, &GPIO_InitStruct);
 8002386:	f107 030c 	add.w	r3, r7, #12
 800238a:	4619      	mov	r1, r3
 800238c:	4805      	ldr	r0, [pc, #20]	@ (80023a4 <MX_GPIO_Init+0xe8>)
 800238e:	f002 ff05 	bl	800519c <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002392:	bf00      	nop
 8002394:	3720      	adds	r7, #32
 8002396:	46bd      	mov	sp, r7
 8002398:	bd80      	pop	{r7, pc}
 800239a:	bf00      	nop
 800239c:	40023800 	.word	0x40023800
 80023a0:	40020400 	.word	0x40020400
 80023a4:	40020000 	.word	0x40020000

080023a8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 80023a8:	b580      	push	{r7, lr}
 80023aa:	b086      	sub	sp, #24
 80023ac:	af02      	add	r7, sp, #8
 80023ae:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */

  for(;;)
  {
    if (current_screen == 0) {
 80023b0:	4b57      	ldr	r3, [pc, #348]	@ (8002510 <StartDefaultTask+0x168>)
 80023b2:	781b      	ldrb	r3, [r3, #0]
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	f040 80a7 	bne.w	8002508 <StartDefaultTask+0x160>
    	if (need_redraw_main) {
 80023ba:	4b56      	ldr	r3, [pc, #344]	@ (8002514 <StartDefaultTask+0x16c>)
 80023bc:	781b      	ldrb	r3, [r3, #0]
 80023be:	2b00      	cmp	r3, #0
 80023c0:	f000 809e 	beq.w	8002500 <StartDefaultTask+0x158>
    		lcd_clear_screen(WHITE);
 80023c4:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80023c8:	f7fe fe82 	bl	80010d0 <lcd_clear_screen>
    		lcd_display_string(85, 20, (uint8_t*)"[NHOM 08]", FONT_1608, N);
 80023cc:	230e      	movs	r3, #14
 80023ce:	9300      	str	r3, [sp, #0]
 80023d0:	2310      	movs	r3, #16
 80023d2:	4a51      	ldr	r2, [pc, #324]	@ (8002518 <StartDefaultTask+0x170>)
 80023d4:	2114      	movs	r1, #20
 80023d6:	2055      	movs	r0, #85	@ 0x55
 80023d8:	f7ff f80e 	bl	80013f8 <lcd_display_string>
    		lcd_draw_rect(60, 5, 120, 40, GREEN);
 80023dc:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80023e0:	9300      	str	r3, [sp, #0]
 80023e2:	2328      	movs	r3, #40	@ 0x28
 80023e4:	2278      	movs	r2, #120	@ 0x78
 80023e6:	2105      	movs	r1, #5
 80023e8:	203c      	movs	r0, #60	@ 0x3c
 80023ea:	f7ff f9db 	bl	80017a4 <lcd_draw_rect>
    		lcd_draw_rect(62, 7, 116, 36, YELLOW);
 80023ee:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 80023f2:	9300      	str	r3, [sp, #0]
 80023f4:	2324      	movs	r3, #36	@ 0x24
 80023f6:	2274      	movs	r2, #116	@ 0x74
 80023f8:	2107      	movs	r1, #7
 80023fa:	203e      	movs	r0, #62	@ 0x3e
 80023fc:	f7ff f9d2 	bl	80017a4 <lcd_draw_rect>
    		lcd_display_string(40, 60, (uint8_t*)"DANH SACH THANH VIEN", FONT_1608, N);
 8002400:	230e      	movs	r3, #14
 8002402:	9300      	str	r3, [sp, #0]
 8002404:	2310      	movs	r3, #16
 8002406:	4a45      	ldr	r2, [pc, #276]	@ (800251c <StartDefaultTask+0x174>)
 8002408:	213c      	movs	r1, #60	@ 0x3c
 800240a:	2028      	movs	r0, #40	@ 0x28
 800240c:	f7fe fff4 	bl	80013f8 <lcd_display_string>
    		lcd_draw_rect(20, 45, 200, 40, BLUE);
 8002410:	231f      	movs	r3, #31
 8002412:	9300      	str	r3, [sp, #0]
 8002414:	2328      	movs	r3, #40	@ 0x28
 8002416:	22c8      	movs	r2, #200	@ 0xc8
 8002418:	212d      	movs	r1, #45	@ 0x2d
 800241a:	2014      	movs	r0, #20
 800241c:	f7ff f9c2 	bl	80017a4 <lcd_draw_rect>
       		lcd_draw_rect(22, 47, 196, 36, RED);
 8002420:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002424:	9300      	str	r3, [sp, #0]
 8002426:	2324      	movs	r3, #36	@ 0x24
 8002428:	22c4      	movs	r2, #196	@ 0xc4
 800242a:	212f      	movs	r1, #47	@ 0x2f
 800242c:	2016      	movs	r0, #22
 800242e:	f7ff f9b9 	bl	80017a4 <lcd_draw_rect>
    		lcd_display_string(0, 90, (uint8_t*)"22200061 Le Bao Gia Hoang", FONT_1608, N);
 8002432:	230e      	movs	r3, #14
 8002434:	9300      	str	r3, [sp, #0]
 8002436:	2310      	movs	r3, #16
 8002438:	4a39      	ldr	r2, [pc, #228]	@ (8002520 <StartDefaultTask+0x178>)
 800243a:	215a      	movs	r1, #90	@ 0x5a
 800243c:	2000      	movs	r0, #0
 800243e:	f7fe ffdb 	bl	80013f8 <lcd_display_string>
    		lcd_display_string(0, 120, (uint8_t*)"22200188 Doan Le Thanh Toan", FONT_1608, N);
 8002442:	230e      	movs	r3, #14
 8002444:	9300      	str	r3, [sp, #0]
 8002446:	2310      	movs	r3, #16
 8002448:	4a36      	ldr	r2, [pc, #216]	@ (8002524 <StartDefaultTask+0x17c>)
 800244a:	2178      	movs	r1, #120	@ 0x78
 800244c:	2000      	movs	r0, #0
 800244e:	f7fe ffd3 	bl	80013f8 <lcd_display_string>
    		lcd_display_string(0, 150, (uint8_t*)"21200283 Nguyen Dao Binh Duong", FONT_1608, N);
 8002452:	230e      	movs	r3, #14
 8002454:	9300      	str	r3, [sp, #0]
 8002456:	2310      	movs	r3, #16
 8002458:	4a33      	ldr	r2, [pc, #204]	@ (8002528 <StartDefaultTask+0x180>)
 800245a:	2196      	movs	r1, #150	@ 0x96
 800245c:	2000      	movs	r0, #0
 800245e:	f7fe ffcb 	bl	80013f8 <lcd_display_string>
    		lcd_display_string(0, 180, (uint8_t*)"21200351 Le Minh Thanh", FONT_1608, N);
 8002462:	230e      	movs	r3, #14
 8002464:	9300      	str	r3, [sp, #0]
 8002466:	2310      	movs	r3, #16
 8002468:	4a30      	ldr	r2, [pc, #192]	@ (800252c <StartDefaultTask+0x184>)
 800246a:	21b4      	movs	r1, #180	@ 0xb4
 800246c:	2000      	movs	r0, #0
 800246e:	f7fe ffc3 	bl	80013f8 <lcd_display_string>
    		lcd_display_string(0, 210, (uint8_t*)"21200320 Tran Nguyen Nhat", FONT_1608, N);
 8002472:	230e      	movs	r3, #14
 8002474:	9300      	str	r3, [sp, #0]
 8002476:	2310      	movs	r3, #16
 8002478:	4a2d      	ldr	r2, [pc, #180]	@ (8002530 <StartDefaultTask+0x188>)
 800247a:	21d2      	movs	r1, #210	@ 0xd2
 800247c:	2000      	movs	r0, #0
 800247e:	f7fe ffbb 	bl	80013f8 <lcd_display_string>
//    		lcd_draw_rect(60, 190, 120, 40, BLUE);
//    		lcd_draw_rect(62, 192, 116, 36, BLUE);

    		lcd_draw_rect(60, 250, 120, 40, BLUE);
 8002482:	231f      	movs	r3, #31
 8002484:	9300      	str	r3, [sp, #0]
 8002486:	2328      	movs	r3, #40	@ 0x28
 8002488:	2278      	movs	r2, #120	@ 0x78
 800248a:	21fa      	movs	r1, #250	@ 0xfa
 800248c:	203c      	movs	r0, #60	@ 0x3c
 800248e:	f7ff f989 	bl	80017a4 <lcd_draw_rect>
    		lcd_draw_rect(62, 252, 116, 36, RED);
 8002492:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002496:	9300      	str	r3, [sp, #0]
 8002498:	2324      	movs	r3, #36	@ 0x24
 800249a:	2274      	movs	r2, #116	@ 0x74
 800249c:	21fc      	movs	r1, #252	@ 0xfc
 800249e:	203e      	movs	r0, #62	@ 0x3e
 80024a0:	f7ff f980 	bl	80017a4 <lcd_draw_rect>

    		// lcd_fill_rect(60, 190, 120, 40, BLUE);
    		lcd_display_string(90, 265, (uint8_t*)"TASK 2 >>", FONT_1608, N);
 80024a4:	230e      	movs	r3, #14
 80024a6:	9300      	str	r3, [sp, #0]
 80024a8:	2310      	movs	r3, #16
 80024aa:	4a22      	ldr	r2, [pc, #136]	@ (8002534 <StartDefaultTask+0x18c>)
 80024ac:	f240 1109 	movw	r1, #265	@ 0x109
 80024b0:	205a      	movs	r0, #90	@ 0x5a
 80024b2:	f7fe ffa1 	bl	80013f8 <lcd_display_string>
    		need_redraw_main = 0;
 80024b6:	4b17      	ldr	r3, [pc, #92]	@ (8002514 <StartDefaultTask+0x16c>)
 80024b8:	2200      	movs	r2, #0
 80024ba:	701a      	strb	r2, [r3, #0]
    	}

      while(current_screen == 0) {
 80024bc:	e020      	b.n	8002500 <StartDefaultTask+0x158>
    	  uint16_t x, y;
    	  if (tp_get_touch_point(&x, &y)) {
 80024be:	f107 020c 	add.w	r2, r7, #12
 80024c2:	f107 030e 	add.w	r3, r7, #14
 80024c6:	4611      	mov	r1, r2
 80024c8:	4618      	mov	r0, r3
 80024ca:	f001 f80b 	bl	80034e4 <tp_get_touch_point>
 80024ce:	4603      	mov	r3, r0
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d015      	beq.n	8002500 <StartDefaultTask+0x158>
//          char str[30];
//          sprintf(str, "X:%d Y:%d   ", x, y);
//          lcd_display_string(10, 170, (uint8_t*)str, FONT_1206, RED);

          if (x >= 60 && x <= 180 && y >= 250 && y <= 290) {
 80024d4:	89fb      	ldrh	r3, [r7, #14]
 80024d6:	2b3b      	cmp	r3, #59	@ 0x3b
 80024d8:	d912      	bls.n	8002500 <StartDefaultTask+0x158>
 80024da:	89fb      	ldrh	r3, [r7, #14]
 80024dc:	2bb4      	cmp	r3, #180	@ 0xb4
 80024de:	d80f      	bhi.n	8002500 <StartDefaultTask+0x158>
 80024e0:	89bb      	ldrh	r3, [r7, #12]
 80024e2:	2bf9      	cmp	r3, #249	@ 0xf9
 80024e4:	d90c      	bls.n	8002500 <StartDefaultTask+0x158>
 80024e6:	89bb      	ldrh	r3, [r7, #12]
 80024e8:	f5b3 7f91 	cmp.w	r3, #290	@ 0x122
 80024ec:	d808      	bhi.n	8002500 <StartDefaultTask+0x158>
            // lcd_display_string(50, 230, (uint8_t*)"MENU PRESSED!", FONT_1206, RED);
//            osDelay(500);

            extern uint8_t need_redraw_menu;
            need_redraw_menu = 1;
 80024ee:	4b12      	ldr	r3, [pc, #72]	@ (8002538 <StartDefaultTask+0x190>)
 80024f0:	2201      	movs	r2, #1
 80024f2:	701a      	strb	r2, [r3, #0]

            current_screen = 1;
 80024f4:	4b06      	ldr	r3, [pc, #24]	@ (8002510 <StartDefaultTask+0x168>)
 80024f6:	2201      	movs	r2, #1
 80024f8:	701a      	strb	r2, [r3, #0]
            need_redraw_main = 1;
 80024fa:	4b06      	ldr	r3, [pc, #24]	@ (8002514 <StartDefaultTask+0x16c>)
 80024fc:	2201      	movs	r2, #1
 80024fe:	701a      	strb	r2, [r3, #0]
      while(current_screen == 0) {
 8002500:	4b03      	ldr	r3, [pc, #12]	@ (8002510 <StartDefaultTask+0x168>)
 8002502:	781b      	ldrb	r3, [r3, #0]
 8002504:	2b00      	cmp	r3, #0
 8002506:	d0da      	beq.n	80024be <StartDefaultTask+0x116>
          }
        }
//        osDelay(50);
      }
    }
    osDelay(5);
 8002508:	2005      	movs	r0, #5
 800250a:	f005 fdec 	bl	80080e6 <osDelay>
    if (current_screen == 0) {
 800250e:	e74f      	b.n	80023b0 <StartDefaultTask+0x8>
 8002510:	2000053c 	.word	0x2000053c
 8002514:	20000000 	.word	0x20000000
 8002518:	0800a340 	.word	0x0800a340
 800251c:	0800a34c 	.word	0x0800a34c
 8002520:	0800a364 	.word	0x0800a364
 8002524:	0800a380 	.word	0x0800a380
 8002528:	0800a39c 	.word	0x0800a39c
 800252c:	0800a3bc 	.word	0x0800a3bc
 8002530:	0800a3d4 	.word	0x0800a3d4
 8002534:	0800a3f0 	.word	0x0800a3f0
 8002538:	20000001 	.word	0x20000001

0800253c <LCD_Touch>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_LCD_Touch */
void LCD_Touch(void const * argument)
{
 800253c:	b580      	push	{r7, lr}
 800253e:	b086      	sub	sp, #24
 8002540:	af02      	add	r7, sp, #8
 8002542:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN LCD_Touch */
	/* Infinite loop */
//	static uint8_t need_redraw_menu = 1;
	 for(;;)
	  {
	    if (current_screen == 1) {
 8002544:	4bba      	ldr	r3, [pc, #744]	@ (8002830 <LCD_Touch+0x2f4>)
 8002546:	781b      	ldrb	r3, [r3, #0]
 8002548:	2b01      	cmp	r3, #1
 800254a:	f040 81dc 	bne.w	8002906 <LCD_Touch+0x3ca>
	    	 if (need_redraw_menu) {
 800254e:	4bb9      	ldr	r3, [pc, #740]	@ (8002834 <LCD_Touch+0x2f8>)
 8002550:	781b      	ldrb	r3, [r3, #0]
 8002552:	2b00      	cmp	r3, #0
 8002554:	f000 81d2 	beq.w	80028fc <LCD_Touch+0x3c0>
	    		lcd_clear_screen(N);
 8002558:	200e      	movs	r0, #14
 800255a:	f7fe fdb9 	bl	80010d0 <lcd_clear_screen>

				lcd_draw_rect(10, 10, 130, 20, WHITE);
 800255e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002562:	9300      	str	r3, [sp, #0]
 8002564:	2314      	movs	r3, #20
 8002566:	2282      	movs	r2, #130	@ 0x82
 8002568:	210a      	movs	r1, #10
 800256a:	200a      	movs	r0, #10
 800256c:	f7ff f91a 	bl	80017a4 <lcd_draw_rect>
				lcd_draw_rect(11, 11, 128, 18, WHITE);
 8002570:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002574:	9300      	str	r3, [sp, #0]
 8002576:	2312      	movs	r3, #18
 8002578:	2280      	movs	r2, #128	@ 0x80
 800257a:	210b      	movs	r1, #11
 800257c:	200b      	movs	r0, #11
 800257e:	f7ff f911 	bl	80017a4 <lcd_draw_rect>
				//lcd_fill_rect(10, 10, 130, 20, WHITE);
				lcd_display_string(20, 12, (uint8_t*)"Nhom:[Nhom 08]", FONT_1608, WHITE);
 8002582:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002586:	9300      	str	r3, [sp, #0]
 8002588:	2310      	movs	r3, #16
 800258a:	4aab      	ldr	r2, [pc, #684]	@ (8002838 <LCD_Touch+0x2fc>)
 800258c:	210c      	movs	r1, #12
 800258e:	2014      	movs	r0, #20
 8002590:	f7fe ff32 	bl	80013f8 <lcd_display_string>

			    lcd_draw_rect(20, 50, 90, 70, WHITE);
 8002594:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002598:	9300      	str	r3, [sp, #0]
 800259a:	2346      	movs	r3, #70	@ 0x46
 800259c:	225a      	movs	r2, #90	@ 0x5a
 800259e:	2132      	movs	r1, #50	@ 0x32
 80025a0:	2014      	movs	r0, #20
 80025a2:	f7ff f8ff 	bl	80017a4 <lcd_draw_rect>
			    lcd_draw_rect(21, 51, 88, 68, WHITE);
 80025a6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80025aa:	9300      	str	r3, [sp, #0]
 80025ac:	2344      	movs	r3, #68	@ 0x44
 80025ae:	2258      	movs	r2, #88	@ 0x58
 80025b0:	2133      	movs	r1, #51	@ 0x33
 80025b2:	2015      	movs	r0, #21
 80025b4:	f7ff f8f6 	bl	80017a4 <lcd_draw_rect>

			    //lcd_fill_rect(20, 50, 90, 70, WHITE);
			    lcd_display_string(30, 75, (uint8_t*)"Task 02-1", FONT_1608, WHITE);
 80025b8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80025bc:	9300      	str	r3, [sp, #0]
 80025be:	2310      	movs	r3, #16
 80025c0:	4a9e      	ldr	r2, [pc, #632]	@ (800283c <LCD_Touch+0x300>)
 80025c2:	214b      	movs	r1, #75	@ 0x4b
 80025c4:	201e      	movs	r0, #30
 80025c6:	f7fe ff17 	bl	80013f8 <lcd_display_string>
			    lcd_display_string(30, 95, (uint8_t*)"LED OFF", FONT_1206, RED);
 80025ca:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80025ce:	9300      	str	r3, [sp, #0]
 80025d0:	230c      	movs	r3, #12
 80025d2:	4a9b      	ldr	r2, [pc, #620]	@ (8002840 <LCD_Touch+0x304>)
 80025d4:	215f      	movs	r1, #95	@ 0x5f
 80025d6:	201e      	movs	r0, #30
 80025d8:	f7fe ff0e 	bl	80013f8 <lcd_display_string>

			    lcd_draw_rect(130, 50, 90, 70, WHITE);
 80025dc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80025e0:	9300      	str	r3, [sp, #0]
 80025e2:	2346      	movs	r3, #70	@ 0x46
 80025e4:	225a      	movs	r2, #90	@ 0x5a
 80025e6:	2132      	movs	r1, #50	@ 0x32
 80025e8:	2082      	movs	r0, #130	@ 0x82
 80025ea:	f7ff f8db 	bl	80017a4 <lcd_draw_rect>
			    lcd_draw_rect(131, 51, 88, 68, WHITE);
 80025ee:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80025f2:	9300      	str	r3, [sp, #0]
 80025f4:	2344      	movs	r3, #68	@ 0x44
 80025f6:	2258      	movs	r2, #88	@ 0x58
 80025f8:	2133      	movs	r1, #51	@ 0x33
 80025fa:	2083      	movs	r0, #131	@ 0x83
 80025fc:	f7ff f8d2 	bl	80017a4 <lcd_draw_rect>
			    //lcd_fill_rect(130, 50, 90, 70, WHITE);
			    lcd_display_string(140, 75, (uint8_t*)"Task 02-2", FONT_1608, WHITE);
 8002600:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002604:	9300      	str	r3, [sp, #0]
 8002606:	2310      	movs	r3, #16
 8002608:	4a8e      	ldr	r2, [pc, #568]	@ (8002844 <LCD_Touch+0x308>)
 800260a:	214b      	movs	r1, #75	@ 0x4b
 800260c:	208c      	movs	r0, #140	@ 0x8c
 800260e:	f7fe fef3 	bl	80013f8 <lcd_display_string>

			    lcd_draw_rect(20, 140, 90, 70, WHITE);
 8002612:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002616:	9300      	str	r3, [sp, #0]
 8002618:	2346      	movs	r3, #70	@ 0x46
 800261a:	225a      	movs	r2, #90	@ 0x5a
 800261c:	218c      	movs	r1, #140	@ 0x8c
 800261e:	2014      	movs	r0, #20
 8002620:	f7ff f8c0 	bl	80017a4 <lcd_draw_rect>
			    lcd_draw_rect(21, 141, 88, 68, WHITE);
 8002624:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002628:	9300      	str	r3, [sp, #0]
 800262a:	2344      	movs	r3, #68	@ 0x44
 800262c:	2258      	movs	r2, #88	@ 0x58
 800262e:	218d      	movs	r1, #141	@ 0x8d
 8002630:	2015      	movs	r0, #21
 8002632:	f7ff f8b7 	bl	80017a4 <lcd_draw_rect>
			   // lcd_fill_rect(20, 140, 90, 70, WHITE);
			    lcd_display_string(30, 165, (uint8_t*)"Task 02-3", FONT_1608, WHITE);
 8002636:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800263a:	9300      	str	r3, [sp, #0]
 800263c:	2310      	movs	r3, #16
 800263e:	4a82      	ldr	r2, [pc, #520]	@ (8002848 <LCD_Touch+0x30c>)
 8002640:	21a5      	movs	r1, #165	@ 0xa5
 8002642:	201e      	movs	r0, #30
 8002644:	f7fe fed8 	bl	80013f8 <lcd_display_string>

			    lcd_draw_rect(130, 140, 90, 70, WHITE);
 8002648:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800264c:	9300      	str	r3, [sp, #0]
 800264e:	2346      	movs	r3, #70	@ 0x46
 8002650:	225a      	movs	r2, #90	@ 0x5a
 8002652:	218c      	movs	r1, #140	@ 0x8c
 8002654:	2082      	movs	r0, #130	@ 0x82
 8002656:	f7ff f8a5 	bl	80017a4 <lcd_draw_rect>
			    lcd_draw_rect(131, 141, 88, 68, WHITE);
 800265a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800265e:	9300      	str	r3, [sp, #0]
 8002660:	2344      	movs	r3, #68	@ 0x44
 8002662:	2258      	movs	r2, #88	@ 0x58
 8002664:	218d      	movs	r1, #141	@ 0x8d
 8002666:	2083      	movs	r0, #131	@ 0x83
 8002668:	f7ff f89c 	bl	80017a4 <lcd_draw_rect>
			    //lcd_fill_rect(130, 140, 90, 70, WHITE);
			    lcd_display_string(135, 165, (uint8_t*)"Task 02-4", FONT_1608, WHITE);
 800266c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002670:	9300      	str	r3, [sp, #0]
 8002672:	2310      	movs	r3, #16
 8002674:	4a75      	ldr	r2, [pc, #468]	@ (800284c <LCD_Touch+0x310>)
 8002676:	21a5      	movs	r1, #165	@ 0xa5
 8002678:	2087      	movs	r0, #135	@ 0x87
 800267a:	f7fe febd 	bl	80013f8 <lcd_display_string>

			    lcd_draw_rect(180, 220, 50, 20, WHITE);
 800267e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002682:	9300      	str	r3, [sp, #0]
 8002684:	2314      	movs	r3, #20
 8002686:	2232      	movs	r2, #50	@ 0x32
 8002688:	21dc      	movs	r1, #220	@ 0xdc
 800268a:	20b4      	movs	r0, #180	@ 0xb4
 800268c:	f7ff f88a 	bl	80017a4 <lcd_draw_rect>
			    lcd_draw_rect(181, 221, 48, 18, WHITE);
 8002690:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002694:	9300      	str	r3, [sp, #0]
 8002696:	2312      	movs	r3, #18
 8002698:	2230      	movs	r2, #48	@ 0x30
 800269a:	21dd      	movs	r1, #221	@ 0xdd
 800269c:	20b5      	movs	r0, #181	@ 0xb5
 800269e:	f7ff f881 	bl	80017a4 <lcd_draw_rect>
			   // lcd_fill_rect(180, 220, 50, 20, WHITE);
			    lcd_display_string(184, 224, (uint8_t*)"<<BACK", FONT_1206, WHITE);
 80026a2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80026a6:	9300      	str	r3, [sp, #0]
 80026a8:	230c      	movs	r3, #12
 80026aa:	4a69      	ldr	r2, [pc, #420]	@ (8002850 <LCD_Touch+0x314>)
 80026ac:	21e0      	movs	r1, #224	@ 0xe0
 80026ae:	20b8      	movs	r0, #184	@ 0xb8
 80026b0:	f7fe fea2 	bl	80013f8 <lcd_display_string>

		        need_redraw_menu = 0;
 80026b4:	4b5f      	ldr	r3, [pc, #380]	@ (8002834 <LCD_Touch+0x2f8>)
 80026b6:	2200      	movs	r2, #0
 80026b8:	701a      	strb	r2, [r3, #0]
		      }

	      while(current_screen == 1) {
 80026ba:	e11f      	b.n	80028fc <LCD_Touch+0x3c0>
	        uint16_t x, y;
	        if (tp_get_touch_point(&x, &y)) {
 80026bc:	f107 020c 	add.w	r2, r7, #12
 80026c0:	f107 030e 	add.w	r3, r7, #14
 80026c4:	4611      	mov	r1, r2
 80026c6:	4618      	mov	r0, r3
 80026c8:	f000 ff0c 	bl	80034e4 <tp_get_touch_point>
 80026cc:	4603      	mov	r3, r0
 80026ce:	2b00      	cmp	r3, #0
 80026d0:	f000 8111 	beq.w	80028f6 <LCD_Touch+0x3ba>
	        /*  if (x >= 180 && x <= 230 && y >= 220 && y <= 240) {
	             // lcd_display_string(100, 220, (uint8_t*)"SWITCHING...", FONT_1206, RED);
	              current_screen = 0;
	              need_redraw_menu = 1;
	          }*/
	          if (x >= 180 && x <= 230 && y >= 220 && y <= 240) {
 80026d4:	89fb      	ldrh	r3, [r7, #14]
 80026d6:	2bb3      	cmp	r3, #179	@ 0xb3
 80026d8:	d931      	bls.n	800273e <LCD_Touch+0x202>
 80026da:	89fb      	ldrh	r3, [r7, #14]
 80026dc:	2be6      	cmp	r3, #230	@ 0xe6
 80026de:	d82e      	bhi.n	800273e <LCD_Touch+0x202>
 80026e0:	89bb      	ldrh	r3, [r7, #12]
 80026e2:	2bdb      	cmp	r3, #219	@ 0xdb
 80026e4:	d92b      	bls.n	800273e <LCD_Touch+0x202>
 80026e6:	89bb      	ldrh	r3, [r7, #12]
 80026e8:	2bf0      	cmp	r3, #240	@ 0xf0
 80026ea:	d828      	bhi.n	800273e <LCD_Touch+0x202>
	              // Hiển thị thông báo (tùy chọn)
	             // lcd_display_string(100, 220, (uint8_t*)"SWITCHING...", FONT_1206, RED);

	              // Suspend tất cả các task
	              osThreadSuspend(LED_TaskHandle);
 80026ec:	4b59      	ldr	r3, [pc, #356]	@ (8002854 <LCD_Touch+0x318>)
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	4618      	mov	r0, r3
 80026f2:	f005 fd0c 	bl	800810e <osThreadSuspend>
	              osThreadSuspend(CAN_TaskHandle);
 80026f6:	4b58      	ldr	r3, [pc, #352]	@ (8002858 <LCD_Touch+0x31c>)
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	4618      	mov	r0, r3
 80026fc:	f005 fd07 	bl	800810e <osThreadSuspend>
	              osThreadSuspend(Button_FRAM_TasHandle);
 8002700:	4b56      	ldr	r3, [pc, #344]	@ (800285c <LCD_Touch+0x320>)
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	4618      	mov	r0, r3
 8002706:	f005 fd02 	bl	800810e <osThreadSuspend>
	              osThreadSuspend(Display_CAN_DatHandle);
 800270a:	4b55      	ldr	r3, [pc, #340]	@ (8002860 <LCD_Touch+0x324>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	4618      	mov	r0, r3
 8002710:	f005 fcfd 	bl	800810e <osThreadSuspend>

	              // Reset biến led_running về 0
	              led_running = 0;
 8002714:	4b53      	ldr	r3, [pc, #332]	@ (8002864 <LCD_Touch+0x328>)
 8002716:	2200      	movs	r2, #0
 8002718:	701a      	strb	r2, [r3, #0]

	              // Tắt LED (đảm bảo LED không còn sáng)
	              HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 800271a:	2200      	movs	r2, #0
 800271c:	2101      	movs	r1, #1
 800271e:	4852      	ldr	r0, [pc, #328]	@ (8002868 <LCD_Touch+0x32c>)
 8002720:	f002 fef0 	bl	8005504 <HAL_GPIO_WritePin>

	              // Xóa các thông tin hiển thị trên màn hình
	              //lcd_fill_rect(0, 200, 240, 100, BLACK); // Xóa vùng thông tin nhiệt độ, CAN, v.v.

	              // Chuyển về màn hình chính
	              current_screen = 0;
 8002724:	4b42      	ldr	r3, [pc, #264]	@ (8002830 <LCD_Touch+0x2f4>)
 8002726:	2200      	movs	r2, #0
 8002728:	701a      	strb	r2, [r3, #0]
	              need_redraw_menu = 1;
 800272a:	4b42      	ldr	r3, [pc, #264]	@ (8002834 <LCD_Touch+0x2f8>)
 800272c:	2201      	movs	r2, #1
 800272e:	701a      	strb	r2, [r3, #0]

	              // Đặt biến redraw để vẽ lại màn hình chính hoàn toàn
	              need_redraw_main = 1;
 8002730:	4b4e      	ldr	r3, [pc, #312]	@ (800286c <LCD_Touch+0x330>)
 8002732:	2201      	movs	r2, #1
 8002734:	701a      	strb	r2, [r3, #0]

	              osDelay(100); // Delay ngắn để đảm bảo các thay đổi được áp dụng
 8002736:	2064      	movs	r0, #100	@ 0x64
 8002738:	f005 fcd5 	bl	80080e6 <osDelay>
 800273c:	e0db      	b.n	80028f6 <LCD_Touch+0x3ba>
	          }

	          else if (x >= 20 && x <= 110 && y >= 50 && y <= 120) {
 800273e:	89fb      	ldrh	r3, [r7, #14]
 8002740:	2b13      	cmp	r3, #19
 8002742:	d954      	bls.n	80027ee <LCD_Touch+0x2b2>
 8002744:	89fb      	ldrh	r3, [r7, #14]
 8002746:	2b6e      	cmp	r3, #110	@ 0x6e
 8002748:	d851      	bhi.n	80027ee <LCD_Touch+0x2b2>
 800274a:	89bb      	ldrh	r3, [r7, #12]
 800274c:	2b31      	cmp	r3, #49	@ 0x31
 800274e:	d94e      	bls.n	80027ee <LCD_Touch+0x2b2>
 8002750:	89bb      	ldrh	r3, [r7, #12]
 8002752:	2b78      	cmp	r3, #120	@ 0x78
 8002754:	d84b      	bhi.n	80027ee <LCD_Touch+0x2b2>
	              if (led_running) {
 8002756:	4b43      	ldr	r3, [pc, #268]	@ (8002864 <LCD_Touch+0x328>)
 8002758:	781b      	ldrb	r3, [r3, #0]
 800275a:	2b00      	cmp	r3, #0
 800275c:	d01e      	beq.n	800279c <LCD_Touch+0x260>
	                  // Nếu LED đang bật, tắt đi
	            	  lcd_display_string(30, 95, (uint8_t*)"LED ON", FONT_1206, N);
 800275e:	230e      	movs	r3, #14
 8002760:	9300      	str	r3, [sp, #0]
 8002762:	230c      	movs	r3, #12
 8002764:	4a42      	ldr	r2, [pc, #264]	@ (8002870 <LCD_Touch+0x334>)
 8002766:	215f      	movs	r1, #95	@ 0x5f
 8002768:	201e      	movs	r0, #30
 800276a:	f7fe fe45 	bl	80013f8 <lcd_display_string>
	                  lcd_display_string(30, 95, (uint8_t*)"LED OFF", FONT_1206, RED);
 800276e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002772:	9300      	str	r3, [sp, #0]
 8002774:	230c      	movs	r3, #12
 8002776:	4a32      	ldr	r2, [pc, #200]	@ (8002840 <LCD_Touch+0x304>)
 8002778:	215f      	movs	r1, #95	@ 0x5f
 800277a:	201e      	movs	r0, #30
 800277c:	f7fe fe3c 	bl	80013f8 <lcd_display_string>
	                  //osDelay(200);
	                  led_running = 0;
 8002780:	4b38      	ldr	r3, [pc, #224]	@ (8002864 <LCD_Touch+0x328>)
 8002782:	2200      	movs	r2, #0
 8002784:	701a      	strb	r2, [r3, #0]
	                  osThreadSuspend(LED_TaskHandle);
 8002786:	4b33      	ldr	r3, [pc, #204]	@ (8002854 <LCD_Touch+0x318>)
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	4618      	mov	r0, r3
 800278c:	f005 fcbf 	bl	800810e <osThreadSuspend>

	                  // Tắt LED (đặt về trạng thái tắt)
	                  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8002790:	2200      	movs	r2, #0
 8002792:	2101      	movs	r1, #1
 8002794:	4834      	ldr	r0, [pc, #208]	@ (8002868 <LCD_Touch+0x32c>)
 8002796:	f002 feb5 	bl	8005504 <HAL_GPIO_WritePin>
	              if (led_running) {
 800279a:	e0ac      	b.n	80028f6 <LCD_Touch+0x3ba>
	                  // Vẽ lại nút
	                //  lcd_fill_rect(20, 50, 90, 70, WHITE);
	                //  lcd_display_string(30, 75, (uint8_t*)"Task 02-1", FONT_1206, BLACK);
	              } else {
	                  // Nếu LED đang tắt, bật lên
	            	  lcd_display_string(30, 95, (uint8_t*)"LED OFF", FONT_1206, N);
 800279c:	230e      	movs	r3, #14
 800279e:	9300      	str	r3, [sp, #0]
 80027a0:	230c      	movs	r3, #12
 80027a2:	4a27      	ldr	r2, [pc, #156]	@ (8002840 <LCD_Touch+0x304>)
 80027a4:	215f      	movs	r1, #95	@ 0x5f
 80027a6:	201e      	movs	r0, #30
 80027a8:	f7fe fe26 	bl	80013f8 <lcd_display_string>
	                  lcd_display_string(30, 95, (uint8_t*)"LED ON", FONT_1206, GREEN);
 80027ac:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80027b0:	9300      	str	r3, [sp, #0]
 80027b2:	230c      	movs	r3, #12
 80027b4:	4a2e      	ldr	r2, [pc, #184]	@ (8002870 <LCD_Touch+0x334>)
 80027b6:	215f      	movs	r1, #95	@ 0x5f
 80027b8:	201e      	movs	r0, #30
 80027ba:	f7fe fe1d 	bl	80013f8 <lcd_display_string>
	                 // osDelay(200);
	                  led_running = 1;
 80027be:	4b29      	ldr	r3, [pc, #164]	@ (8002864 <LCD_Touch+0x328>)
 80027c0:	2201      	movs	r2, #1
 80027c2:	701a      	strb	r2, [r3, #0]

	                  // Tắt các task khác
	                  osThreadSuspend(CAN_TaskHandle);
 80027c4:	4b24      	ldr	r3, [pc, #144]	@ (8002858 <LCD_Touch+0x31c>)
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	4618      	mov	r0, r3
 80027ca:	f005 fca0 	bl	800810e <osThreadSuspend>
	                  osThreadSuspend(Button_FRAM_TasHandle);
 80027ce:	4b23      	ldr	r3, [pc, #140]	@ (800285c <LCD_Touch+0x320>)
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	4618      	mov	r0, r3
 80027d4:	f005 fc9b 	bl	800810e <osThreadSuspend>
	                  osThreadSuspend(Display_CAN_DatHandle);
 80027d8:	4b21      	ldr	r3, [pc, #132]	@ (8002860 <LCD_Touch+0x324>)
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	4618      	mov	r0, r3
 80027de:	f005 fc96 	bl	800810e <osThreadSuspend>

	                  // Bật LED task
	                  osThreadResume(LED_TaskHandle);
 80027e2:	4b1c      	ldr	r3, [pc, #112]	@ (8002854 <LCD_Touch+0x318>)
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	4618      	mov	r0, r3
 80027e8:	f005 fc9e 	bl	8008128 <osThreadResume>
	              if (led_running) {
 80027ec:	e083      	b.n	80028f6 <LCD_Touch+0x3ba>
	                  // Vẽ lại nút với đánh dấu đang bật
	                  //lcd_fill_rect(20, 50, 90, 70, CYAN);
	                  //lcd_display_string(30, 75, (uint8_t*)"Task 02-1", FONT_1206, BLACK);
	              }
	          }
		        else if (x >= 130 && x <= 220 && y >= 50 && y <= 120) {
 80027ee:	89fb      	ldrh	r3, [r7, #14]
 80027f0:	2b81      	cmp	r3, #129	@ 0x81
 80027f2:	d93f      	bls.n	8002874 <LCD_Touch+0x338>
 80027f4:	89fb      	ldrh	r3, [r7, #14]
 80027f6:	2bdc      	cmp	r3, #220	@ 0xdc
 80027f8:	d83c      	bhi.n	8002874 <LCD_Touch+0x338>
 80027fa:	89bb      	ldrh	r3, [r7, #12]
 80027fc:	2b31      	cmp	r3, #49	@ 0x31
 80027fe:	d939      	bls.n	8002874 <LCD_Touch+0x338>
 8002800:	89bb      	ldrh	r3, [r7, #12]
 8002802:	2b78      	cmp	r3, #120	@ 0x78
 8002804:	d836      	bhi.n	8002874 <LCD_Touch+0x338>
		          osThreadResume(CAN_TaskHandle);
 8002806:	4b14      	ldr	r3, [pc, #80]	@ (8002858 <LCD_Touch+0x31c>)
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	4618      	mov	r0, r3
 800280c:	f005 fc8c 	bl	8008128 <osThreadResume>
		          osThreadSuspend(LED_TaskHandle);
 8002810:	4b10      	ldr	r3, [pc, #64]	@ (8002854 <LCD_Touch+0x318>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	4618      	mov	r0, r3
 8002816:	f005 fc7a 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(Button_FRAM_TasHandle);
 800281a:	4b10      	ldr	r3, [pc, #64]	@ (800285c <LCD_Touch+0x320>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	4618      	mov	r0, r3
 8002820:	f005 fc75 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(Display_CAN_DatHandle);
 8002824:	4b0e      	ldr	r3, [pc, #56]	@ (8002860 <LCD_Touch+0x324>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	4618      	mov	r0, r3
 800282a:	f005 fc70 	bl	800810e <osThreadSuspend>
 800282e:	e062      	b.n	80028f6 <LCD_Touch+0x3ba>
 8002830:	2000053c 	.word	0x2000053c
 8002834:	20000001 	.word	0x20000001
 8002838:	0800a3fc 	.word	0x0800a3fc
 800283c:	0800a40c 	.word	0x0800a40c
 8002840:	0800a418 	.word	0x0800a418
 8002844:	0800a420 	.word	0x0800a420
 8002848:	0800a42c 	.word	0x0800a42c
 800284c:	0800a438 	.word	0x0800a438
 8002850:	0800a444 	.word	0x0800a444
 8002854:	2000052c 	.word	0x2000052c
 8002858:	20000530 	.word	0x20000530
 800285c:	20000534 	.word	0x20000534
 8002860:	20000538 	.word	0x20000538
 8002864:	20000540 	.word	0x20000540
 8002868:	40020400 	.word	0x40020400
 800286c:	20000000 	.word	0x20000000
 8002870:	0800a44c 	.word	0x0800a44c
		        }
		        else if (x >= 20 && x <= 110 && y >= 140 && y <= 210) {
 8002874:	89fb      	ldrh	r3, [r7, #14]
 8002876:	2b13      	cmp	r3, #19
 8002878:	d91d      	bls.n	80028b6 <LCD_Touch+0x37a>
 800287a:	89fb      	ldrh	r3, [r7, #14]
 800287c:	2b6e      	cmp	r3, #110	@ 0x6e
 800287e:	d81a      	bhi.n	80028b6 <LCD_Touch+0x37a>
 8002880:	89bb      	ldrh	r3, [r7, #12]
 8002882:	2b8b      	cmp	r3, #139	@ 0x8b
 8002884:	d917      	bls.n	80028b6 <LCD_Touch+0x37a>
 8002886:	89bb      	ldrh	r3, [r7, #12]
 8002888:	2bd2      	cmp	r3, #210	@ 0xd2
 800288a:	d814      	bhi.n	80028b6 <LCD_Touch+0x37a>
		          osThreadResume(Button_FRAM_TasHandle);
 800288c:	4b20      	ldr	r3, [pc, #128]	@ (8002910 <LCD_Touch+0x3d4>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4618      	mov	r0, r3
 8002892:	f005 fc49 	bl	8008128 <osThreadResume>
		          osThreadSuspend(LED_TaskHandle);
 8002896:	4b1f      	ldr	r3, [pc, #124]	@ (8002914 <LCD_Touch+0x3d8>)
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4618      	mov	r0, r3
 800289c:	f005 fc37 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(CAN_TaskHandle);
 80028a0:	4b1d      	ldr	r3, [pc, #116]	@ (8002918 <LCD_Touch+0x3dc>)
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	4618      	mov	r0, r3
 80028a6:	f005 fc32 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(Display_CAN_DatHandle);
 80028aa:	4b1c      	ldr	r3, [pc, #112]	@ (800291c <LCD_Touch+0x3e0>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4618      	mov	r0, r3
 80028b0:	f005 fc2d 	bl	800810e <osThreadSuspend>
 80028b4:	e01f      	b.n	80028f6 <LCD_Touch+0x3ba>
		        }
		        else if (x >= 130 && x <= 220 && y >= 140 && y <= 210) {
 80028b6:	89fb      	ldrh	r3, [r7, #14]
 80028b8:	2b81      	cmp	r3, #129	@ 0x81
 80028ba:	d91c      	bls.n	80028f6 <LCD_Touch+0x3ba>
 80028bc:	89fb      	ldrh	r3, [r7, #14]
 80028be:	2bdc      	cmp	r3, #220	@ 0xdc
 80028c0:	d819      	bhi.n	80028f6 <LCD_Touch+0x3ba>
 80028c2:	89bb      	ldrh	r3, [r7, #12]
 80028c4:	2b8b      	cmp	r3, #139	@ 0x8b
 80028c6:	d916      	bls.n	80028f6 <LCD_Touch+0x3ba>
 80028c8:	89bb      	ldrh	r3, [r7, #12]
 80028ca:	2bd2      	cmp	r3, #210	@ 0xd2
 80028cc:	d813      	bhi.n	80028f6 <LCD_Touch+0x3ba>
		          osThreadResume(Display_CAN_DatHandle);
 80028ce:	4b13      	ldr	r3, [pc, #76]	@ (800291c <LCD_Touch+0x3e0>)
 80028d0:	681b      	ldr	r3, [r3, #0]
 80028d2:	4618      	mov	r0, r3
 80028d4:	f005 fc28 	bl	8008128 <osThreadResume>
		          osThreadSuspend(LED_TaskHandle);
 80028d8:	4b0e      	ldr	r3, [pc, #56]	@ (8002914 <LCD_Touch+0x3d8>)
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	4618      	mov	r0, r3
 80028de:	f005 fc16 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(CAN_TaskHandle);
 80028e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002918 <LCD_Touch+0x3dc>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	4618      	mov	r0, r3
 80028e8:	f005 fc11 	bl	800810e <osThreadSuspend>
		          osThreadSuspend(Button_FRAM_TasHandle);
 80028ec:	4b08      	ldr	r3, [pc, #32]	@ (8002910 <LCD_Touch+0x3d4>)
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	4618      	mov	r0, r3
 80028f2:	f005 fc0c 	bl	800810e <osThreadSuspend>
		        }
	        }
	        osDelay(50);
 80028f6:	2032      	movs	r0, #50	@ 0x32
 80028f8:	f005 fbf5 	bl	80080e6 <osDelay>
	      while(current_screen == 1) {
 80028fc:	4b08      	ldr	r3, [pc, #32]	@ (8002920 <LCD_Touch+0x3e4>)
 80028fe:	781b      	ldrb	r3, [r3, #0]
 8002900:	2b01      	cmp	r3, #1
 8002902:	f43f aedb 	beq.w	80026bc <LCD_Touch+0x180>
	      }
	    }
	    osDelay(100);
 8002906:	2064      	movs	r0, #100	@ 0x64
 8002908:	f005 fbed 	bl	80080e6 <osDelay>
	    if (current_screen == 1) {
 800290c:	e61a      	b.n	8002544 <LCD_Touch+0x8>
 800290e:	bf00      	nop
 8002910:	20000534 	.word	0x20000534
 8002914:	2000052c 	.word	0x2000052c
 8002918:	20000530 	.word	0x20000530
 800291c:	20000538 	.word	0x20000538
 8002920:	2000053c 	.word	0x2000053c

08002924 <LED>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_LED */
void LED(void const * argument)
{
 8002924:	b580      	push	{r7, lr}
 8002926:	b082      	sub	sp, #8
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN LED */
  /* Infinite loop */
  for(;;)
  {

	  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 800292c:	2101      	movs	r1, #1
 800292e:	4804      	ldr	r0, [pc, #16]	@ (8002940 <LED+0x1c>)
 8002930:	f002 fe01 	bl	8005536 <HAL_GPIO_TogglePin>
	  osDelay(400);
 8002934:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8002938:	f005 fbd5 	bl	80080e6 <osDelay>
	  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 800293c:	bf00      	nop
 800293e:	e7f5      	b.n	800292c <LED+0x8>
 8002940:	40020400 	.word	0x40020400

08002944 <CAN>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_CAN */
void CAN(void const * argument)
{
 8002944:	b580      	push	{r7, lr}
 8002946:	b092      	sub	sp, #72	@ 0x48
 8002948:	af02      	add	r7, sp, #8
 800294a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN CAN */
	  for(;;)
	  {

	    UpdateTemperature();
 800294c:	f7ff f87c 	bl	8001a48 <UpdateTemperature>

	    txdata[0] = 8;
 8002950:	4b20      	ldr	r3, [pc, #128]	@ (80029d4 <CAN+0x90>)
 8002952:	2208      	movs	r2, #8
 8002954:	701a      	strb	r2, [r3, #0]
	    txdata[1] = temperature_data[0];
 8002956:	4b20      	ldr	r3, [pc, #128]	@ (80029d8 <CAN+0x94>)
 8002958:	781a      	ldrb	r2, [r3, #0]
 800295a:	4b1e      	ldr	r3, [pc, #120]	@ (80029d4 <CAN+0x90>)
 800295c:	705a      	strb	r2, [r3, #1]
	    txdata[2] = temperature_data[1];
 800295e:	4b1e      	ldr	r3, [pc, #120]	@ (80029d8 <CAN+0x94>)
 8002960:	785a      	ldrb	r2, [r3, #1]
 8002962:	4b1c      	ldr	r3, [pc, #112]	@ (80029d4 <CAN+0x90>)
 8002964:	709a      	strb	r2, [r3, #2]
	    HAL_CAN_AddTxMessage(&hcan1, &txHeader, txdata, &txMailbox);
 8002966:	4b1d      	ldr	r3, [pc, #116]	@ (80029dc <CAN+0x98>)
 8002968:	4a1a      	ldr	r2, [pc, #104]	@ (80029d4 <CAN+0x90>)
 800296a:	491d      	ldr	r1, [pc, #116]	@ (80029e0 <CAN+0x9c>)
 800296c:	481d      	ldr	r0, [pc, #116]	@ (80029e4 <CAN+0xa0>)
 800296e:	f001 fdab 	bl	80044c8 <HAL_CAN_AddTxMessage>
	    HAL_CAN_RxFifo0MsgPendingCallback(&hcan2);
 8002972:	481d      	ldr	r0, [pc, #116]	@ (80029e8 <CAN+0xa4>)
 8002974:	f7ff f83e 	bl	80019f4 <HAL_CAN_RxFifo0MsgPendingCallback>
	    HAL_CAN_RxFifo0MsgPendingCallback(&hcan1);
 8002978:	481a      	ldr	r0, [pc, #104]	@ (80029e4 <CAN+0xa0>)
 800297a:	f7ff f83b 	bl	80019f4 <HAL_CAN_RxFifo0MsgPendingCallback>
	    char debug_str[50];
	    sprintf(debug_str, "[Nhom %d] + [%d.%d do C]    ",txdata[0], txdata[1], txdata[2]);
 800297e:	4b15      	ldr	r3, [pc, #84]	@ (80029d4 <CAN+0x90>)
 8002980:	781b      	ldrb	r3, [r3, #0]
 8002982:	461a      	mov	r2, r3
 8002984:	4b13      	ldr	r3, [pc, #76]	@ (80029d4 <CAN+0x90>)
 8002986:	785b      	ldrb	r3, [r3, #1]
 8002988:	4619      	mov	r1, r3
 800298a:	4b12      	ldr	r3, [pc, #72]	@ (80029d4 <CAN+0x90>)
 800298c:	789b      	ldrb	r3, [r3, #2]
 800298e:	f107 000c 	add.w	r0, r7, #12
 8002992:	9300      	str	r3, [sp, #0]
 8002994:	460b      	mov	r3, r1
 8002996:	4915      	ldr	r1, [pc, #84]	@ (80029ec <CAN+0xa8>)
 8002998:	f006 ff9e 	bl	80098d8 <siprintf>
	   // lcd_fill_rect(0, 250, 240, 40, BLACK);

	    lcd_display_string(10, 270, (uint8_t*)debug_str, FONT_1206, GREEN);
 800299c:	f107 020c 	add.w	r2, r7, #12
 80029a0:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80029a4:	9300      	str	r3, [sp, #0]
 80029a6:	230c      	movs	r3, #12
 80029a8:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 80029ac:	200a      	movs	r0, #10
 80029ae:	f7fe fd23 	bl	80013f8 <lcd_display_string>
	    osDelay(500);
 80029b2:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80029b6:	f005 fb96 	bl	80080e6 <osDelay>
	    lcd_display_string(10, 270, (uint8_t*)debug_str, FONT_1206, N);//xóa chữ
 80029ba:	f107 020c 	add.w	r2, r7, #12
 80029be:	230e      	movs	r3, #14
 80029c0:	9300      	str	r3, [sp, #0]
 80029c2:	230c      	movs	r3, #12
 80029c4:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 80029c8:	200a      	movs	r0, #10
 80029ca:	f7fe fd15 	bl	80013f8 <lcd_display_string>
	  {
 80029ce:	bf00      	nop
 80029d0:	e7bc      	b.n	800294c <CAN+0x8>
 80029d2:	bf00      	nop
 80029d4:	2000033c 	.word	0x2000033c
 80029d8:	200002d8 	.word	0x200002d8
 80029dc:	20000344 	.word	0x20000344
 80029e0:	20000308 	.word	0x20000308
 80029e4:	20000408 	.word	0x20000408
 80029e8:	20000430 	.word	0x20000430
 80029ec:	0800a454 	.word	0x0800a454

080029f0 <Button_FRAM>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Button_FRAM */
void Button_FRAM(void const * argument)
{
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b098      	sub	sp, #96	@ 0x60
 80029f4:	af02      	add	r7, sp, #8
 80029f6:	6078      	str	r0, [r7, #4]
	  uint8_t button_state;
	  uint8_t last_button_state = GPIO_PIN_SET;
 80029f8:	2301      	movs	r3, #1
 80029fa:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
	  last_button_state = HAL_GPIO_ReadPin(btn_GPIO_Port, btn_Pin);
 80029fe:	2102      	movs	r1, #2
 8002a00:	4866      	ldr	r0, [pc, #408]	@ (8002b9c <Button_FRAM+0x1ac>)
 8002a02:	f002 fd67 	bl	80054d4 <HAL_GPIO_ReadPin>
 8002a06:	4603      	mov	r3, r0
 8002a08:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
	  uint8_t log_data[LOG_DATA_SIZE];
	  char lcd_msg[60];
	  for(;;)
	  {

	    button_state = HAL_GPIO_ReadPin(btn_GPIO_Port, btn_Pin);
 8002a0c:	2102      	movs	r1, #2
 8002a0e:	4863      	ldr	r0, [pc, #396]	@ (8002b9c <Button_FRAM+0x1ac>)
 8002a10:	f002 fd60 	bl	80054d4 <HAL_GPIO_ReadPin>
 8002a14:	4603      	mov	r3, r0
 8002a16:	f887 3056 	strb.w	r3, [r7, #86]	@ 0x56
	    if (last_button_state == GPIO_PIN_SET && button_state == GPIO_PIN_RESET) {
 8002a1a:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 8002a1e:	2b01      	cmp	r3, #1
 8002a20:	f040 80a2 	bne.w	8002b68 <Button_FRAM+0x178>
 8002a24:	f897 3056 	ldrb.w	r3, [r7, #86]	@ 0x56
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	f040 809d 	bne.w	8002b68 <Button_FRAM+0x178>
	    	// lcd_fill_rect(0, 220, 240, 40, BLUE);
	    	lcd_display_string(10, 220, (uint8_t*)"Button Pressed!", FONT_1206, WHITE);
 8002a2e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002a32:	9300      	str	r3, [sp, #0]
 8002a34:	230c      	movs	r3, #12
 8002a36:	4a5a      	ldr	r2, [pc, #360]	@ (8002ba0 <Button_FRAM+0x1b0>)
 8002a38:	21dc      	movs	r1, #220	@ 0xdc
 8002a3a:	200a      	movs	r0, #10
 8002a3c:	f7fe fcdc 	bl	80013f8 <lcd_display_string>
	    	AdcConvCmplt = 0;
 8002a40:	4b58      	ldr	r3, [pc, #352]	@ (8002ba4 <Button_FRAM+0x1b4>)
 8002a42:	2200      	movs	r2, #0
 8002a44:	701a      	strb	r2, [r3, #0]
	    	HAL_ADC_Start_DMA(&hadc1, (uint32_t*)AdcRaw, 2);
 8002a46:	2202      	movs	r2, #2
 8002a48:	4957      	ldr	r1, [pc, #348]	@ (8002ba8 <Button_FRAM+0x1b8>)
 8002a4a:	4858      	ldr	r0, [pc, #352]	@ (8002bac <Button_FRAM+0x1bc>)
 8002a4c:	f000 ff56 	bl	80038fc <HAL_ADC_Start_DMA>
	    	uint32_t timeout_adc = HAL_GetTick() + 50;
 8002a50:	f000 ff04 	bl	800385c <HAL_GetTick>
 8002a54:	4603      	mov	r3, r0
 8002a56:	3332      	adds	r3, #50	@ 0x32
 8002a58:	653b      	str	r3, [r7, #80]	@ 0x50
	    	while(!AdcConvCmplt && HAL_GetTick() < timeout_adc){
 8002a5a:	e002      	b.n	8002a62 <Button_FRAM+0x72>
	    	  osDelay(1);
 8002a5c:	2001      	movs	r0, #1
 8002a5e:	f005 fb42 	bl	80080e6 <osDelay>
	    	while(!AdcConvCmplt && HAL_GetTick() < timeout_adc){
 8002a62:	4b50      	ldr	r3, [pc, #320]	@ (8002ba4 <Button_FRAM+0x1b4>)
 8002a64:	781b      	ldrb	r3, [r3, #0]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d105      	bne.n	8002a76 <Button_FRAM+0x86>
 8002a6a:	f000 fef7 	bl	800385c <HAL_GetTick>
 8002a6e:	4602      	mov	r2, r0
 8002a70:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002a72:	4293      	cmp	r3, r2
 8002a74:	d8f2      	bhi.n	8002a5c <Button_FRAM+0x6c>
	      }
	    	if(AdcConvCmplt){
 8002a76:	4b4b      	ldr	r3, [pc, #300]	@ (8002ba4 <Button_FRAM+0x1b4>)
 8002a78:	781b      	ldrb	r3, [r3, #0]
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d002      	beq.n	8002a84 <Button_FRAM+0x94>
	    	  UpdateTemperature();
 8002a7e:	f7fe ffe3 	bl	8001a48 <UpdateTemperature>
 8002a82:	e00e      	b.n	8002aa2 <Button_FRAM+0xb2>
	      } else {
	    	  temperature_data[0] = 0xFF;
 8002a84:	4b4a      	ldr	r3, [pc, #296]	@ (8002bb0 <Button_FRAM+0x1c0>)
 8002a86:	22ff      	movs	r2, #255	@ 0xff
 8002a88:	701a      	strb	r2, [r3, #0]
          temperature_data[1] = 0xFF;
 8002a8a:	4b49      	ldr	r3, [pc, #292]	@ (8002bb0 <Button_FRAM+0x1c0>)
 8002a8c:	22ff      	movs	r2, #255	@ 0xff
 8002a8e:	705a      	strb	r2, [r3, #1]
	    	  lcd_display_string(10, 240, (uint8_t*)"ADC Timeout!", FONT_1206, RED);
 8002a90:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002a94:	9300      	str	r3, [sp, #0]
 8002a96:	230c      	movs	r3, #12
 8002a98:	4a46      	ldr	r2, [pc, #280]	@ (8002bb4 <Button_FRAM+0x1c4>)
 8002a9a:	21f0      	movs	r1, #240	@ 0xf0
 8002a9c:	200a      	movs	r0, #10
 8002a9e:	f7fe fcab 	bl	80013f8 <lcd_display_string>
	      }
	    	        HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 8002aa2:	2200      	movs	r2, #0
 8002aa4:	4944      	ldr	r1, [pc, #272]	@ (8002bb8 <Button_FRAM+0x1c8>)
 8002aa6:	4845      	ldr	r0, [pc, #276]	@ (8002bbc <Button_FRAM+0x1cc>)
 8002aa8:	f004 f9c3 	bl	8006e32 <HAL_RTC_GetTime>
	    	        HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 8002aac:	2200      	movs	r2, #0
 8002aae:	4944      	ldr	r1, [pc, #272]	@ (8002bc0 <Button_FRAM+0x1d0>)
 8002ab0:	4842      	ldr	r0, [pc, #264]	@ (8002bbc <Button_FRAM+0x1cc>)
 8002ab2:	f004 faa0 	bl	8006ff6 <HAL_RTC_GetDate>
	    	        log_data[0] = temperature_data[0];
 8002ab6:	4b3e      	ldr	r3, [pc, #248]	@ (8002bb0 <Button_FRAM+0x1c0>)
 8002ab8:	781b      	ldrb	r3, [r3, #0]
 8002aba:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
	    	        log_data[1] = temperature_data[1];
 8002abe:	4b3c      	ldr	r3, [pc, #240]	@ (8002bb0 <Button_FRAM+0x1c0>)
 8002ac0:	785b      	ldrb	r3, [r3, #1]
 8002ac2:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
	    	        log_data[2] = sTime.Hours;
 8002ac6:	4b3c      	ldr	r3, [pc, #240]	@ (8002bb8 <Button_FRAM+0x1c8>)
 8002ac8:	781b      	ldrb	r3, [r3, #0]
 8002aca:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
	    	        log_data[3] = sTime.Minutes;
 8002ace:	4b3a      	ldr	r3, [pc, #232]	@ (8002bb8 <Button_FRAM+0x1c8>)
 8002ad0:	785b      	ldrb	r3, [r3, #1]
 8002ad2:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
	    	        log_data[4] = sTime.Seconds;
 8002ad6:	4b38      	ldr	r3, [pc, #224]	@ (8002bb8 <Button_FRAM+0x1c8>)
 8002ad8:	789b      	ldrb	r3, [r3, #2]
 8002ada:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
	    	        log_data[5] = sDate.Date;
 8002ade:	4b38      	ldr	r3, [pc, #224]	@ (8002bc0 <Button_FRAM+0x1d0>)
 8002ae0:	789b      	ldrb	r3, [r3, #2]
 8002ae2:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
	    	        log_data[6] = sDate.Month;
 8002ae6:	4b36      	ldr	r3, [pc, #216]	@ (8002bc0 <Button_FRAM+0x1d0>)
 8002ae8:	785b      	ldrb	r3, [r3, #1]
 8002aea:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
	    	        log_data[7] = (uint8_t)sDate.Year;
 8002aee:	4b34      	ldr	r3, [pc, #208]	@ (8002bc0 <Button_FRAM+0x1d0>)
 8002af0:	78db      	ldrb	r3, [r3, #3]
 8002af2:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
	    	        if (FRAM_WriteBytes(&hi2c2, fram_log_address, log_data, LOG_DATA_SIZE) == HAL_OK) {
 8002af6:	4b33      	ldr	r3, [pc, #204]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002af8:	8819      	ldrh	r1, [r3, #0]
 8002afa:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 8002afe:	2308      	movs	r3, #8
 8002b00:	4831      	ldr	r0, [pc, #196]	@ (8002bc8 <Button_FRAM+0x1d8>)
 8002b02:	f7fe fe99 	bl	8001838 <FRAM_WriteBytes>
 8002b06:	4603      	mov	r3, r0
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	d121      	bne.n	8002b50 <Button_FRAM+0x160>
	    	            sprintf(lcd_msg, "Da ghi vao FRAM @0x%04X", fram_log_address);
 8002b0c:	4b2d      	ldr	r3, [pc, #180]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002b0e:	881b      	ldrh	r3, [r3, #0]
 8002b10:	461a      	mov	r2, r3
 8002b12:	f107 030c 	add.w	r3, r7, #12
 8002b16:	492d      	ldr	r1, [pc, #180]	@ (8002bcc <Button_FRAM+0x1dc>)
 8002b18:	4618      	mov	r0, r3
 8002b1a:	f006 fedd 	bl	80098d8 <siprintf>
	    	            lcd_display_string(10, 240, (uint8_t*)lcd_msg, FONT_1206, GREEN);
 8002b1e:	f107 020c 	add.w	r2, r7, #12
 8002b22:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8002b26:	9300      	str	r3, [sp, #0]
 8002b28:	230c      	movs	r3, #12
 8002b2a:	21f0      	movs	r1, #240	@ 0xf0
 8002b2c:	200a      	movs	r0, #10
 8002b2e:	f7fe fc63 	bl	80013f8 <lcd_display_string>
	    	            fram_log_address += LOG_DATA_SIZE;
 8002b32:	4b24      	ldr	r3, [pc, #144]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002b34:	881b      	ldrh	r3, [r3, #0]
 8002b36:	3308      	adds	r3, #8
 8002b38:	b29a      	uxth	r2, r3
 8002b3a:	4b22      	ldr	r3, [pc, #136]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002b3c:	801a      	strh	r2, [r3, #0]
	    	            if (fram_log_address > (FRAM_MAX_MEMORY_ADDRESS - LOG_DATA_SIZE + 1) ) {
 8002b3e:	4b21      	ldr	r3, [pc, #132]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002b40:	881b      	ldrh	r3, [r3, #0]
 8002b42:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
 8002b46:	d90c      	bls.n	8002b62 <Button_FRAM+0x172>
	    	                fram_log_address = 0;
 8002b48:	4b1e      	ldr	r3, [pc, #120]	@ (8002bc4 <Button_FRAM+0x1d4>)
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	801a      	strh	r2, [r3, #0]
 8002b4e:	e008      	b.n	8002b62 <Button_FRAM+0x172>
	    	            }
	    	        } else {
	    	            lcd_display_string(10, 240, (uint8_t*)"Failed!", FONT_1206, RED);
 8002b50:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002b54:	9300      	str	r3, [sp, #0]
 8002b56:	230c      	movs	r3, #12
 8002b58:	4a1d      	ldr	r2, [pc, #116]	@ (8002bd0 <Button_FRAM+0x1e0>)
 8002b5a:	21f0      	movs	r1, #240	@ 0xf0
 8002b5c:	200a      	movs	r0, #10
 8002b5e:	f7fe fc4b 	bl	80013f8 <lcd_display_string>
	    	        }
	    	        osDelay(200);
 8002b62:	20c8      	movs	r0, #200	@ 0xc8
 8002b64:	f005 fabf 	bl	80080e6 <osDelay>
	    	    }
	    	    last_button_state = button_state;
 8002b68:	f897 3056 	ldrb.w	r3, [r7, #86]	@ 0x56
 8002b6c:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57

	    	    osDelay(100);
 8002b70:	2064      	movs	r0, #100	@ 0x64
 8002b72:	f005 fab8 	bl	80080e6 <osDelay>
	    	    lcd_display_string(10, 240, (uint8_t*)lcd_msg, FONT_1206, N);//xóa chữ
 8002b76:	f107 020c 	add.w	r2, r7, #12
 8002b7a:	230e      	movs	r3, #14
 8002b7c:	9300      	str	r3, [sp, #0]
 8002b7e:	230c      	movs	r3, #12
 8002b80:	21f0      	movs	r1, #240	@ 0xf0
 8002b82:	200a      	movs	r0, #10
 8002b84:	f7fe fc38 	bl	80013f8 <lcd_display_string>
	    	    lcd_display_string(10, 220, (uint8_t*)"Button Pressed!", FONT_1206, N);//xóa chữ
 8002b88:	230e      	movs	r3, #14
 8002b8a:	9300      	str	r3, [sp, #0]
 8002b8c:	230c      	movs	r3, #12
 8002b8e:	4a04      	ldr	r2, [pc, #16]	@ (8002ba0 <Button_FRAM+0x1b0>)
 8002b90:	21dc      	movs	r1, #220	@ 0xdc
 8002b92:	200a      	movs	r0, #10
 8002b94:	f7fe fc30 	bl	80013f8 <lcd_display_string>
	    button_state = HAL_GPIO_ReadPin(btn_GPIO_Port, btn_Pin);
 8002b98:	e738      	b.n	8002a0c <Button_FRAM+0x1c>
 8002b9a:	bf00      	nop
 8002b9c:	40020000 	.word	0x40020000
 8002ba0:	0800a474 	.word	0x0800a474
 8002ba4:	200002e8 	.word	0x200002e8
 8002ba8:	200002e4 	.word	0x200002e4
 8002bac:	20000360 	.word	0x20000360
 8002bb0:	200002d8 	.word	0x200002d8
 8002bb4:	0800a484 	.word	0x0800a484
 8002bb8:	20000348 	.word	0x20000348
 8002bbc:	200004ac 	.word	0x200004ac
 8002bc0:	2000035c 	.word	0x2000035c
 8002bc4:	2000053e 	.word	0x2000053e
 8002bc8:	20000458 	.word	0x20000458
 8002bcc:	0800a494 	.word	0x0800a494
 8002bd0:	0800a4ac 	.word	0x0800a4ac

08002bd4 <Display_CAN>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Display_CAN */
void Display_CAN(void const * argument)
{
 8002bd4:	b580      	push	{r7, lr}
 8002bd6:	b092      	sub	sp, #72	@ 0x48
 8002bd8:	af02      	add	r7, sp, #8
 8002bda:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Display_CAN */
	for(;;) {
	    char display_str[50];
	    sprintf(display_str, "[Nhom %d] + [%d.%d do C]",RxData[0], RxData[1], RxData[2]);
 8002bdc:	4b15      	ldr	r3, [pc, #84]	@ (8002c34 <Display_CAN+0x60>)
 8002bde:	781b      	ldrb	r3, [r3, #0]
 8002be0:	461a      	mov	r2, r3
 8002be2:	4b14      	ldr	r3, [pc, #80]	@ (8002c34 <Display_CAN+0x60>)
 8002be4:	785b      	ldrb	r3, [r3, #1]
 8002be6:	4619      	mov	r1, r3
 8002be8:	4b12      	ldr	r3, [pc, #72]	@ (8002c34 <Display_CAN+0x60>)
 8002bea:	789b      	ldrb	r3, [r3, #2]
 8002bec:	f107 000c 	add.w	r0, r7, #12
 8002bf0:	9300      	str	r3, [sp, #0]
 8002bf2:	460b      	mov	r3, r1
 8002bf4:	4910      	ldr	r1, [pc, #64]	@ (8002c38 <Display_CAN+0x64>)
 8002bf6:	f006 fe6f 	bl	80098d8 <siprintf>
	    lcd_display_string(10, 300, (uint8_t*)display_str, FONT_1206, GREEN);
 8002bfa:	f107 020c 	add.w	r2, r7, #12
 8002bfe:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	230c      	movs	r3, #12
 8002c06:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 8002c0a:	200a      	movs	r0, #10
 8002c0c:	f7fe fbf4 	bl	80013f8 <lcd_display_string>
	    osDelay(3000);
 8002c10:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8002c14:	f005 fa67 	bl	80080e6 <osDelay>
	    current_screen = 0;
 8002c18:	4b08      	ldr	r3, [pc, #32]	@ (8002c3c <Display_CAN+0x68>)
 8002c1a:	2200      	movs	r2, #0
 8002c1c:	701a      	strb	r2, [r3, #0]
	    need_redraw_main = 1;
 8002c1e:	4b08      	ldr	r3, [pc, #32]	@ (8002c40 <Display_CAN+0x6c>)
 8002c20:	2201      	movs	r2, #1
 8002c22:	701a      	strb	r2, [r3, #0]
	    osThreadSuspend(Display_CAN_DatHandle);
 8002c24:	4b07      	ldr	r3, [pc, #28]	@ (8002c44 <Display_CAN+0x70>)
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	4618      	mov	r0, r3
 8002c2a:	f005 fa70 	bl	800810e <osThreadSuspend>
	for(;;) {
 8002c2e:	bf00      	nop
 8002c30:	e7d4      	b.n	8002bdc <Display_CAN+0x8>
 8002c32:	bf00      	nop
 8002c34:	200002e0 	.word	0x200002e0
 8002c38:	0800a4b4 	.word	0x0800a4b4
 8002c3c:	2000053c 	.word	0x2000053c
 8002c40:	20000000 	.word	0x20000000
 8002c44:	20000538 	.word	0x20000538

08002c48 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002c48:	b580      	push	{r7, lr}
 8002c4a:	b082      	sub	sp, #8
 8002c4c:	af00      	add	r7, sp, #0
 8002c4e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1)
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	4a04      	ldr	r2, [pc, #16]	@ (8002c68 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002c56:	4293      	cmp	r3, r2
 8002c58:	d101      	bne.n	8002c5e <HAL_TIM_PeriodElapsedCallback+0x16>
  {
    HAL_IncTick();
 8002c5a:	f000 fdeb 	bl	8003834 <HAL_IncTick>
  //day la commet cac muc duoc them vao 10h
  //sưa doi trong user code begin pv giúp task 2 đóng khi task1 mở lúc mới nạp code
  //  hcan1.Init.AutoRetransmission = ENABLE;
  //
  /* USER CODE END Callback 1 */
}
 8002c5e:	bf00      	nop
 8002c60:	3708      	adds	r7, #8
 8002c62:	46bd      	mov	sp, r7
 8002c64:	bd80      	pop	{r7, pc}
 8002c66:	bf00      	nop
 8002c68:	40010000 	.word	0x40010000

08002c6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002c6c:	b480      	push	{r7}
 8002c6e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002c70:	b672      	cpsid	i
}
 8002c72:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002c74:	bf00      	nop
 8002c76:	e7fd      	b.n	8002c74 <Error_Handler+0x8>

08002c78 <HAL_MspInit>:
 8002c78:	b580      	push	{r7, lr}
 8002c7a:	b082      	sub	sp, #8
 8002c7c:	af00      	add	r7, sp, #0
 8002c7e:	2300      	movs	r3, #0
 8002c80:	607b      	str	r3, [r7, #4]
 8002c82:	4b12      	ldr	r3, [pc, #72]	@ (8002ccc <HAL_MspInit+0x54>)
 8002c84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c86:	4a11      	ldr	r2, [pc, #68]	@ (8002ccc <HAL_MspInit+0x54>)
 8002c88:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002c8c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002c8e:	4b0f      	ldr	r3, [pc, #60]	@ (8002ccc <HAL_MspInit+0x54>)
 8002c90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002c92:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002c96:	607b      	str	r3, [r7, #4]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2300      	movs	r3, #0
 8002c9c:	603b      	str	r3, [r7, #0]
 8002c9e:	4b0b      	ldr	r3, [pc, #44]	@ (8002ccc <HAL_MspInit+0x54>)
 8002ca0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca2:	4a0a      	ldr	r2, [pc, #40]	@ (8002ccc <HAL_MspInit+0x54>)
 8002ca4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ca8:	6413      	str	r3, [r2, #64]	@ 0x40
 8002caa:	4b08      	ldr	r3, [pc, #32]	@ (8002ccc <HAL_MspInit+0x54>)
 8002cac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002cb2:	603b      	str	r3, [r7, #0]
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	2200      	movs	r2, #0
 8002cb8:	210f      	movs	r1, #15
 8002cba:	f06f 0001 	mvn.w	r0, #1
 8002cbe:	f001 fed3 	bl	8004a68 <HAL_NVIC_SetPriority>
 8002cc2:	bf00      	nop
 8002cc4:	3708      	adds	r7, #8
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bd80      	pop	{r7, pc}
 8002cca:	bf00      	nop
 8002ccc:	40023800 	.word	0x40023800

08002cd0 <HAL_ADC_MspInit>:
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b084      	sub	sp, #16
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	6078      	str	r0, [r7, #4]
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	4a21      	ldr	r2, [pc, #132]	@ (8002d64 <HAL_ADC_MspInit+0x94>)
 8002cde:	4293      	cmp	r3, r2
 8002ce0:	d13c      	bne.n	8002d5c <HAL_ADC_MspInit+0x8c>
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	60fb      	str	r3, [r7, #12]
 8002ce6:	4b20      	ldr	r3, [pc, #128]	@ (8002d68 <HAL_ADC_MspInit+0x98>)
 8002ce8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cea:	4a1f      	ldr	r2, [pc, #124]	@ (8002d68 <HAL_ADC_MspInit+0x98>)
 8002cec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002cf0:	6453      	str	r3, [r2, #68]	@ 0x44
 8002cf2:	4b1d      	ldr	r3, [pc, #116]	@ (8002d68 <HAL_ADC_MspInit+0x98>)
 8002cf4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cf6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cfa:	60fb      	str	r3, [r7, #12]
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	4b1b      	ldr	r3, [pc, #108]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d00:	4a1b      	ldr	r2, [pc, #108]	@ (8002d70 <HAL_ADC_MspInit+0xa0>)
 8002d02:	601a      	str	r2, [r3, #0]
 8002d04:	4b19      	ldr	r3, [pc, #100]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d06:	2200      	movs	r2, #0
 8002d08:	605a      	str	r2, [r3, #4]
 8002d0a:	4b18      	ldr	r3, [pc, #96]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d0c:	2200      	movs	r2, #0
 8002d0e:	609a      	str	r2, [r3, #8]
 8002d10:	4b16      	ldr	r3, [pc, #88]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d12:	2200      	movs	r2, #0
 8002d14:	60da      	str	r2, [r3, #12]
 8002d16:	4b15      	ldr	r3, [pc, #84]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d18:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8002d1c:	611a      	str	r2, [r3, #16]
 8002d1e:	4b13      	ldr	r3, [pc, #76]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d20:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8002d24:	615a      	str	r2, [r3, #20]
 8002d26:	4b11      	ldr	r3, [pc, #68]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d28:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002d2c:	619a      	str	r2, [r3, #24]
 8002d2e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d30:	2200      	movs	r2, #0
 8002d32:	61da      	str	r2, [r3, #28]
 8002d34:	4b0d      	ldr	r3, [pc, #52]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d36:	2200      	movs	r2, #0
 8002d38:	621a      	str	r2, [r3, #32]
 8002d3a:	4b0c      	ldr	r3, [pc, #48]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d40:	480a      	ldr	r0, [pc, #40]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d42:	f001 febb 	bl	8004abc <HAL_DMA_Init>
 8002d46:	4603      	mov	r3, r0
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d001      	beq.n	8002d50 <HAL_ADC_MspInit+0x80>
 8002d4c:	f7ff ff8e 	bl	8002c6c <Error_Handler>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	4a06      	ldr	r2, [pc, #24]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d54:	639a      	str	r2, [r3, #56]	@ 0x38
 8002d56:	4a05      	ldr	r2, [pc, #20]	@ (8002d6c <HAL_ADC_MspInit+0x9c>)
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	6393      	str	r3, [r2, #56]	@ 0x38
 8002d5c:	bf00      	nop
 8002d5e:	3710      	adds	r7, #16
 8002d60:	46bd      	mov	sp, r7
 8002d62:	bd80      	pop	{r7, pc}
 8002d64:	40012000 	.word	0x40012000
 8002d68:	40023800 	.word	0x40023800
 8002d6c:	200003a8 	.word	0x200003a8
 8002d70:	40026410 	.word	0x40026410

08002d74 <HAL_CAN_MspInit>:
 8002d74:	b580      	push	{r7, lr}
 8002d76:	b08c      	sub	sp, #48	@ 0x30
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	6078      	str	r0, [r7, #4]
 8002d7c:	f107 031c 	add.w	r3, r7, #28
 8002d80:	2200      	movs	r2, #0
 8002d82:	601a      	str	r2, [r3, #0]
 8002d84:	605a      	str	r2, [r3, #4]
 8002d86:	609a      	str	r2, [r3, #8]
 8002d88:	60da      	str	r2, [r3, #12]
 8002d8a:	611a      	str	r2, [r3, #16]
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	4a42      	ldr	r2, [pc, #264]	@ (8002e9c <HAL_CAN_MspInit+0x128>)
 8002d92:	4293      	cmp	r3, r2
 8002d94:	d136      	bne.n	8002e04 <HAL_CAN_MspInit+0x90>
 8002d96:	4b42      	ldr	r3, [pc, #264]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	3301      	adds	r3, #1
 8002d9c:	4a40      	ldr	r2, [pc, #256]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002d9e:	6013      	str	r3, [r2, #0]
 8002da0:	4b3f      	ldr	r3, [pc, #252]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	d10d      	bne.n	8002dc4 <HAL_CAN_MspInit+0x50>
 8002da8:	2300      	movs	r3, #0
 8002daa:	61bb      	str	r3, [r7, #24]
 8002dac:	4b3d      	ldr	r3, [pc, #244]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002dae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002db0:	4a3c      	ldr	r2, [pc, #240]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002db2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002db6:	6413      	str	r3, [r2, #64]	@ 0x40
 8002db8:	4b3a      	ldr	r3, [pc, #232]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002dba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dbc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002dc0:	61bb      	str	r3, [r7, #24]
 8002dc2:	69bb      	ldr	r3, [r7, #24]
 8002dc4:	2300      	movs	r3, #0
 8002dc6:	617b      	str	r3, [r7, #20]
 8002dc8:	4b36      	ldr	r3, [pc, #216]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002dca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dcc:	4a35      	ldr	r2, [pc, #212]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002dce:	f043 0301 	orr.w	r3, r3, #1
 8002dd2:	6313      	str	r3, [r2, #48]	@ 0x30
 8002dd4:	4b33      	ldr	r3, [pc, #204]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002dd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dd8:	f003 0301 	and.w	r3, r3, #1
 8002ddc:	617b      	str	r3, [r7, #20]
 8002dde:	697b      	ldr	r3, [r7, #20]
 8002de0:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8002de4:	61fb      	str	r3, [r7, #28]
 8002de6:	2302      	movs	r3, #2
 8002de8:	623b      	str	r3, [r7, #32]
 8002dea:	2300      	movs	r3, #0
 8002dec:	627b      	str	r3, [r7, #36]	@ 0x24
 8002dee:	2303      	movs	r3, #3
 8002df0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002df2:	2309      	movs	r3, #9
 8002df4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002df6:	f107 031c 	add.w	r3, r7, #28
 8002dfa:	4619      	mov	r1, r3
 8002dfc:	482a      	ldr	r0, [pc, #168]	@ (8002ea8 <HAL_CAN_MspInit+0x134>)
 8002dfe:	f002 f9cd 	bl	800519c <HAL_GPIO_Init>
 8002e02:	e047      	b.n	8002e94 <HAL_CAN_MspInit+0x120>
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	4a28      	ldr	r2, [pc, #160]	@ (8002eac <HAL_CAN_MspInit+0x138>)
 8002e0a:	4293      	cmp	r3, r2
 8002e0c:	d142      	bne.n	8002e94 <HAL_CAN_MspInit+0x120>
 8002e0e:	2300      	movs	r3, #0
 8002e10:	613b      	str	r3, [r7, #16]
 8002e12:	4b24      	ldr	r3, [pc, #144]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e16:	4a23      	ldr	r2, [pc, #140]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e18:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002e1c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e1e:	4b21      	ldr	r3, [pc, #132]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e22:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002e26:	613b      	str	r3, [r7, #16]
 8002e28:	693b      	ldr	r3, [r7, #16]
 8002e2a:	4b1d      	ldr	r3, [pc, #116]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	3301      	adds	r3, #1
 8002e30:	4a1b      	ldr	r2, [pc, #108]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002e32:	6013      	str	r3, [r2, #0]
 8002e34:	4b1a      	ldr	r3, [pc, #104]	@ (8002ea0 <HAL_CAN_MspInit+0x12c>)
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	2b01      	cmp	r3, #1
 8002e3a:	d10d      	bne.n	8002e58 <HAL_CAN_MspInit+0xe4>
 8002e3c:	2300      	movs	r3, #0
 8002e3e:	60fb      	str	r3, [r7, #12]
 8002e40:	4b18      	ldr	r3, [pc, #96]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e44:	4a17      	ldr	r2, [pc, #92]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e46:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002e4a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e4c:	4b15      	ldr	r3, [pc, #84]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e50:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e54:	60fb      	str	r3, [r7, #12]
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	2300      	movs	r3, #0
 8002e5a:	60bb      	str	r3, [r7, #8]
 8002e5c:	4b11      	ldr	r3, [pc, #68]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e60:	4a10      	ldr	r2, [pc, #64]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e62:	f043 0302 	orr.w	r3, r3, #2
 8002e66:	6313      	str	r3, [r2, #48]	@ 0x30
 8002e68:	4b0e      	ldr	r3, [pc, #56]	@ (8002ea4 <HAL_CAN_MspInit+0x130>)
 8002e6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e6c:	f003 0302 	and.w	r3, r3, #2
 8002e70:	60bb      	str	r3, [r7, #8]
 8002e72:	68bb      	ldr	r3, [r7, #8]
 8002e74:	2360      	movs	r3, #96	@ 0x60
 8002e76:	61fb      	str	r3, [r7, #28]
 8002e78:	2302      	movs	r3, #2
 8002e7a:	623b      	str	r3, [r7, #32]
 8002e7c:	2300      	movs	r3, #0
 8002e7e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e80:	2303      	movs	r3, #3
 8002e82:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002e84:	2309      	movs	r3, #9
 8002e86:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002e88:	f107 031c 	add.w	r3, r7, #28
 8002e8c:	4619      	mov	r1, r3
 8002e8e:	4808      	ldr	r0, [pc, #32]	@ (8002eb0 <HAL_CAN_MspInit+0x13c>)
 8002e90:	f002 f984 	bl	800519c <HAL_GPIO_Init>
 8002e94:	bf00      	nop
 8002e96:	3730      	adds	r7, #48	@ 0x30
 8002e98:	46bd      	mov	sp, r7
 8002e9a:	bd80      	pop	{r7, pc}
 8002e9c:	40006400 	.word	0x40006400
 8002ea0:	20000544 	.word	0x20000544
 8002ea4:	40023800 	.word	0x40023800
 8002ea8:	40020000 	.word	0x40020000
 8002eac:	40006800 	.word	0x40006800
 8002eb0:	40020400 	.word	0x40020400

08002eb4 <HAL_I2C_MspInit>:
 8002eb4:	b580      	push	{r7, lr}
 8002eb6:	b08a      	sub	sp, #40	@ 0x28
 8002eb8:	af00      	add	r7, sp, #0
 8002eba:	6078      	str	r0, [r7, #4]
 8002ebc:	f107 0314 	add.w	r3, r7, #20
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	601a      	str	r2, [r3, #0]
 8002ec4:	605a      	str	r2, [r3, #4]
 8002ec6:	609a      	str	r2, [r3, #8]
 8002ec8:	60da      	str	r2, [r3, #12]
 8002eca:	611a      	str	r2, [r3, #16]
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	4a19      	ldr	r2, [pc, #100]	@ (8002f38 <HAL_I2C_MspInit+0x84>)
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d12c      	bne.n	8002f30 <HAL_I2C_MspInit+0x7c>
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	613b      	str	r3, [r7, #16]
 8002eda:	4b18      	ldr	r3, [pc, #96]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002edc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ede:	4a17      	ldr	r2, [pc, #92]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002ee0:	f043 0302 	orr.w	r3, r3, #2
 8002ee4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ee6:	4b15      	ldr	r3, [pc, #84]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002ee8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002eea:	f003 0302 	and.w	r3, r3, #2
 8002eee:	613b      	str	r3, [r7, #16]
 8002ef0:	693b      	ldr	r3, [r7, #16]
 8002ef2:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8002ef6:	617b      	str	r3, [r7, #20]
 8002ef8:	2312      	movs	r3, #18
 8002efa:	61bb      	str	r3, [r7, #24]
 8002efc:	2300      	movs	r3, #0
 8002efe:	61fb      	str	r3, [r7, #28]
 8002f00:	2303      	movs	r3, #3
 8002f02:	623b      	str	r3, [r7, #32]
 8002f04:	2304      	movs	r3, #4
 8002f06:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f08:	f107 0314 	add.w	r3, r7, #20
 8002f0c:	4619      	mov	r1, r3
 8002f0e:	480c      	ldr	r0, [pc, #48]	@ (8002f40 <HAL_I2C_MspInit+0x8c>)
 8002f10:	f002 f944 	bl	800519c <HAL_GPIO_Init>
 8002f14:	2300      	movs	r3, #0
 8002f16:	60fb      	str	r3, [r7, #12]
 8002f18:	4b08      	ldr	r3, [pc, #32]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002f1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f1c:	4a07      	ldr	r2, [pc, #28]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002f1e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8002f22:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f24:	4b05      	ldr	r3, [pc, #20]	@ (8002f3c <HAL_I2C_MspInit+0x88>)
 8002f26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f28:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002f2c:	60fb      	str	r3, [r7, #12]
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	bf00      	nop
 8002f32:	3728      	adds	r7, #40	@ 0x28
 8002f34:	46bd      	mov	sp, r7
 8002f36:	bd80      	pop	{r7, pc}
 8002f38:	40005800 	.word	0x40005800
 8002f3c:	40023800 	.word	0x40023800
 8002f40:	40020400 	.word	0x40020400

08002f44 <HAL_RTC_MspInit>:
 8002f44:	b580      	push	{r7, lr}
 8002f46:	b086      	sub	sp, #24
 8002f48:	af00      	add	r7, sp, #0
 8002f4a:	6078      	str	r0, [r7, #4]
 8002f4c:	f107 0308 	add.w	r3, r7, #8
 8002f50:	2200      	movs	r2, #0
 8002f52:	601a      	str	r2, [r3, #0]
 8002f54:	605a      	str	r2, [r3, #4]
 8002f56:	609a      	str	r2, [r3, #8]
 8002f58:	60da      	str	r2, [r3, #12]
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4a0c      	ldr	r2, [pc, #48]	@ (8002f90 <HAL_RTC_MspInit+0x4c>)
 8002f60:	4293      	cmp	r3, r2
 8002f62:	d111      	bne.n	8002f88 <HAL_RTC_MspInit+0x44>
 8002f64:	2302      	movs	r3, #2
 8002f66:	60bb      	str	r3, [r7, #8]
 8002f68:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002f6c:	617b      	str	r3, [r7, #20]
 8002f6e:	f107 0308 	add.w	r3, r7, #8
 8002f72:	4618      	mov	r0, r3
 8002f74:	f003 fd60 	bl	8006a38 <HAL_RCCEx_PeriphCLKConfig>
 8002f78:	4603      	mov	r3, r0
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d001      	beq.n	8002f82 <HAL_RTC_MspInit+0x3e>
 8002f7e:	f7ff fe75 	bl	8002c6c <Error_Handler>
 8002f82:	4b04      	ldr	r3, [pc, #16]	@ (8002f94 <HAL_RTC_MspInit+0x50>)
 8002f84:	2201      	movs	r2, #1
 8002f86:	601a      	str	r2, [r3, #0]
 8002f88:	bf00      	nop
 8002f8a:	3718      	adds	r7, #24
 8002f8c:	46bd      	mov	sp, r7
 8002f8e:	bd80      	pop	{r7, pc}
 8002f90:	40002800 	.word	0x40002800
 8002f94:	42470e3c 	.word	0x42470e3c

08002f98 <HAL_SPI_MspInit>:
 8002f98:	b580      	push	{r7, lr}
 8002f9a:	b08a      	sub	sp, #40	@ 0x28
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	6078      	str	r0, [r7, #4]
 8002fa0:	f107 0314 	add.w	r3, r7, #20
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	605a      	str	r2, [r3, #4]
 8002faa:	609a      	str	r2, [r3, #8]
 8002fac:	60da      	str	r2, [r3, #12]
 8002fae:	611a      	str	r2, [r3, #16]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	4a28      	ldr	r2, [pc, #160]	@ (8003058 <HAL_SPI_MspInit+0xc0>)
 8002fb6:	4293      	cmp	r3, r2
 8002fb8:	d149      	bne.n	800304e <HAL_SPI_MspInit+0xb6>
 8002fba:	2300      	movs	r3, #0
 8002fbc:	613b      	str	r3, [r7, #16]
 8002fbe:	4b27      	ldr	r3, [pc, #156]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fc2:	4a26      	ldr	r2, [pc, #152]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fc4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002fc8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002fca:	4b24      	ldr	r3, [pc, #144]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002fd2:	613b      	str	r3, [r7, #16]
 8002fd4:	693b      	ldr	r3, [r7, #16]
 8002fd6:	2300      	movs	r3, #0
 8002fd8:	60fb      	str	r3, [r7, #12]
 8002fda:	4b20      	ldr	r3, [pc, #128]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fde:	4a1f      	ldr	r2, [pc, #124]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fe0:	f043 0301 	orr.w	r3, r3, #1
 8002fe4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002fe6:	4b1d      	ldr	r3, [pc, #116]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002fe8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fea:	f003 0301 	and.w	r3, r3, #1
 8002fee:	60fb      	str	r3, [r7, #12]
 8002ff0:	68fb      	ldr	r3, [r7, #12]
 8002ff2:	2300      	movs	r3, #0
 8002ff4:	60bb      	str	r3, [r7, #8]
 8002ff6:	4b19      	ldr	r3, [pc, #100]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002ff8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ffa:	4a18      	ldr	r2, [pc, #96]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8002ffc:	f043 0302 	orr.w	r3, r3, #2
 8003000:	6313      	str	r3, [r2, #48]	@ 0x30
 8003002:	4b16      	ldr	r3, [pc, #88]	@ (800305c <HAL_SPI_MspInit+0xc4>)
 8003004:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003006:	f003 0302 	and.w	r3, r3, #2
 800300a:	60bb      	str	r3, [r7, #8]
 800300c:	68bb      	ldr	r3, [r7, #8]
 800300e:	23c0      	movs	r3, #192	@ 0xc0
 8003010:	617b      	str	r3, [r7, #20]
 8003012:	2302      	movs	r3, #2
 8003014:	61bb      	str	r3, [r7, #24]
 8003016:	2300      	movs	r3, #0
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	2303      	movs	r3, #3
 800301c:	623b      	str	r3, [r7, #32]
 800301e:	2305      	movs	r3, #5
 8003020:	627b      	str	r3, [r7, #36]	@ 0x24
 8003022:	f107 0314 	add.w	r3, r7, #20
 8003026:	4619      	mov	r1, r3
 8003028:	480d      	ldr	r0, [pc, #52]	@ (8003060 <HAL_SPI_MspInit+0xc8>)
 800302a:	f002 f8b7 	bl	800519c <HAL_GPIO_Init>
 800302e:	2308      	movs	r3, #8
 8003030:	617b      	str	r3, [r7, #20]
 8003032:	2302      	movs	r3, #2
 8003034:	61bb      	str	r3, [r7, #24]
 8003036:	2300      	movs	r3, #0
 8003038:	61fb      	str	r3, [r7, #28]
 800303a:	2303      	movs	r3, #3
 800303c:	623b      	str	r3, [r7, #32]
 800303e:	2305      	movs	r3, #5
 8003040:	627b      	str	r3, [r7, #36]	@ 0x24
 8003042:	f107 0314 	add.w	r3, r7, #20
 8003046:	4619      	mov	r1, r3
 8003048:	4806      	ldr	r0, [pc, #24]	@ (8003064 <HAL_SPI_MspInit+0xcc>)
 800304a:	f002 f8a7 	bl	800519c <HAL_GPIO_Init>
 800304e:	bf00      	nop
 8003050:	3728      	adds	r7, #40	@ 0x28
 8003052:	46bd      	mov	sp, r7
 8003054:	bd80      	pop	{r7, pc}
 8003056:	bf00      	nop
 8003058:	40013000 	.word	0x40013000
 800305c:	40023800 	.word	0x40023800
 8003060:	40020000 	.word	0x40020000
 8003064:	40020400 	.word	0x40020400

08003068 <HAL_InitTick>:
 8003068:	b580      	push	{r7, lr}
 800306a:	b08c      	sub	sp, #48	@ 0x30
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]
 8003070:	2300      	movs	r3, #0
 8003072:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003074:	2300      	movs	r3, #0
 8003076:	627b      	str	r3, [r7, #36]	@ 0x24
 8003078:	2300      	movs	r3, #0
 800307a:	60bb      	str	r3, [r7, #8]
 800307c:	4b2f      	ldr	r3, [pc, #188]	@ (800313c <HAL_InitTick+0xd4>)
 800307e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003080:	4a2e      	ldr	r2, [pc, #184]	@ (800313c <HAL_InitTick+0xd4>)
 8003082:	f043 0301 	orr.w	r3, r3, #1
 8003086:	6453      	str	r3, [r2, #68]	@ 0x44
 8003088:	4b2c      	ldr	r3, [pc, #176]	@ (800313c <HAL_InitTick+0xd4>)
 800308a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800308c:	f003 0301 	and.w	r3, r3, #1
 8003090:	60bb      	str	r3, [r7, #8]
 8003092:	68bb      	ldr	r3, [r7, #8]
 8003094:	f107 020c 	add.w	r2, r7, #12
 8003098:	f107 0310 	add.w	r3, r7, #16
 800309c:	4611      	mov	r1, r2
 800309e:	4618      	mov	r0, r3
 80030a0:	f003 fc98 	bl	80069d4 <HAL_RCC_GetClockConfig>
 80030a4:	f003 fc82 	bl	80069ac <HAL_RCC_GetPCLK2Freq>
 80030a8:	4603      	mov	r3, r0
 80030aa:	005b      	lsls	r3, r3, #1
 80030ac:	62bb      	str	r3, [r7, #40]	@ 0x28
 80030ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80030b0:	4a23      	ldr	r2, [pc, #140]	@ (8003140 <HAL_InitTick+0xd8>)
 80030b2:	fba2 2303 	umull	r2, r3, r2, r3
 80030b6:	0c9b      	lsrs	r3, r3, #18
 80030b8:	3b01      	subs	r3, #1
 80030ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80030bc:	4b21      	ldr	r3, [pc, #132]	@ (8003144 <HAL_InitTick+0xdc>)
 80030be:	4a22      	ldr	r2, [pc, #136]	@ (8003148 <HAL_InitTick+0xe0>)
 80030c0:	601a      	str	r2, [r3, #0]
 80030c2:	4b20      	ldr	r3, [pc, #128]	@ (8003144 <HAL_InitTick+0xdc>)
 80030c4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80030c8:	60da      	str	r2, [r3, #12]
 80030ca:	4a1e      	ldr	r2, [pc, #120]	@ (8003144 <HAL_InitTick+0xdc>)
 80030cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80030ce:	6053      	str	r3, [r2, #4]
 80030d0:	4b1c      	ldr	r3, [pc, #112]	@ (8003144 <HAL_InitTick+0xdc>)
 80030d2:	2200      	movs	r2, #0
 80030d4:	611a      	str	r2, [r3, #16]
 80030d6:	4b1b      	ldr	r3, [pc, #108]	@ (8003144 <HAL_InitTick+0xdc>)
 80030d8:	2200      	movs	r2, #0
 80030da:	609a      	str	r2, [r3, #8]
 80030dc:	4b19      	ldr	r3, [pc, #100]	@ (8003144 <HAL_InitTick+0xdc>)
 80030de:	2200      	movs	r2, #0
 80030e0:	619a      	str	r2, [r3, #24]
 80030e2:	4818      	ldr	r0, [pc, #96]	@ (8003144 <HAL_InitTick+0xdc>)
 80030e4:	f004 fce6 	bl	8007ab4 <HAL_TIM_Base_Init>
 80030e8:	4603      	mov	r3, r0
 80030ea:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 80030ee:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d11b      	bne.n	800312e <HAL_InitTick+0xc6>
 80030f6:	4813      	ldr	r0, [pc, #76]	@ (8003144 <HAL_InitTick+0xdc>)
 80030f8:	f004 fd36 	bl	8007b68 <HAL_TIM_Base_Start_IT>
 80030fc:	4603      	mov	r3, r0
 80030fe:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8003102:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003106:	2b00      	cmp	r3, #0
 8003108:	d111      	bne.n	800312e <HAL_InitTick+0xc6>
 800310a:	2019      	movs	r0, #25
 800310c:	f001 fcc8 	bl	8004aa0 <HAL_NVIC_EnableIRQ>
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	2b0f      	cmp	r3, #15
 8003114:	d808      	bhi.n	8003128 <HAL_InitTick+0xc0>
 8003116:	2200      	movs	r2, #0
 8003118:	6879      	ldr	r1, [r7, #4]
 800311a:	2019      	movs	r0, #25
 800311c:	f001 fca4 	bl	8004a68 <HAL_NVIC_SetPriority>
 8003120:	4a0a      	ldr	r2, [pc, #40]	@ (800314c <HAL_InitTick+0xe4>)
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6013      	str	r3, [r2, #0]
 8003126:	e002      	b.n	800312e <HAL_InitTick+0xc6>
 8003128:	2301      	movs	r3, #1
 800312a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800312e:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8003132:	4618      	mov	r0, r3
 8003134:	3730      	adds	r7, #48	@ 0x30
 8003136:	46bd      	mov	sp, r7
 8003138:	bd80      	pop	{r7, pc}
 800313a:	bf00      	nop
 800313c:	40023800 	.word	0x40023800
 8003140:	431bde83 	.word	0x431bde83
 8003144:	20000548 	.word	0x20000548
 8003148:	40010000 	.word	0x40010000
 800314c:	20000008 	.word	0x20000008

08003150 <NMI_Handler>:
 8003150:	b480      	push	{r7}
 8003152:	af00      	add	r7, sp, #0
 8003154:	bf00      	nop
 8003156:	e7fd      	b.n	8003154 <NMI_Handler+0x4>

08003158 <HardFault_Handler>:
 8003158:	b480      	push	{r7}
 800315a:	af00      	add	r7, sp, #0
 800315c:	bf00      	nop
 800315e:	e7fd      	b.n	800315c <HardFault_Handler+0x4>

08003160 <MemManage_Handler>:
 8003160:	b480      	push	{r7}
 8003162:	af00      	add	r7, sp, #0
 8003164:	bf00      	nop
 8003166:	e7fd      	b.n	8003164 <MemManage_Handler+0x4>

08003168 <BusFault_Handler>:
 8003168:	b480      	push	{r7}
 800316a:	af00      	add	r7, sp, #0
 800316c:	bf00      	nop
 800316e:	e7fd      	b.n	800316c <BusFault_Handler+0x4>

08003170 <UsageFault_Handler>:
 8003170:	b480      	push	{r7}
 8003172:	af00      	add	r7, sp, #0
 8003174:	bf00      	nop
 8003176:	e7fd      	b.n	8003174 <UsageFault_Handler+0x4>

08003178 <DebugMon_Handler>:
 8003178:	b480      	push	{r7}
 800317a:	af00      	add	r7, sp, #0
 800317c:	bf00      	nop
 800317e:	46bd      	mov	sp, r7
 8003180:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003184:	4770      	bx	lr
	...

08003188 <TIM1_UP_TIM10_IRQHandler>:
 8003188:	b580      	push	{r7, lr}
 800318a:	af00      	add	r7, sp, #0
 800318c:	4802      	ldr	r0, [pc, #8]	@ (8003198 <TIM1_UP_TIM10_IRQHandler+0x10>)
 800318e:	f004 fd5b 	bl	8007c48 <HAL_TIM_IRQHandler>
 8003192:	bf00      	nop
 8003194:	bd80      	pop	{r7, pc}
 8003196:	bf00      	nop
 8003198:	20000548 	.word	0x20000548

0800319c <DMA2_Stream0_IRQHandler>:
 800319c:	b580      	push	{r7, lr}
 800319e:	af00      	add	r7, sp, #0
 80031a0:	4802      	ldr	r0, [pc, #8]	@ (80031ac <DMA2_Stream0_IRQHandler+0x10>)
 80031a2:	f001 fd91 	bl	8004cc8 <HAL_DMA_IRQHandler>
 80031a6:	bf00      	nop
 80031a8:	bd80      	pop	{r7, pc}
 80031aa:	bf00      	nop
 80031ac:	200003a8 	.word	0x200003a8

080031b0 <_sbrk>:
 80031b0:	b580      	push	{r7, lr}
 80031b2:	b086      	sub	sp, #24
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
 80031b8:	4a14      	ldr	r2, [pc, #80]	@ (800320c <_sbrk+0x5c>)
 80031ba:	4b15      	ldr	r3, [pc, #84]	@ (8003210 <_sbrk+0x60>)
 80031bc:	1ad3      	subs	r3, r2, r3
 80031be:	617b      	str	r3, [r7, #20]
 80031c0:	697b      	ldr	r3, [r7, #20]
 80031c2:	613b      	str	r3, [r7, #16]
 80031c4:	4b13      	ldr	r3, [pc, #76]	@ (8003214 <_sbrk+0x64>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d102      	bne.n	80031d2 <_sbrk+0x22>
 80031cc:	4b11      	ldr	r3, [pc, #68]	@ (8003214 <_sbrk+0x64>)
 80031ce:	4a12      	ldr	r2, [pc, #72]	@ (8003218 <_sbrk+0x68>)
 80031d0:	601a      	str	r2, [r3, #0]
 80031d2:	4b10      	ldr	r3, [pc, #64]	@ (8003214 <_sbrk+0x64>)
 80031d4:	681a      	ldr	r2, [r3, #0]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	4413      	add	r3, r2
 80031da:	693a      	ldr	r2, [r7, #16]
 80031dc:	429a      	cmp	r2, r3
 80031de:	d207      	bcs.n	80031f0 <_sbrk+0x40>
 80031e0:	f006 fba4 	bl	800992c <__errno>
 80031e4:	4603      	mov	r3, r0
 80031e6:	220c      	movs	r2, #12
 80031e8:	601a      	str	r2, [r3, #0]
 80031ea:	f04f 33ff 	mov.w	r3, #4294967295
 80031ee:	e009      	b.n	8003204 <_sbrk+0x54>
 80031f0:	4b08      	ldr	r3, [pc, #32]	@ (8003214 <_sbrk+0x64>)
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	60fb      	str	r3, [r7, #12]
 80031f6:	4b07      	ldr	r3, [pc, #28]	@ (8003214 <_sbrk+0x64>)
 80031f8:	681a      	ldr	r2, [r3, #0]
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	4413      	add	r3, r2
 80031fe:	4a05      	ldr	r2, [pc, #20]	@ (8003214 <_sbrk+0x64>)
 8003200:	6013      	str	r3, [r2, #0]
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	4618      	mov	r0, r3
 8003206:	3718      	adds	r7, #24
 8003208:	46bd      	mov	sp, r7
 800320a:	bd80      	pop	{r7, pc}
 800320c:	20020000 	.word	0x20020000
 8003210:	00000400 	.word	0x00000400
 8003214:	20000590 	.word	0x20000590
 8003218:	20004450 	.word	0x20004450

0800321c <SystemInit>:
 800321c:	b480      	push	{r7}
 800321e:	af00      	add	r7, sp, #0
 8003220:	4b06      	ldr	r3, [pc, #24]	@ (800323c <SystemInit+0x20>)
 8003222:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003226:	4a05      	ldr	r2, [pc, #20]	@ (800323c <SystemInit+0x20>)
 8003228:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800322c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003230:	bf00      	nop
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr
 800323a:	bf00      	nop
 800323c:	e000ed00 	.word	0xe000ed00

08003240 <tp_init>:
parameter:
  phwXpos: ponit to x axis
  phwYpos: ponit to y axis
******************************************************************************/
void tp_init(void)
{
 8003240:	b580      	push	{r7, lr}
 8003242:	af00      	add	r7, sp, #0
	xpt2046_init();
 8003244:	f000 f982 	bl	800354c <xpt2046_init>
}
 8003248:	bf00      	nop
 800324a:	bd80      	pop	{r7, pc}

0800324c <tp_draw_touch_point>:
  phwXpos: x axis
  phwYpos: y axis
	hwColor: point color
******************************************************************************/
void tp_draw_touch_point(uint16_t hwXpos, uint16_t hwYpos, uint16_t hwColor)
{
 800324c:	b590      	push	{r4, r7, lr}
 800324e:	b085      	sub	sp, #20
 8003250:	af02      	add	r7, sp, #8
 8003252:	4603      	mov	r3, r0
 8003254:	80fb      	strh	r3, [r7, #6]
 8003256:	460b      	mov	r3, r1
 8003258:	80bb      	strh	r3, [r7, #4]
 800325a:	4613      	mov	r3, r2
 800325c:	807b      	strh	r3, [r7, #2]
	lcd_draw_line(hwXpos - 12, hwYpos, hwXpos + 13, hwYpos, hwColor);
 800325e:	88fb      	ldrh	r3, [r7, #6]
 8003260:	3b0c      	subs	r3, #12
 8003262:	b298      	uxth	r0, r3
 8003264:	88fb      	ldrh	r3, [r7, #6]
 8003266:	330d      	adds	r3, #13
 8003268:	b29a      	uxth	r2, r3
 800326a:	88bc      	ldrh	r4, [r7, #4]
 800326c:	88b9      	ldrh	r1, [r7, #4]
 800326e:	887b      	ldrh	r3, [r7, #2]
 8003270:	9300      	str	r3, [sp, #0]
 8003272:	4623      	mov	r3, r4
 8003274:	f7fe f92f 	bl	80014d6 <lcd_draw_line>
	lcd_draw_line(hwXpos, hwYpos - 12, hwXpos, hwYpos + 13, hwColor);
 8003278:	88bb      	ldrh	r3, [r7, #4]
 800327a:	3b0c      	subs	r3, #12
 800327c:	b299      	uxth	r1, r3
 800327e:	88bb      	ldrh	r3, [r7, #4]
 8003280:	330d      	adds	r3, #13
 8003282:	b29c      	uxth	r4, r3
 8003284:	88fa      	ldrh	r2, [r7, #6]
 8003286:	88f8      	ldrh	r0, [r7, #6]
 8003288:	887b      	ldrh	r3, [r7, #2]
 800328a:	9300      	str	r3, [sp, #0]
 800328c:	4623      	mov	r3, r4
 800328e:	f7fe f922 	bl	80014d6 <lcd_draw_line>
	lcd_draw_dot(hwXpos + 1, hwYpos + 1, hwColor);
 8003292:	88fb      	ldrh	r3, [r7, #6]
 8003294:	3301      	adds	r3, #1
 8003296:	b298      	uxth	r0, r3
 8003298:	88bb      	ldrh	r3, [r7, #4]
 800329a:	3301      	adds	r3, #1
 800329c:	b29b      	uxth	r3, r3
 800329e:	887a      	ldrh	r2, [r7, #2]
 80032a0:	4619      	mov	r1, r3
 80032a2:	f7fe f8f5 	bl	8001490 <lcd_draw_dot>
	lcd_draw_dot(hwXpos - 1, hwYpos + 1, hwColor);
 80032a6:	88fb      	ldrh	r3, [r7, #6]
 80032a8:	3b01      	subs	r3, #1
 80032aa:	b298      	uxth	r0, r3
 80032ac:	88bb      	ldrh	r3, [r7, #4]
 80032ae:	3301      	adds	r3, #1
 80032b0:	b29b      	uxth	r3, r3
 80032b2:	887a      	ldrh	r2, [r7, #2]
 80032b4:	4619      	mov	r1, r3
 80032b6:	f7fe f8eb 	bl	8001490 <lcd_draw_dot>
	lcd_draw_dot(hwXpos + 1, hwYpos - 1, hwColor);
 80032ba:	88fb      	ldrh	r3, [r7, #6]
 80032bc:	3301      	adds	r3, #1
 80032be:	b298      	uxth	r0, r3
 80032c0:	88bb      	ldrh	r3, [r7, #4]
 80032c2:	3b01      	subs	r3, #1
 80032c4:	b29b      	uxth	r3, r3
 80032c6:	887a      	ldrh	r2, [r7, #2]
 80032c8:	4619      	mov	r1, r3
 80032ca:	f7fe f8e1 	bl	8001490 <lcd_draw_dot>
	lcd_draw_dot(hwXpos - 1, hwYpos - 1, hwColor);
 80032ce:	88fb      	ldrh	r3, [r7, #6]
 80032d0:	3b01      	subs	r3, #1
 80032d2:	b298      	uxth	r0, r3
 80032d4:	88bb      	ldrh	r3, [r7, #4]
 80032d6:	3b01      	subs	r3, #1
 80032d8:	b29b      	uxth	r3, r3
 80032da:	887a      	ldrh	r2, [r7, #2]
 80032dc:	4619      	mov	r1, r3
 80032de:	f7fe f8d7 	bl	8001490 <lcd_draw_dot>
	lcd_draw_circle(hwXpos, hwYpos, 6, hwColor);
 80032e2:	887b      	ldrh	r3, [r7, #2]
 80032e4:	88b9      	ldrh	r1, [r7, #4]
 80032e6:	88f8      	ldrh	r0, [r7, #6]
 80032e8:	2206      	movs	r2, #6
 80032ea:	f7fe f96e 	bl	80015ca <lcd_draw_circle>
}
 80032ee:	bf00      	nop
 80032f0:	370c      	adds	r7, #12
 80032f2:	46bd      	mov	sp, r7
 80032f4:	bd90      	pop	{r4, r7, pc}
	...

080032f8 <tp_scan>:
//
//	return (s_tTouch.chStatus & TP_PRESS_DOWN);
//}

uint8_t tp_scan(uint8_t chCoordType)
{
 80032f8:	b580      	push	{r7, lr}
 80032fa:	b084      	sub	sp, #16
 80032fc:	af00      	add	r7, sp, #0
 80032fe:	4603      	mov	r3, r0
 8003300:	71fb      	strb	r3, [r7, #7]
    if (!(XPT2046_IRQ_READ())) {
 8003302:	2110      	movs	r1, #16
 8003304:	484e      	ldr	r0, [pc, #312]	@ (8003440 <tp_scan+0x148>)
 8003306:	f002 f8e5 	bl	80054d4 <HAL_GPIO_ReadPin>
 800330a:	4603      	mov	r3, r0
 800330c:	2b00      	cmp	r3, #0
 800330e:	d172      	bne.n	80033f6 <tp_scan+0xfe>
        uint16_t raw_x, raw_y;
        if (xpt2046_twice_read_xy(&raw_x, &raw_y)) {
 8003310:	f107 020c 	add.w	r2, r7, #12
 8003314:	f107 030e 	add.w	r3, r7, #14
 8003318:	4611      	mov	r1, r2
 800331a:	4618      	mov	r0, r3
 800331c:	f000 f9ed 	bl	80036fa <xpt2046_twice_read_xy>
 8003320:	4603      	mov	r3, r0
 8003322:	2b00      	cmp	r3, #0
 8003324:	f000 8082 	beq.w	800342c <tp_scan+0x134>
            if (raw_x > 4096 || raw_y > 4096) { // Thêm lọc giá trị thô
 8003328:	89fb      	ldrh	r3, [r7, #14]
 800332a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800332e:	d803      	bhi.n	8003338 <tp_scan+0x40>
 8003330:	89bb      	ldrh	r3, [r7, #12]
 8003332:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003336:	d910      	bls.n	800335a <tp_scan+0x62>
                s_tTouch.chStatus &= ~(1 << 7);
 8003338:	4b42      	ldr	r3, [pc, #264]	@ (8003444 <tp_scan+0x14c>)
 800333a:	7a1b      	ldrb	r3, [r3, #8]
 800333c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003340:	b2da      	uxtb	r2, r3
 8003342:	4b40      	ldr	r3, [pc, #256]	@ (8003444 <tp_scan+0x14c>)
 8003344:	721a      	strb	r2, [r3, #8]
                s_tTouch.hwXpos = s_tTouch.hwYpos = 0xffff;
 8003346:	4b3f      	ldr	r3, [pc, #252]	@ (8003444 <tp_scan+0x14c>)
 8003348:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800334c:	80da      	strh	r2, [r3, #6]
 800334e:	4b3d      	ldr	r3, [pc, #244]	@ (8003444 <tp_scan+0x14c>)
 8003350:	88da      	ldrh	r2, [r3, #6]
 8003352:	4b3c      	ldr	r3, [pc, #240]	@ (8003444 <tp_scan+0x14c>)
 8003354:	809a      	strh	r2, [r3, #4]
                return 0;
 8003356:	2300      	movs	r3, #0
 8003358:	e06d      	b.n	8003436 <tp_scan+0x13e>
            }
            s_tTouch.hwXpos = raw_x;
 800335a:	89fa      	ldrh	r2, [r7, #14]
 800335c:	4b39      	ldr	r3, [pc, #228]	@ (8003444 <tp_scan+0x14c>)
 800335e:	809a      	strh	r2, [r3, #4]
            s_tTouch.hwYpos = raw_y;
 8003360:	89ba      	ldrh	r2, [r7, #12]
 8003362:	4b38      	ldr	r3, [pc, #224]	@ (8003444 <tp_scan+0x14c>)
 8003364:	80da      	strh	r2, [r3, #6]
            if (!chCoordType) {
 8003366:	79fb      	ldrb	r3, [r7, #7]
 8003368:	2b00      	cmp	r3, #0
 800336a:	d133      	bne.n	80033d4 <tp_scan+0xdc>
            	// Print adc value
//            	tp_dialog();
//            	lcd_display_num(50, 30, s_tTouch.hwXpos, 4, FONT_1608, BLUE);
//            	lcd_display_num(100, 30, s_tTouch.hwYpos, 4, FONT_1608, BLUE);

                s_tTouch.hwXpos = s_tTouch.fXfac * raw_y + s_tTouch.iXoff;
 800336c:	4b35      	ldr	r3, [pc, #212]	@ (8003444 <tp_scan+0x14c>)
 800336e:	ed93 7a04 	vldr	s14, [r3, #16]
 8003372:	89bb      	ldrh	r3, [r7, #12]
 8003374:	ee07 3a90 	vmov	s15, r3
 8003378:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800337c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003380:	4b30      	ldr	r3, [pc, #192]	@ (8003444 <tp_scan+0x14c>)
 8003382:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8003386:	ee07 3a90 	vmov	s15, r3
 800338a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800338e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003392:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003396:	ee17 3a90 	vmov	r3, s15
 800339a:	b29a      	uxth	r2, r3
 800339c:	4b29      	ldr	r3, [pc, #164]	@ (8003444 <tp_scan+0x14c>)
 800339e:	809a      	strh	r2, [r3, #4]
                s_tTouch.hwYpos = s_tTouch.fYfac * raw_x + s_tTouch.iYoff;
 80033a0:	4b28      	ldr	r3, [pc, #160]	@ (8003444 <tp_scan+0x14c>)
 80033a2:	ed93 7a05 	vldr	s14, [r3, #20]
 80033a6:	89fb      	ldrh	r3, [r7, #14]
 80033a8:	ee07 3a90 	vmov	s15, r3
 80033ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80033b0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80033b4:	4b23      	ldr	r3, [pc, #140]	@ (8003444 <tp_scan+0x14c>)
 80033b6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80033ba:	ee07 3a90 	vmov	s15, r3
 80033be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80033c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80033c6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80033ca:	ee17 3a90 	vmov	r3, s15
 80033ce:	b29a      	uxth	r2, r3
 80033d0:	4b1c      	ldr	r3, [pc, #112]	@ (8003444 <tp_scan+0x14c>)
 80033d2:	80da      	strh	r2, [r3, #6]
            }
            if (0 == (s_tTouch.chStatus & TP_PRESS_DOWN)) {
 80033d4:	4b1b      	ldr	r3, [pc, #108]	@ (8003444 <tp_scan+0x14c>)
 80033d6:	7a1b      	ldrb	r3, [r3, #8]
 80033d8:	b25b      	sxtb	r3, r3
 80033da:	2b00      	cmp	r3, #0
 80033dc:	db26      	blt.n	800342c <tp_scan+0x134>
                s_tTouch.chStatus = TP_PRESS_DOWN | TP_PRESSED;
 80033de:	4b19      	ldr	r3, [pc, #100]	@ (8003444 <tp_scan+0x14c>)
 80033e0:	22c0      	movs	r2, #192	@ 0xc0
 80033e2:	721a      	strb	r2, [r3, #8]
                s_tTouch.hwXpos0 = s_tTouch.hwXpos;
 80033e4:	4b17      	ldr	r3, [pc, #92]	@ (8003444 <tp_scan+0x14c>)
 80033e6:	889a      	ldrh	r2, [r3, #4]
 80033e8:	4b16      	ldr	r3, [pc, #88]	@ (8003444 <tp_scan+0x14c>)
 80033ea:	801a      	strh	r2, [r3, #0]
                s_tTouch.hwYpos0 = s_tTouch.hwYpos;
 80033ec:	4b15      	ldr	r3, [pc, #84]	@ (8003444 <tp_scan+0x14c>)
 80033ee:	88da      	ldrh	r2, [r3, #6]
 80033f0:	4b14      	ldr	r3, [pc, #80]	@ (8003444 <tp_scan+0x14c>)
 80033f2:	805a      	strh	r2, [r3, #2]
 80033f4:	e01a      	b.n	800342c <tp_scan+0x134>
            }
        }
    } else {
        if (s_tTouch.chStatus & TP_PRESS_DOWN) {
 80033f6:	4b13      	ldr	r3, [pc, #76]	@ (8003444 <tp_scan+0x14c>)
 80033f8:	7a1b      	ldrb	r3, [r3, #8]
 80033fa:	b25b      	sxtb	r3, r3
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	da07      	bge.n	8003410 <tp_scan+0x118>
            s_tTouch.chStatus &= ~(1 << 7);
 8003400:	4b10      	ldr	r3, [pc, #64]	@ (8003444 <tp_scan+0x14c>)
 8003402:	7a1b      	ldrb	r3, [r3, #8]
 8003404:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003408:	b2da      	uxtb	r2, r3
 800340a:	4b0e      	ldr	r3, [pc, #56]	@ (8003444 <tp_scan+0x14c>)
 800340c:	721a      	strb	r2, [r3, #8]
 800340e:	e00d      	b.n	800342c <tp_scan+0x134>
        } else {
            s_tTouch.hwXpos0 = 0;
 8003410:	4b0c      	ldr	r3, [pc, #48]	@ (8003444 <tp_scan+0x14c>)
 8003412:	2200      	movs	r2, #0
 8003414:	801a      	strh	r2, [r3, #0]
            s_tTouch.hwYpos0 = 0;
 8003416:	4b0b      	ldr	r3, [pc, #44]	@ (8003444 <tp_scan+0x14c>)
 8003418:	2200      	movs	r2, #0
 800341a:	805a      	strh	r2, [r3, #2]
            s_tTouch.hwXpos = 0xffff;
 800341c:	4b09      	ldr	r3, [pc, #36]	@ (8003444 <tp_scan+0x14c>)
 800341e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003422:	809a      	strh	r2, [r3, #4]
            s_tTouch.hwYpos = 0xffff;
 8003424:	4b07      	ldr	r3, [pc, #28]	@ (8003444 <tp_scan+0x14c>)
 8003426:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800342a:	80da      	strh	r2, [r3, #6]
        }
    }
    return (s_tTouch.chStatus & TP_PRESS_DOWN);
 800342c:	4b05      	ldr	r3, [pc, #20]	@ (8003444 <tp_scan+0x14c>)
 800342e:	7a1b      	ldrb	r3, [r3, #8]
 8003430:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8003434:	b2db      	uxtb	r3, r3
}
 8003436:	4618      	mov	r0, r3
 8003438:	3710      	adds	r7, #16
 800343a:	46bd      	mov	sp, r7
 800343c:	bd80      	pop	{r7, pc}
 800343e:	bf00      	nop
 8003440:	40020400 	.word	0x40020400
 8003444:	20000594 	.word	0x20000594

08003448 <tp_adjust>:
/******************************************************************************
function :	adjust touch lcd
parameter:
******************************************************************************/
void tp_adjust(void)
{	
 8003448:	b580      	push	{r7, lr}
 800344a:	b088      	sub	sp, #32
 800344c:	af02      	add	r7, sp, #8
	uint8_t  cnt = 0;
 800344e:	2300      	movs	r3, #0
 8003450:	75fb      	strb	r3, [r7, #23]
	uint16_t hwTimeout = 0, d1, d2, pos_temp[4][2];
 8003452:	2300      	movs	r3, #0
 8003454:	82bb      	strh	r3, [r7, #20]
	uint32_t tem1, tem2;
	float fac;				

	lcd_clear_screen(WHITE);
 8003456:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800345a:	f7fd fe39 	bl	80010d0 <lcd_clear_screen>
	lcd_display_string(40, 40, (const uint8_t *)"Please use the stylus click the cross on the screen. The cross will always move until the screen adjustment is completed.",
 800345e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8003462:	9300      	str	r3, [sp, #0]
 8003464:	2310      	movs	r3, #16
 8003466:	4a11      	ldr	r2, [pc, #68]	@ (80034ac <tp_adjust+0x64>)
 8003468:	2128      	movs	r1, #40	@ 0x28
 800346a:	2028      	movs	r0, #40	@ 0x28
 800346c:	f7fd ffc4 	bl	80013f8 <lcd_display_string>
					16, RED);
	tp_draw_touch_point(20, 20, RED);
 8003470:	f44f 4278 	mov.w	r2, #63488	@ 0xf800
 8003474:	2114      	movs	r1, #20
 8003476:	2014      	movs	r0, #20
 8003478:	f7ff fee8 	bl	800324c <tp_draw_touch_point>
	s_tTouch.chStatus = 0;
 800347c:	4b0c      	ldr	r3, [pc, #48]	@ (80034b0 <tp_adjust+0x68>)
 800347e:	2200      	movs	r2, #0
 8003480:	721a      	strb	r2, [r3, #8]
	s_tTouch.fXfac = 0;
 8003482:	4b0b      	ldr	r3, [pc, #44]	@ (80034b0 <tp_adjust+0x68>)
 8003484:	f04f 0200 	mov.w	r2, #0
 8003488:	611a      	str	r2, [r3, #16]
	// ***********Hard code assign*****************************
//	s_tTouch.fYfac = -0.078144f; 			//   Dung
//	s_tTouch.iYoff = 320;
//	s_tTouch.fXfac = -0.058608f;
//	s_tTouch.iXoff = 240;
	s_tTouch.fXfac = -0.070588f;		// Finalllllllllll
 800348a:	4b09      	ldr	r3, [pc, #36]	@ (80034b0 <tp_adjust+0x68>)
 800348c:	4a09      	ldr	r2, [pc, #36]	@ (80034b4 <tp_adjust+0x6c>)
 800348e:	611a      	str	r2, [r3, #16]
	s_tTouch.iXoff = 265;
 8003490:	4b07      	ldr	r3, [pc, #28]	@ (80034b0 <tp_adjust+0x68>)
 8003492:	f240 1209 	movw	r2, #265	@ 0x109
 8003496:	815a      	strh	r2, [r3, #10]
	s_tTouch.fYfac = -0.094117f;
 8003498:	4b05      	ldr	r3, [pc, #20]	@ (80034b0 <tp_adjust+0x68>)
 800349a:	4a07      	ldr	r2, [pc, #28]	@ (80034b8 <tp_adjust+0x70>)
 800349c:	615a      	str	r2, [r3, #20]
	s_tTouch.iYoff = 355;
 800349e:	4b04      	ldr	r3, [pc, #16]	@ (80034b0 <tp_adjust+0x68>)
 80034a0:	f240 1263 	movw	r2, #355	@ 0x163
 80034a4:	819a      	strh	r2, [r3, #12]
		delay_ms(10);
		if (++ hwTimeout >= 5000) {
			break;
		}
 	}
}
 80034a6:	3718      	adds	r7, #24
 80034a8:	46bd      	mov	sp, r7
 80034aa:	bd80      	pop	{r7, pc}
 80034ac:	0800a4f8 	.word	0x0800a4f8
 80034b0:	20000594 	.word	0x20000594
 80034b4:	bd909071 	.word	0xbd909071
 80034b8:	bdc0c06a 	.word	0xbdc0c06a

080034bc <tp_dialog>:
/******************************************************************************
function :	dialog touch lcd
parameter:
******************************************************************************/
void tp_dialog(void)
{
 80034bc:	b580      	push	{r7, lr}
 80034be:	b082      	sub	sp, #8
 80034c0:	af02      	add	r7, sp, #8
	lcd_clear_screen(WHITE);
 80034c2:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80034c6:	f7fd fe03 	bl	80010d0 <lcd_clear_screen>
	lcd_display_string(LCD_WIDTH - 40, 0, (const uint8_t *)"CLEAR", 16, BLUE);
 80034ca:	231f      	movs	r3, #31
 80034cc:	9300      	str	r3, [sp, #0]
 80034ce:	2310      	movs	r3, #16
 80034d0:	4a03      	ldr	r2, [pc, #12]	@ (80034e0 <tp_dialog+0x24>)
 80034d2:	2100      	movs	r1, #0
 80034d4:	20c8      	movs	r0, #200	@ 0xc8
 80034d6:	f7fd ff8f 	bl	80013f8 <lcd_display_string>
}
 80034da:	bf00      	nop
 80034dc:	46bd      	mov	sp, r7
 80034de:	bd80      	pop	{r7, pc}
 80034e0:	0800a574 	.word	0x0800a574

080034e4 <tp_get_touch_point>:
* Return:
*   true: If screen is touched
*   false: If screen is not touched
****************************************************************************/
bool tp_get_touch_point(uint16_t *x, uint16_t *y)
{
 80034e4:	b580      	push	{r7, lr}
 80034e6:	b082      	sub	sp, #8
 80034e8:	af00      	add	r7, sp, #0
 80034ea:	6078      	str	r0, [r7, #4]
 80034ec:	6039      	str	r1, [r7, #0]
    // Scan for touch event
    if (tp_scan(0)) {
 80034ee:	2000      	movs	r0, #0
 80034f0:	f7ff ff02 	bl	80032f8 <tp_scan>
 80034f4:	4603      	mov	r3, r0
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d009      	beq.n	800350e <tp_get_touch_point+0x2a>
        // Get coordinates from touch structure
        *x = s_tTouch.hwXpos;
 80034fa:	4b07      	ldr	r3, [pc, #28]	@ (8003518 <tp_get_touch_point+0x34>)
 80034fc:	889a      	ldrh	r2, [r3, #4]
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	801a      	strh	r2, [r3, #0]
        *y = s_tTouch.hwYpos;
 8003502:	4b05      	ldr	r3, [pc, #20]	@ (8003518 <tp_get_touch_point+0x34>)
 8003504:	88da      	ldrh	r2, [r3, #6]
 8003506:	683b      	ldr	r3, [r7, #0]
 8003508:	801a      	strh	r2, [r3, #0]
        return true;
 800350a:	2301      	movs	r3, #1
 800350c:	e000      	b.n	8003510 <tp_get_touch_point+0x2c>
    }
    return false;
 800350e:	2300      	movs	r3, #0
}
 8003510:	4618      	mov	r0, r3
 8003512:	3708      	adds	r7, #8
 8003514:	46bd      	mov	sp, r7
 8003516:	bd80      	pop	{r7, pc}
 8003518:	20000594 	.word	0x20000594

0800351c <xpt2046_write_byte>:
function :	write eight bits' data to xpt2046
parameter:
  chData : send data
******************************************************************************/
uint8_t xpt2046_write_byte(uint8_t chData)
{
 800351c:	b580      	push	{r7, lr}
 800351e:	b086      	sub	sp, #24
 8003520:	af02      	add	r7, sp, #8
 8003522:	4603      	mov	r3, r0
 8003524:	71fb      	strb	r3, [r7, #7]
    //return XPT2046_WRITE_BYTE(chData);
    uint8_t received = 0;
 8003526:	2300      	movs	r3, #0
 8003528:	73fb      	strb	r3, [r7, #15]
    HAL_SPI_TransmitReceive(&hspi1, &chData, &received, 1, HAL_MAX_DELAY);
 800352a:	f107 020f 	add.w	r2, r7, #15
 800352e:	1df9      	adds	r1, r7, #7
 8003530:	f04f 33ff 	mov.w	r3, #4294967295
 8003534:	9300      	str	r3, [sp, #0]
 8003536:	2301      	movs	r3, #1
 8003538:	4803      	ldr	r0, [pc, #12]	@ (8003548 <xpt2046_write_byte+0x2c>)
 800353a:	f004 f836 	bl	80075aa <HAL_SPI_TransmitReceive>
    return received;
 800353e:	7bfb      	ldrb	r3, [r7, #15]
}
 8003540:	4618      	mov	r0, r3
 8003542:	3710      	adds	r7, #16
 8003544:	46bd      	mov	sp, r7
 8003546:	bd80      	pop	{r7, pc}
 8003548:	200004cc 	.word	0x200004cc

0800354c <xpt2046_init>:
/******************************************************************************
function :	initial xpt2046
parameter:
******************************************************************************/
void xpt2046_init(void)
{
 800354c:	b580      	push	{r7, lr}
 800354e:	b082      	sub	sp, #8
 8003550:	af00      	add	r7, sp, #0
	uint16_t hwXpos, hwYpos;
		
	XPT2046_CS_H();
 8003552:	2201      	movs	r2, #1
 8003554:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003558:	4806      	ldr	r0, [pc, #24]	@ (8003574 <xpt2046_init+0x28>)
 800355a:	f001 ffd3 	bl	8005504 <HAL_GPIO_WritePin>

	xpt2046_read_xy(&hwXpos, &hwYpos);
 800355e:	1d3a      	adds	r2, r7, #4
 8003560:	1dbb      	adds	r3, r7, #6
 8003562:	4611      	mov	r1, r2
 8003564:	4618      	mov	r0, r3
 8003566:	f000 f8b1 	bl	80036cc <xpt2046_read_xy>
}
 800356a:	bf00      	nop
 800356c:	3708      	adds	r7, #8
 800356e:	46bd      	mov	sp, r7
 8003570:	bd80      	pop	{r7, pc}
 8003572:	bf00      	nop
 8003574:	40020400 	.word	0x40020400

08003578 <xpt2046_read_ad_value>:
function :	read ad value
parameter:
  chCmd  : send data
******************************************************************************/
uint16_t xpt2046_read_ad_value(uint8_t chCmd)
{
 8003578:	b580      	push	{r7, lr}
 800357a:	b084      	sub	sp, #16
 800357c:	af00      	add	r7, sp, #0
 800357e:	4603      	mov	r3, r0
 8003580:	71fb      	strb	r3, [r7, #7]
    uint16_t hwData = 0;
 8003582:	2300      	movs	r3, #0
 8003584:	81fb      	strh	r3, [r7, #14]
    
    XPT2046_CS_L();
 8003586:	2200      	movs	r2, #0
 8003588:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800358c:	4812      	ldr	r0, [pc, #72]	@ (80035d8 <xpt2046_read_ad_value+0x60>)
 800358e:	f001 ffb9 	bl	8005504 <HAL_GPIO_WritePin>
    xpt2046_write_byte(chCmd);
 8003592:	79fb      	ldrb	r3, [r7, #7]
 8003594:	4618      	mov	r0, r3
 8003596:	f7ff ffc1 	bl	800351c <xpt2046_write_byte>
    hwData = xpt2046_write_byte(0x00);
 800359a:	2000      	movs	r0, #0
 800359c:	f7ff ffbe 	bl	800351c <xpt2046_write_byte>
 80035a0:	4603      	mov	r3, r0
 80035a2:	81fb      	strh	r3, [r7, #14]
    hwData <<= 8;
 80035a4:	89fb      	ldrh	r3, [r7, #14]
 80035a6:	021b      	lsls	r3, r3, #8
 80035a8:	81fb      	strh	r3, [r7, #14]
    hwData |= xpt2046_write_byte(0x00);
 80035aa:	2000      	movs	r0, #0
 80035ac:	f7ff ffb6 	bl	800351c <xpt2046_write_byte>
 80035b0:	4603      	mov	r3, r0
 80035b2:	461a      	mov	r2, r3
 80035b4:	89fb      	ldrh	r3, [r7, #14]
 80035b6:	4313      	orrs	r3, r2
 80035b8:	81fb      	strh	r3, [r7, #14]
    hwData >>= 3;
 80035ba:	89fb      	ldrh	r3, [r7, #14]
 80035bc:	08db      	lsrs	r3, r3, #3
 80035be:	81fb      	strh	r3, [r7, #14]
    XPT2046_CS_H();
 80035c0:	2201      	movs	r2, #1
 80035c2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80035c6:	4804      	ldr	r0, [pc, #16]	@ (80035d8 <xpt2046_read_ad_value+0x60>)
 80035c8:	f001 ff9c 	bl	8005504 <HAL_GPIO_WritePin>
    
    return hwData;
 80035cc:	89fb      	ldrh	r3, [r7, #14]
}
 80035ce:	4618      	mov	r0, r3
 80035d0:	3710      	adds	r7, #16
 80035d2:	46bd      	mov	sp, r7
 80035d4:	bd80      	pop	{r7, pc}
 80035d6:	bf00      	nop
 80035d8:	40020400 	.word	0x40020400

080035dc <xpt2046_read_average>:
  chCmd  : send data
******************************************************************************/
#define READ_TIMES  5
#define LOST_NUM    1
uint16_t xpt2046_read_average(uint8_t chCmd)
{
 80035dc:	b590      	push	{r4, r7, lr}
 80035de:	b087      	sub	sp, #28
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	4603      	mov	r3, r0
 80035e4:	71fb      	strb	r3, [r7, #7]
    uint8_t i, j;
    uint16_t hwbuffer[READ_TIMES], hwSum = 0, hwTemp;
 80035e6:	2300      	movs	r3, #0
 80035e8:	82bb      	strh	r3, [r7, #20]

    for (i = 0; i < READ_TIMES; i ++) {
 80035ea:	2300      	movs	r3, #0
 80035ec:	75fb      	strb	r3, [r7, #23]
 80035ee:	e00e      	b.n	800360e <xpt2046_read_average+0x32>
        hwbuffer[i] = xpt2046_read_ad_value(chCmd);
 80035f0:	7dfc      	ldrb	r4, [r7, #23]
 80035f2:	79fb      	ldrb	r3, [r7, #7]
 80035f4:	4618      	mov	r0, r3
 80035f6:	f7ff ffbf 	bl	8003578 <xpt2046_read_ad_value>
 80035fa:	4603      	mov	r3, r0
 80035fc:	461a      	mov	r2, r3
 80035fe:	0063      	lsls	r3, r4, #1
 8003600:	3318      	adds	r3, #24
 8003602:	443b      	add	r3, r7
 8003604:	f823 2c10 	strh.w	r2, [r3, #-16]
    for (i = 0; i < READ_TIMES; i ++) {
 8003608:	7dfb      	ldrb	r3, [r7, #23]
 800360a:	3301      	adds	r3, #1
 800360c:	75fb      	strb	r3, [r7, #23]
 800360e:	7dfb      	ldrb	r3, [r7, #23]
 8003610:	2b04      	cmp	r3, #4
 8003612:	d9ed      	bls.n	80035f0 <xpt2046_read_average+0x14>
    }
    for (i = 0; i < READ_TIMES - 1; i ++) {
 8003614:	2300      	movs	r3, #0
 8003616:	75fb      	strb	r3, [r7, #23]
 8003618:	e035      	b.n	8003686 <xpt2046_read_average+0xaa>
        for (j = i + 1; j < READ_TIMES; j ++) {
 800361a:	7dfb      	ldrb	r3, [r7, #23]
 800361c:	3301      	adds	r3, #1
 800361e:	75bb      	strb	r3, [r7, #22]
 8003620:	e02b      	b.n	800367a <xpt2046_read_average+0x9e>
            if (hwbuffer[i] > hwbuffer[j]) {
 8003622:	7dfb      	ldrb	r3, [r7, #23]
 8003624:	005b      	lsls	r3, r3, #1
 8003626:	3318      	adds	r3, #24
 8003628:	443b      	add	r3, r7
 800362a:	f833 2c10 	ldrh.w	r2, [r3, #-16]
 800362e:	7dbb      	ldrb	r3, [r7, #22]
 8003630:	005b      	lsls	r3, r3, #1
 8003632:	3318      	adds	r3, #24
 8003634:	443b      	add	r3, r7
 8003636:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800363a:	429a      	cmp	r2, r3
 800363c:	d91a      	bls.n	8003674 <xpt2046_read_average+0x98>
                hwTemp = hwbuffer[i];
 800363e:	7dfb      	ldrb	r3, [r7, #23]
 8003640:	005b      	lsls	r3, r3, #1
 8003642:	3318      	adds	r3, #24
 8003644:	443b      	add	r3, r7
 8003646:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 800364a:	827b      	strh	r3, [r7, #18]
                hwbuffer[i] = hwbuffer[j];
 800364c:	7dbb      	ldrb	r3, [r7, #22]
 800364e:	7dfa      	ldrb	r2, [r7, #23]
 8003650:	005b      	lsls	r3, r3, #1
 8003652:	3318      	adds	r3, #24
 8003654:	443b      	add	r3, r7
 8003656:	f833 1c10 	ldrh.w	r1, [r3, #-16]
 800365a:	0053      	lsls	r3, r2, #1
 800365c:	3318      	adds	r3, #24
 800365e:	443b      	add	r3, r7
 8003660:	460a      	mov	r2, r1
 8003662:	f823 2c10 	strh.w	r2, [r3, #-16]
                hwbuffer[j] = hwTemp;
 8003666:	7dbb      	ldrb	r3, [r7, #22]
 8003668:	005b      	lsls	r3, r3, #1
 800366a:	3318      	adds	r3, #24
 800366c:	443b      	add	r3, r7
 800366e:	8a7a      	ldrh	r2, [r7, #18]
 8003670:	f823 2c10 	strh.w	r2, [r3, #-16]
        for (j = i + 1; j < READ_TIMES; j ++) {
 8003674:	7dbb      	ldrb	r3, [r7, #22]
 8003676:	3301      	adds	r3, #1
 8003678:	75bb      	strb	r3, [r7, #22]
 800367a:	7dbb      	ldrb	r3, [r7, #22]
 800367c:	2b04      	cmp	r3, #4
 800367e:	d9d0      	bls.n	8003622 <xpt2046_read_average+0x46>
    for (i = 0; i < READ_TIMES - 1; i ++) {
 8003680:	7dfb      	ldrb	r3, [r7, #23]
 8003682:	3301      	adds	r3, #1
 8003684:	75fb      	strb	r3, [r7, #23]
 8003686:	7dfb      	ldrb	r3, [r7, #23]
 8003688:	2b03      	cmp	r3, #3
 800368a:	d9c6      	bls.n	800361a <xpt2046_read_average+0x3e>
            }
        }
    }
    for (i = LOST_NUM; i < READ_TIMES - LOST_NUM; i ++) {
 800368c:	2301      	movs	r3, #1
 800368e:	75fb      	strb	r3, [r7, #23]
 8003690:	e00b      	b.n	80036aa <xpt2046_read_average+0xce>
        hwSum += hwbuffer[i];
 8003692:	7dfb      	ldrb	r3, [r7, #23]
 8003694:	005b      	lsls	r3, r3, #1
 8003696:	3318      	adds	r3, #24
 8003698:	443b      	add	r3, r7
 800369a:	f833 2c10 	ldrh.w	r2, [r3, #-16]
 800369e:	8abb      	ldrh	r3, [r7, #20]
 80036a0:	4413      	add	r3, r2
 80036a2:	82bb      	strh	r3, [r7, #20]
    for (i = LOST_NUM; i < READ_TIMES - LOST_NUM; i ++) {
 80036a4:	7dfb      	ldrb	r3, [r7, #23]
 80036a6:	3301      	adds	r3, #1
 80036a8:	75fb      	strb	r3, [r7, #23]
 80036aa:	7dfb      	ldrb	r3, [r7, #23]
 80036ac:	2b03      	cmp	r3, #3
 80036ae:	d9f0      	bls.n	8003692 <xpt2046_read_average+0xb6>
    }
    hwTemp = hwSum / (READ_TIMES - 2 * LOST_NUM);
 80036b0:	8abb      	ldrh	r3, [r7, #20]
 80036b2:	4a05      	ldr	r2, [pc, #20]	@ (80036c8 <xpt2046_read_average+0xec>)
 80036b4:	fba2 2303 	umull	r2, r3, r2, r3
 80036b8:	085b      	lsrs	r3, r3, #1
 80036ba:	827b      	strh	r3, [r7, #18]

    return hwTemp;
 80036bc:	8a7b      	ldrh	r3, [r7, #18]
}
 80036be:	4618      	mov	r0, r3
 80036c0:	371c      	adds	r7, #28
 80036c2:	46bd      	mov	sp, r7
 80036c4:	bd90      	pop	{r4, r7, pc}
 80036c6:	bf00      	nop
 80036c8:	aaaaaaab 	.word	0xaaaaaaab

080036cc <xpt2046_read_xy>:
parameter:
  phwXpos: ponit to x axis
  phwYpos: ponit to y axis
******************************************************************************/
void xpt2046_read_xy(uint16_t *phwXpos, uint16_t *phwYpos)
{
 80036cc:	b580      	push	{r7, lr}
 80036ce:	b082      	sub	sp, #8
 80036d0:	af00      	add	r7, sp, #0
 80036d2:	6078      	str	r0, [r7, #4]
 80036d4:	6039      	str	r1, [r7, #0]
	*phwXpos = xpt2046_read_average(0x90);
 80036d6:	2090      	movs	r0, #144	@ 0x90
 80036d8:	f7ff ff80 	bl	80035dc <xpt2046_read_average>
 80036dc:	4603      	mov	r3, r0
 80036de:	461a      	mov	r2, r3
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	801a      	strh	r2, [r3, #0]
	*phwYpos = xpt2046_read_average(0xD0);
 80036e4:	20d0      	movs	r0, #208	@ 0xd0
 80036e6:	f7ff ff79 	bl	80035dc <xpt2046_read_average>
 80036ea:	4603      	mov	r3, r0
 80036ec:	461a      	mov	r2, r3
 80036ee:	683b      	ldr	r3, [r7, #0]
 80036f0:	801a      	strh	r2, [r3, #0]
}
 80036f2:	bf00      	nop
 80036f4:	3708      	adds	r7, #8
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bd80      	pop	{r7, pc}

080036fa <xpt2046_twice_read_xy>:
  phwXpos: point to x axis
  phwYpos: point to y axis
******************************************************************************/
#define ERR_RANGE 50
uint8_t xpt2046_twice_read_xy(uint16_t *phwXpos, uint16_t *phwYpos)
{
 80036fa:	b580      	push	{r7, lr}
 80036fc:	b084      	sub	sp, #16
 80036fe:	af00      	add	r7, sp, #0
 8003700:	6078      	str	r0, [r7, #4]
 8003702:	6039      	str	r1, [r7, #0]
	uint16_t hwXpos1, hwYpos1, hwXpos2, hwYpos2;

	xpt2046_read_xy(&hwXpos1, &hwYpos1);
 8003704:	f107 020c 	add.w	r2, r7, #12
 8003708:	f107 030e 	add.w	r3, r7, #14
 800370c:	4611      	mov	r1, r2
 800370e:	4618      	mov	r0, r3
 8003710:	f7ff ffdc 	bl	80036cc <xpt2046_read_xy>
	xpt2046_read_xy(&hwXpos2, &hwYpos2);
 8003714:	f107 0208 	add.w	r2, r7, #8
 8003718:	f107 030a 	add.w	r3, r7, #10
 800371c:	4611      	mov	r1, r2
 800371e:	4618      	mov	r0, r3
 8003720:	f7ff ffd4 	bl	80036cc <xpt2046_read_xy>

	if (((hwXpos2 <= hwXpos1 && hwXpos1 < hwXpos2 + ERR_RANGE) || (hwXpos1 <= hwXpos2 && hwXpos2 < hwXpos1 + ERR_RANGE))
 8003724:	897a      	ldrh	r2, [r7, #10]
 8003726:	89fb      	ldrh	r3, [r7, #14]
 8003728:	429a      	cmp	r2, r3
 800372a:	d804      	bhi.n	8003736 <xpt2046_twice_read_xy+0x3c>
 800372c:	897b      	ldrh	r3, [r7, #10]
 800372e:	3331      	adds	r3, #49	@ 0x31
 8003730:	89fa      	ldrh	r2, [r7, #14]
 8003732:	4293      	cmp	r3, r2
 8003734:	da08      	bge.n	8003748 <xpt2046_twice_read_xy+0x4e>
 8003736:	89fa      	ldrh	r2, [r7, #14]
 8003738:	897b      	ldrh	r3, [r7, #10]
 800373a:	429a      	cmp	r2, r3
 800373c:	d828      	bhi.n	8003790 <xpt2046_twice_read_xy+0x96>
 800373e:	89fb      	ldrh	r3, [r7, #14]
 8003740:	3331      	adds	r3, #49	@ 0x31
 8003742:	897a      	ldrh	r2, [r7, #10]
 8003744:	4293      	cmp	r3, r2
 8003746:	db23      	blt.n	8003790 <xpt2046_twice_read_xy+0x96>
	&& ((hwYpos2 <= hwYpos1 && hwYpos1 < hwYpos2 + ERR_RANGE) || (hwYpos1 <= hwYpos2 && hwYpos2 < hwYpos1 + ERR_RANGE))) {
 8003748:	893a      	ldrh	r2, [r7, #8]
 800374a:	89bb      	ldrh	r3, [r7, #12]
 800374c:	429a      	cmp	r2, r3
 800374e:	d804      	bhi.n	800375a <xpt2046_twice_read_xy+0x60>
 8003750:	893b      	ldrh	r3, [r7, #8]
 8003752:	3331      	adds	r3, #49	@ 0x31
 8003754:	89ba      	ldrh	r2, [r7, #12]
 8003756:	4293      	cmp	r3, r2
 8003758:	da08      	bge.n	800376c <xpt2046_twice_read_xy+0x72>
 800375a:	89ba      	ldrh	r2, [r7, #12]
 800375c:	893b      	ldrh	r3, [r7, #8]
 800375e:	429a      	cmp	r2, r3
 8003760:	d816      	bhi.n	8003790 <xpt2046_twice_read_xy+0x96>
 8003762:	89bb      	ldrh	r3, [r7, #12]
 8003764:	3331      	adds	r3, #49	@ 0x31
 8003766:	893a      	ldrh	r2, [r7, #8]
 8003768:	4293      	cmp	r3, r2
 800376a:	db11      	blt.n	8003790 <xpt2046_twice_read_xy+0x96>
		*phwXpos = (hwXpos1 + hwXpos2) >> 1;
 800376c:	89fb      	ldrh	r3, [r7, #14]
 800376e:	461a      	mov	r2, r3
 8003770:	897b      	ldrh	r3, [r7, #10]
 8003772:	4413      	add	r3, r2
 8003774:	105b      	asrs	r3, r3, #1
 8003776:	b29a      	uxth	r2, r3
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	801a      	strh	r2, [r3, #0]
		*phwYpos = (hwYpos1 + hwYpos2) >> 1;
 800377c:	89bb      	ldrh	r3, [r7, #12]
 800377e:	461a      	mov	r2, r3
 8003780:	893b      	ldrh	r3, [r7, #8]
 8003782:	4413      	add	r3, r2
 8003784:	105b      	asrs	r3, r3, #1
 8003786:	b29a      	uxth	r2, r3
 8003788:	683b      	ldr	r3, [r7, #0]
 800378a:	801a      	strh	r2, [r3, #0]
		return 1;
 800378c:	2301      	movs	r3, #1
 800378e:	e000      	b.n	8003792 <xpt2046_twice_read_xy+0x98>
	}

	return 0;
 8003790:	2300      	movs	r3, #0
}
 8003792:	4618      	mov	r0, r3
 8003794:	3710      	adds	r7, #16
 8003796:	46bd      	mov	sp, r7
 8003798:	bd80      	pop	{r7, pc}
	...

0800379c <Reset_Handler>:
 800379c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80037d4 <LoopFillZerobss+0xe>
 80037a0:	f7ff fd3c 	bl	800321c <SystemInit>
 80037a4:	480c      	ldr	r0, [pc, #48]	@ (80037d8 <LoopFillZerobss+0x12>)
 80037a6:	490d      	ldr	r1, [pc, #52]	@ (80037dc <LoopFillZerobss+0x16>)
 80037a8:	4a0d      	ldr	r2, [pc, #52]	@ (80037e0 <LoopFillZerobss+0x1a>)
 80037aa:	2300      	movs	r3, #0
 80037ac:	e002      	b.n	80037b4 <LoopCopyDataInit>

080037ae <CopyDataInit>:
 80037ae:	58d4      	ldr	r4, [r2, r3]
 80037b0:	50c4      	str	r4, [r0, r3]
 80037b2:	3304      	adds	r3, #4

080037b4 <LoopCopyDataInit>:
 80037b4:	18c4      	adds	r4, r0, r3
 80037b6:	428c      	cmp	r4, r1
 80037b8:	d3f9      	bcc.n	80037ae <CopyDataInit>
 80037ba:	4a0a      	ldr	r2, [pc, #40]	@ (80037e4 <LoopFillZerobss+0x1e>)
 80037bc:	4c0a      	ldr	r4, [pc, #40]	@ (80037e8 <LoopFillZerobss+0x22>)
 80037be:	2300      	movs	r3, #0
 80037c0:	e001      	b.n	80037c6 <LoopFillZerobss>

080037c2 <FillZerobss>:
 80037c2:	6013      	str	r3, [r2, #0]
 80037c4:	3204      	adds	r2, #4

080037c6 <LoopFillZerobss>:
 80037c6:	42a2      	cmp	r2, r4
 80037c8:	d3fb      	bcc.n	80037c2 <FillZerobss>
 80037ca:	f006 f8b5 	bl	8009938 <__libc_init_array>
 80037ce:	f7fe f9f1 	bl	8001bb4 <main>
 80037d2:	4770      	bx	lr
 80037d4:	20020000 	.word	0x20020000
 80037d8:	20000000 	.word	0x20000000
 80037dc:	20000064 	.word	0x20000064
 80037e0:	0800b04c 	.word	0x0800b04c
 80037e4:	20000068 	.word	0x20000068
 80037e8:	2000444c 	.word	0x2000444c

080037ec <ADC_IRQHandler>:
 80037ec:	e7fe      	b.n	80037ec <ADC_IRQHandler>
	...

080037f0 <HAL_Init>:
 80037f0:	b580      	push	{r7, lr}
 80037f2:	af00      	add	r7, sp, #0
 80037f4:	4b0e      	ldr	r3, [pc, #56]	@ (8003830 <HAL_Init+0x40>)
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	4a0d      	ldr	r2, [pc, #52]	@ (8003830 <HAL_Init+0x40>)
 80037fa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80037fe:	6013      	str	r3, [r2, #0]
 8003800:	4b0b      	ldr	r3, [pc, #44]	@ (8003830 <HAL_Init+0x40>)
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	4a0a      	ldr	r2, [pc, #40]	@ (8003830 <HAL_Init+0x40>)
 8003806:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800380a:	6013      	str	r3, [r2, #0]
 800380c:	4b08      	ldr	r3, [pc, #32]	@ (8003830 <HAL_Init+0x40>)
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	4a07      	ldr	r2, [pc, #28]	@ (8003830 <HAL_Init+0x40>)
 8003812:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003816:	6013      	str	r3, [r2, #0]
 8003818:	2003      	movs	r0, #3
 800381a:	f001 f91a 	bl	8004a52 <HAL_NVIC_SetPriorityGrouping>
 800381e:	200f      	movs	r0, #15
 8003820:	f7ff fc22 	bl	8003068 <HAL_InitTick>
 8003824:	f7ff fa28 	bl	8002c78 <HAL_MspInit>
 8003828:	2300      	movs	r3, #0
 800382a:	4618      	mov	r0, r3
 800382c:	bd80      	pop	{r7, pc}
 800382e:	bf00      	nop
 8003830:	40023c00 	.word	0x40023c00

08003834 <HAL_IncTick>:
 8003834:	b480      	push	{r7}
 8003836:	af00      	add	r7, sp, #0
 8003838:	4b06      	ldr	r3, [pc, #24]	@ (8003854 <HAL_IncTick+0x20>)
 800383a:	781b      	ldrb	r3, [r3, #0]
 800383c:	461a      	mov	r2, r3
 800383e:	4b06      	ldr	r3, [pc, #24]	@ (8003858 <HAL_IncTick+0x24>)
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	4413      	add	r3, r2
 8003844:	4a04      	ldr	r2, [pc, #16]	@ (8003858 <HAL_IncTick+0x24>)
 8003846:	6013      	str	r3, [r2, #0]
 8003848:	bf00      	nop
 800384a:	46bd      	mov	sp, r7
 800384c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003850:	4770      	bx	lr
 8003852:	bf00      	nop
 8003854:	2000000c 	.word	0x2000000c
 8003858:	200005ac 	.word	0x200005ac

0800385c <HAL_GetTick>:
 800385c:	b480      	push	{r7}
 800385e:	af00      	add	r7, sp, #0
 8003860:	4b03      	ldr	r3, [pc, #12]	@ (8003870 <HAL_GetTick+0x14>)
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	4618      	mov	r0, r3
 8003866:	46bd      	mov	sp, r7
 8003868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800386c:	4770      	bx	lr
 800386e:	bf00      	nop
 8003870:	200005ac 	.word	0x200005ac

08003874 <HAL_ADC_Init>:
 8003874:	b580      	push	{r7, lr}
 8003876:	b084      	sub	sp, #16
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	2300      	movs	r3, #0
 800387e:	73fb      	strb	r3, [r7, #15]
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	2b00      	cmp	r3, #0
 8003884:	d101      	bne.n	800388a <HAL_ADC_Init+0x16>
 8003886:	2301      	movs	r3, #1
 8003888:	e033      	b.n	80038f2 <HAL_ADC_Init+0x7e>
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800388e:	2b00      	cmp	r3, #0
 8003890:	d109      	bne.n	80038a6 <HAL_ADC_Init+0x32>
 8003892:	6878      	ldr	r0, [r7, #4]
 8003894:	f7ff fa1c 	bl	8002cd0 <HAL_ADC_MspInit>
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2200      	movs	r2, #0
 800389c:	645a      	str	r2, [r3, #68]	@ 0x44
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2200      	movs	r2, #0
 80038a2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038aa:	f003 0310 	and.w	r3, r3, #16
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d118      	bne.n	80038e4 <HAL_ADC_Init+0x70>
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038b6:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80038ba:	f023 0302 	bic.w	r3, r3, #2
 80038be:	f043 0202 	orr.w	r2, r3, #2
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	641a      	str	r2, [r3, #64]	@ 0x40
 80038c6:	6878      	ldr	r0, [r7, #4]
 80038c8:	f000 fa62 	bl	8003d90 <ADC_Init>
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	2200      	movs	r2, #0
 80038d0:	645a      	str	r2, [r3, #68]	@ 0x44
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038d6:	f023 0303 	bic.w	r3, r3, #3
 80038da:	f043 0201 	orr.w	r2, r3, #1
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	641a      	str	r2, [r3, #64]	@ 0x40
 80038e2:	e001      	b.n	80038e8 <HAL_ADC_Init+0x74>
 80038e4:	2301      	movs	r3, #1
 80038e6:	73fb      	strb	r3, [r7, #15]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2200      	movs	r2, #0
 80038ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80038f0:	7bfb      	ldrb	r3, [r7, #15]
 80038f2:	4618      	mov	r0, r3
 80038f4:	3710      	adds	r7, #16
 80038f6:	46bd      	mov	sp, r7
 80038f8:	bd80      	pop	{r7, pc}
	...

080038fc <HAL_ADC_Start_DMA>:
 80038fc:	b580      	push	{r7, lr}
 80038fe:	b088      	sub	sp, #32
 8003900:	af00      	add	r7, sp, #0
 8003902:	60f8      	str	r0, [r7, #12]
 8003904:	60b9      	str	r1, [r7, #8]
 8003906:	607a      	str	r2, [r7, #4]
 8003908:	2300      	movs	r3, #0
 800390a:	617b      	str	r3, [r7, #20]
 800390c:	2300      	movs	r3, #0
 800390e:	77fb      	strb	r3, [r7, #31]
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003916:	2b01      	cmp	r3, #1
 8003918:	d101      	bne.n	800391e <HAL_ADC_Start_DMA+0x22>
 800391a:	2302      	movs	r3, #2
 800391c:	e0eb      	b.n	8003af6 <HAL_ADC_Start_DMA+0x1fa>
 800391e:	68fb      	ldr	r3, [r7, #12]
 8003920:	2201      	movs	r2, #1
 8003922:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	689b      	ldr	r3, [r3, #8]
 800392c:	f003 0301 	and.w	r3, r3, #1
 8003930:	2b01      	cmp	r3, #1
 8003932:	d018      	beq.n	8003966 <HAL_ADC_Start_DMA+0x6a>
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	689a      	ldr	r2, [r3, #8]
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	f042 0201 	orr.w	r2, r2, #1
 8003942:	609a      	str	r2, [r3, #8]
 8003944:	4b6e      	ldr	r3, [pc, #440]	@ (8003b00 <HAL_ADC_Start_DMA+0x204>)
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	4a6e      	ldr	r2, [pc, #440]	@ (8003b04 <HAL_ADC_Start_DMA+0x208>)
 800394a:	fba2 2303 	umull	r2, r3, r2, r3
 800394e:	0c9a      	lsrs	r2, r3, #18
 8003950:	4613      	mov	r3, r2
 8003952:	005b      	lsls	r3, r3, #1
 8003954:	4413      	add	r3, r2
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	e002      	b.n	8003960 <HAL_ADC_Start_DMA+0x64>
 800395a:	697b      	ldr	r3, [r7, #20]
 800395c:	3b01      	subs	r3, #1
 800395e:	617b      	str	r3, [r7, #20]
 8003960:	697b      	ldr	r3, [r7, #20]
 8003962:	2b00      	cmp	r3, #0
 8003964:	d1f9      	bne.n	800395a <HAL_ADC_Start_DMA+0x5e>
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	689b      	ldr	r3, [r3, #8]
 800396c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003970:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003974:	d107      	bne.n	8003986 <HAL_ADC_Start_DMA+0x8a>
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	689a      	ldr	r2, [r3, #8]
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003984:	609a      	str	r2, [r3, #8]
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	689b      	ldr	r3, [r3, #8]
 800398c:	f003 0301 	and.w	r3, r3, #1
 8003990:	2b01      	cmp	r3, #1
 8003992:	f040 80a3 	bne.w	8003adc <HAL_ADC_Start_DMA+0x1e0>
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800399a:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 800399e:	f023 0301 	bic.w	r3, r3, #1
 80039a2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	641a      	str	r2, [r3, #64]	@ 0x40
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	685b      	ldr	r3, [r3, #4]
 80039b0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d007      	beq.n	80039c8 <HAL_ADC_Start_DMA+0xcc>
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039bc:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80039c0:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	641a      	str	r2, [r3, #64]	@ 0x40
 80039c8:	68fb      	ldr	r3, [r7, #12]
 80039ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039cc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80039d0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80039d4:	d106      	bne.n	80039e4 <HAL_ADC_Start_DMA+0xe8>
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80039da:	f023 0206 	bic.w	r2, r3, #6
 80039de:	68fb      	ldr	r3, [r7, #12]
 80039e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80039e2:	e002      	b.n	80039ea <HAL_ADC_Start_DMA+0xee>
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	2200      	movs	r2, #0
 80039e8:	645a      	str	r2, [r3, #68]	@ 0x44
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	2200      	movs	r2, #0
 80039ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039f2:	4b45      	ldr	r3, [pc, #276]	@ (8003b08 <HAL_ADC_Start_DMA+0x20c>)
 80039f4:	61bb      	str	r3, [r7, #24]
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80039fa:	4a44      	ldr	r2, [pc, #272]	@ (8003b0c <HAL_ADC_Start_DMA+0x210>)
 80039fc:	63da      	str	r2, [r3, #60]	@ 0x3c
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a02:	4a43      	ldr	r2, [pc, #268]	@ (8003b10 <HAL_ADC_Start_DMA+0x214>)
 8003a04:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a06:	68fb      	ldr	r3, [r7, #12]
 8003a08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003a0a:	4a42      	ldr	r2, [pc, #264]	@ (8003b14 <HAL_ADC_Start_DMA+0x218>)
 8003a0c:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003a0e:	68fb      	ldr	r3, [r7, #12]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8003a16:	601a      	str	r2, [r3, #0]
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	685a      	ldr	r2, [r3, #4]
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8003a26:	605a      	str	r2, [r3, #4]
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	689a      	ldr	r2, [r3, #8]
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003a36:	609a      	str	r2, [r3, #8]
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	334c      	adds	r3, #76	@ 0x4c
 8003a42:	4619      	mov	r1, r3
 8003a44:	68ba      	ldr	r2, [r7, #8]
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	f001 f8e6 	bl	8004c18 <HAL_DMA_Start_IT>
 8003a4c:	4603      	mov	r3, r0
 8003a4e:	77fb      	strb	r3, [r7, #31]
 8003a50:	69bb      	ldr	r3, [r7, #24]
 8003a52:	685b      	ldr	r3, [r3, #4]
 8003a54:	f003 031f 	and.w	r3, r3, #31
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d12a      	bne.n	8003ab2 <HAL_ADC_Start_DMA+0x1b6>
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	4a2d      	ldr	r2, [pc, #180]	@ (8003b18 <HAL_ADC_Start_DMA+0x21c>)
 8003a62:	4293      	cmp	r3, r2
 8003a64:	d015      	beq.n	8003a92 <HAL_ADC_Start_DMA+0x196>
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	4a2c      	ldr	r2, [pc, #176]	@ (8003b1c <HAL_ADC_Start_DMA+0x220>)
 8003a6c:	4293      	cmp	r3, r2
 8003a6e:	d105      	bne.n	8003a7c <HAL_ADC_Start_DMA+0x180>
 8003a70:	4b25      	ldr	r3, [pc, #148]	@ (8003b08 <HAL_ADC_Start_DMA+0x20c>)
 8003a72:	685b      	ldr	r3, [r3, #4]
 8003a74:	f003 031f 	and.w	r3, r3, #31
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d00a      	beq.n	8003a92 <HAL_ADC_Start_DMA+0x196>
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	4a27      	ldr	r2, [pc, #156]	@ (8003b20 <HAL_ADC_Start_DMA+0x224>)
 8003a82:	4293      	cmp	r3, r2
 8003a84:	d136      	bne.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003a86:	4b20      	ldr	r3, [pc, #128]	@ (8003b08 <HAL_ADC_Start_DMA+0x20c>)
 8003a88:	685b      	ldr	r3, [r3, #4]
 8003a8a:	f003 0310 	and.w	r3, r3, #16
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d130      	bne.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	689b      	ldr	r3, [r3, #8]
 8003a98:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	d129      	bne.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	689a      	ldr	r2, [r3, #8]
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8003aae:	609a      	str	r2, [r3, #8]
 8003ab0:	e020      	b.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	4a18      	ldr	r2, [pc, #96]	@ (8003b18 <HAL_ADC_Start_DMA+0x21c>)
 8003ab8:	4293      	cmp	r3, r2
 8003aba:	d11b      	bne.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	689b      	ldr	r3, [r3, #8]
 8003ac2:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d114      	bne.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	689a      	ldr	r2, [r3, #8]
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8003ad8:	609a      	str	r2, [r3, #8]
 8003ada:	e00b      	b.n	8003af4 <HAL_ADC_Start_DMA+0x1f8>
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ae0:	f043 0210 	orr.w	r2, r3, #16
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003aec:	f043 0201 	orr.w	r2, r3, #1
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	645a      	str	r2, [r3, #68]	@ 0x44
 8003af4:	7ffb      	ldrb	r3, [r7, #31]
 8003af6:	4618      	mov	r0, r3
 8003af8:	3720      	adds	r7, #32
 8003afa:	46bd      	mov	sp, r7
 8003afc:	bd80      	pop	{r7, pc}
 8003afe:	bf00      	nop
 8003b00:	20000004 	.word	0x20000004
 8003b04:	431bde83 	.word	0x431bde83
 8003b08:	40012300 	.word	0x40012300
 8003b0c:	08003f89 	.word	0x08003f89
 8003b10:	08004043 	.word	0x08004043
 8003b14:	0800405f 	.word	0x0800405f
 8003b18:	40012000 	.word	0x40012000
 8003b1c:	40012100 	.word	0x40012100
 8003b20:	40012200 	.word	0x40012200

08003b24 <HAL_ADC_ConvHalfCpltCallback>:
 8003b24:	b480      	push	{r7}
 8003b26:	b083      	sub	sp, #12
 8003b28:	af00      	add	r7, sp, #0
 8003b2a:	6078      	str	r0, [r7, #4]
 8003b2c:	bf00      	nop
 8003b2e:	370c      	adds	r7, #12
 8003b30:	46bd      	mov	sp, r7
 8003b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b36:	4770      	bx	lr

08003b38 <HAL_ADC_ErrorCallback>:
 8003b38:	b480      	push	{r7}
 8003b3a:	b083      	sub	sp, #12
 8003b3c:	af00      	add	r7, sp, #0
 8003b3e:	6078      	str	r0, [r7, #4]
 8003b40:	bf00      	nop
 8003b42:	370c      	adds	r7, #12
 8003b44:	46bd      	mov	sp, r7
 8003b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b4a:	4770      	bx	lr

08003b4c <HAL_ADC_ConfigChannel>:
 8003b4c:	b480      	push	{r7}
 8003b4e:	b085      	sub	sp, #20
 8003b50:	af00      	add	r7, sp, #0
 8003b52:	6078      	str	r0, [r7, #4]
 8003b54:	6039      	str	r1, [r7, #0]
 8003b56:	2300      	movs	r3, #0
 8003b58:	60bb      	str	r3, [r7, #8]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003b60:	2b01      	cmp	r3, #1
 8003b62:	d101      	bne.n	8003b68 <HAL_ADC_ConfigChannel+0x1c>
 8003b64:	2302      	movs	r3, #2
 8003b66:	e105      	b.n	8003d74 <HAL_ADC_ConfigChannel+0x228>
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	2201      	movs	r2, #1
 8003b6c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b70:	683b      	ldr	r3, [r7, #0]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	2b09      	cmp	r3, #9
 8003b76:	d925      	bls.n	8003bc4 <HAL_ADC_ConfigChannel+0x78>
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	68d9      	ldr	r1, [r3, #12]
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	b29b      	uxth	r3, r3
 8003b84:	461a      	mov	r2, r3
 8003b86:	4613      	mov	r3, r2
 8003b88:	005b      	lsls	r3, r3, #1
 8003b8a:	4413      	add	r3, r2
 8003b8c:	3b1e      	subs	r3, #30
 8003b8e:	2207      	movs	r2, #7
 8003b90:	fa02 f303 	lsl.w	r3, r2, r3
 8003b94:	43da      	mvns	r2, r3
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	400a      	ands	r2, r1
 8003b9c:	60da      	str	r2, [r3, #12]
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	68d9      	ldr	r1, [r3, #12]
 8003ba4:	683b      	ldr	r3, [r7, #0]
 8003ba6:	689a      	ldr	r2, [r3, #8]
 8003ba8:	683b      	ldr	r3, [r7, #0]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	b29b      	uxth	r3, r3
 8003bae:	4618      	mov	r0, r3
 8003bb0:	4603      	mov	r3, r0
 8003bb2:	005b      	lsls	r3, r3, #1
 8003bb4:	4403      	add	r3, r0
 8003bb6:	3b1e      	subs	r3, #30
 8003bb8:	409a      	lsls	r2, r3
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	430a      	orrs	r2, r1
 8003bc0:	60da      	str	r2, [r3, #12]
 8003bc2:	e022      	b.n	8003c0a <HAL_ADC_ConfigChannel+0xbe>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	6919      	ldr	r1, [r3, #16]
 8003bca:	683b      	ldr	r3, [r7, #0]
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	b29b      	uxth	r3, r3
 8003bd0:	461a      	mov	r2, r3
 8003bd2:	4613      	mov	r3, r2
 8003bd4:	005b      	lsls	r3, r3, #1
 8003bd6:	4413      	add	r3, r2
 8003bd8:	2207      	movs	r2, #7
 8003bda:	fa02 f303 	lsl.w	r3, r2, r3
 8003bde:	43da      	mvns	r2, r3
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	400a      	ands	r2, r1
 8003be6:	611a      	str	r2, [r3, #16]
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	6919      	ldr	r1, [r3, #16]
 8003bee:	683b      	ldr	r3, [r7, #0]
 8003bf0:	689a      	ldr	r2, [r3, #8]
 8003bf2:	683b      	ldr	r3, [r7, #0]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	b29b      	uxth	r3, r3
 8003bf8:	4618      	mov	r0, r3
 8003bfa:	4603      	mov	r3, r0
 8003bfc:	005b      	lsls	r3, r3, #1
 8003bfe:	4403      	add	r3, r0
 8003c00:	409a      	lsls	r2, r3
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	430a      	orrs	r2, r1
 8003c08:	611a      	str	r2, [r3, #16]
 8003c0a:	683b      	ldr	r3, [r7, #0]
 8003c0c:	685b      	ldr	r3, [r3, #4]
 8003c0e:	2b06      	cmp	r3, #6
 8003c10:	d824      	bhi.n	8003c5c <HAL_ADC_ConfigChannel+0x110>
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003c18:	683b      	ldr	r3, [r7, #0]
 8003c1a:	685a      	ldr	r2, [r3, #4]
 8003c1c:	4613      	mov	r3, r2
 8003c1e:	009b      	lsls	r3, r3, #2
 8003c20:	4413      	add	r3, r2
 8003c22:	3b05      	subs	r3, #5
 8003c24:	221f      	movs	r2, #31
 8003c26:	fa02 f303 	lsl.w	r3, r2, r3
 8003c2a:	43da      	mvns	r2, r3
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	400a      	ands	r2, r1
 8003c32:	635a      	str	r2, [r3, #52]	@ 0x34
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003c3a:	683b      	ldr	r3, [r7, #0]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	b29b      	uxth	r3, r3
 8003c40:	4618      	mov	r0, r3
 8003c42:	683b      	ldr	r3, [r7, #0]
 8003c44:	685a      	ldr	r2, [r3, #4]
 8003c46:	4613      	mov	r3, r2
 8003c48:	009b      	lsls	r3, r3, #2
 8003c4a:	4413      	add	r3, r2
 8003c4c:	3b05      	subs	r3, #5
 8003c4e:	fa00 f203 	lsl.w	r2, r0, r3
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	430a      	orrs	r2, r1
 8003c58:	635a      	str	r2, [r3, #52]	@ 0x34
 8003c5a:	e04c      	b.n	8003cf6 <HAL_ADC_ConfigChannel+0x1aa>
 8003c5c:	683b      	ldr	r3, [r7, #0]
 8003c5e:	685b      	ldr	r3, [r3, #4]
 8003c60:	2b0c      	cmp	r3, #12
 8003c62:	d824      	bhi.n	8003cae <HAL_ADC_ConfigChannel+0x162>
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003c6a:	683b      	ldr	r3, [r7, #0]
 8003c6c:	685a      	ldr	r2, [r3, #4]
 8003c6e:	4613      	mov	r3, r2
 8003c70:	009b      	lsls	r3, r3, #2
 8003c72:	4413      	add	r3, r2
 8003c74:	3b23      	subs	r3, #35	@ 0x23
 8003c76:	221f      	movs	r2, #31
 8003c78:	fa02 f303 	lsl.w	r3, r2, r3
 8003c7c:	43da      	mvns	r2, r3
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	400a      	ands	r2, r1
 8003c84:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003c8c:	683b      	ldr	r3, [r7, #0]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	b29b      	uxth	r3, r3
 8003c92:	4618      	mov	r0, r3
 8003c94:	683b      	ldr	r3, [r7, #0]
 8003c96:	685a      	ldr	r2, [r3, #4]
 8003c98:	4613      	mov	r3, r2
 8003c9a:	009b      	lsls	r3, r3, #2
 8003c9c:	4413      	add	r3, r2
 8003c9e:	3b23      	subs	r3, #35	@ 0x23
 8003ca0:	fa00 f203 	lsl.w	r2, r0, r3
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	430a      	orrs	r2, r1
 8003caa:	631a      	str	r2, [r3, #48]	@ 0x30
 8003cac:	e023      	b.n	8003cf6 <HAL_ADC_ConfigChannel+0x1aa>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	685a      	ldr	r2, [r3, #4]
 8003cb8:	4613      	mov	r3, r2
 8003cba:	009b      	lsls	r3, r3, #2
 8003cbc:	4413      	add	r3, r2
 8003cbe:	3b41      	subs	r3, #65	@ 0x41
 8003cc0:	221f      	movs	r2, #31
 8003cc2:	fa02 f303 	lsl.w	r3, r2, r3
 8003cc6:	43da      	mvns	r2, r3
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	400a      	ands	r2, r1
 8003cce:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003cd6:	683b      	ldr	r3, [r7, #0]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	b29b      	uxth	r3, r3
 8003cdc:	4618      	mov	r0, r3
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	685a      	ldr	r2, [r3, #4]
 8003ce2:	4613      	mov	r3, r2
 8003ce4:	009b      	lsls	r3, r3, #2
 8003ce6:	4413      	add	r3, r2
 8003ce8:	3b41      	subs	r3, #65	@ 0x41
 8003cea:	fa00 f203 	lsl.w	r2, r0, r3
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	430a      	orrs	r2, r1
 8003cf4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003cf6:	4b22      	ldr	r3, [pc, #136]	@ (8003d80 <HAL_ADC_ConfigChannel+0x234>)
 8003cf8:	60fb      	str	r3, [r7, #12]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	4a21      	ldr	r2, [pc, #132]	@ (8003d84 <HAL_ADC_ConfigChannel+0x238>)
 8003d00:	4293      	cmp	r3, r2
 8003d02:	d109      	bne.n	8003d18 <HAL_ADC_ConfigChannel+0x1cc>
 8003d04:	683b      	ldr	r3, [r7, #0]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	2b12      	cmp	r3, #18
 8003d0a:	d105      	bne.n	8003d18 <HAL_ADC_ConfigChannel+0x1cc>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	685b      	ldr	r3, [r3, #4]
 8003d10:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	605a      	str	r2, [r3, #4]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	4a19      	ldr	r2, [pc, #100]	@ (8003d84 <HAL_ADC_ConfigChannel+0x238>)
 8003d1e:	4293      	cmp	r3, r2
 8003d20:	d123      	bne.n	8003d6a <HAL_ADC_ConfigChannel+0x21e>
 8003d22:	683b      	ldr	r3, [r7, #0]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	2b10      	cmp	r3, #16
 8003d28:	d003      	beq.n	8003d32 <HAL_ADC_ConfigChannel+0x1e6>
 8003d2a:	683b      	ldr	r3, [r7, #0]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	2b11      	cmp	r3, #17
 8003d30:	d11b      	bne.n	8003d6a <HAL_ADC_ConfigChannel+0x21e>
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	685b      	ldr	r3, [r3, #4]
 8003d36:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	605a      	str	r2, [r3, #4]
 8003d3e:	683b      	ldr	r3, [r7, #0]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	2b10      	cmp	r3, #16
 8003d44:	d111      	bne.n	8003d6a <HAL_ADC_ConfigChannel+0x21e>
 8003d46:	4b10      	ldr	r3, [pc, #64]	@ (8003d88 <HAL_ADC_ConfigChannel+0x23c>)
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	4a10      	ldr	r2, [pc, #64]	@ (8003d8c <HAL_ADC_ConfigChannel+0x240>)
 8003d4c:	fba2 2303 	umull	r2, r3, r2, r3
 8003d50:	0c9a      	lsrs	r2, r3, #18
 8003d52:	4613      	mov	r3, r2
 8003d54:	009b      	lsls	r3, r3, #2
 8003d56:	4413      	add	r3, r2
 8003d58:	005b      	lsls	r3, r3, #1
 8003d5a:	60bb      	str	r3, [r7, #8]
 8003d5c:	e002      	b.n	8003d64 <HAL_ADC_ConfigChannel+0x218>
 8003d5e:	68bb      	ldr	r3, [r7, #8]
 8003d60:	3b01      	subs	r3, #1
 8003d62:	60bb      	str	r3, [r7, #8]
 8003d64:	68bb      	ldr	r3, [r7, #8]
 8003d66:	2b00      	cmp	r3, #0
 8003d68:	d1f9      	bne.n	8003d5e <HAL_ADC_ConfigChannel+0x212>
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	2200      	movs	r2, #0
 8003d6e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d72:	2300      	movs	r3, #0
 8003d74:	4618      	mov	r0, r3
 8003d76:	3714      	adds	r7, #20
 8003d78:	46bd      	mov	sp, r7
 8003d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d7e:	4770      	bx	lr
 8003d80:	40012300 	.word	0x40012300
 8003d84:	40012000 	.word	0x40012000
 8003d88:	20000004 	.word	0x20000004
 8003d8c:	431bde83 	.word	0x431bde83

08003d90 <ADC_Init>:
 8003d90:	b480      	push	{r7}
 8003d92:	b085      	sub	sp, #20
 8003d94:	af00      	add	r7, sp, #0
 8003d96:	6078      	str	r0, [r7, #4]
 8003d98:	4b79      	ldr	r3, [pc, #484]	@ (8003f80 <ADC_Init+0x1f0>)
 8003d9a:	60fb      	str	r3, [r7, #12]
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	685b      	ldr	r3, [r3, #4]
 8003da0:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	605a      	str	r2, [r3, #4]
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	685a      	ldr	r2, [r3, #4]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	431a      	orrs	r2, r3
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	605a      	str	r2, [r3, #4]
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	685a      	ldr	r2, [r3, #4]
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003dc4:	605a      	str	r2, [r3, #4]
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	6859      	ldr	r1, [r3, #4]
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	691b      	ldr	r3, [r3, #16]
 8003dd0:	021a      	lsls	r2, r3, #8
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	430a      	orrs	r2, r1
 8003dd8:	605a      	str	r2, [r3, #4]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	685a      	ldr	r2, [r3, #4]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8003de8:	605a      	str	r2, [r3, #4]
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	6859      	ldr	r1, [r3, #4]
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	689a      	ldr	r2, [r3, #8]
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	430a      	orrs	r2, r1
 8003dfa:	605a      	str	r2, [r3, #4]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	689a      	ldr	r2, [r3, #8]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003e0a:	609a      	str	r2, [r3, #8]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	6899      	ldr	r1, [r3, #8]
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	68da      	ldr	r2, [r3, #12]
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	430a      	orrs	r2, r1
 8003e1c:	609a      	str	r2, [r3, #8]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e22:	4a58      	ldr	r2, [pc, #352]	@ (8003f84 <ADC_Init+0x1f4>)
 8003e24:	4293      	cmp	r3, r2
 8003e26:	d022      	beq.n	8003e6e <ADC_Init+0xde>
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	689a      	ldr	r2, [r3, #8]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003e36:	609a      	str	r2, [r3, #8]
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	6899      	ldr	r1, [r3, #8]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	430a      	orrs	r2, r1
 8003e48:	609a      	str	r2, [r3, #8]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	689a      	ldr	r2, [r3, #8]
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003e58:	609a      	str	r2, [r3, #8]
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	6899      	ldr	r1, [r3, #8]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	430a      	orrs	r2, r1
 8003e6a:	609a      	str	r2, [r3, #8]
 8003e6c:	e00f      	b.n	8003e8e <ADC_Init+0xfe>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	689a      	ldr	r2, [r3, #8]
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003e7c:	609a      	str	r2, [r3, #8]
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	681b      	ldr	r3, [r3, #0]
 8003e82:	689a      	ldr	r2, [r3, #8]
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003e8c:	609a      	str	r2, [r3, #8]
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	689a      	ldr	r2, [r3, #8]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	f022 0202 	bic.w	r2, r2, #2
 8003e9c:	609a      	str	r2, [r3, #8]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	6899      	ldr	r1, [r3, #8]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	7e1b      	ldrb	r3, [r3, #24]
 8003ea8:	005a      	lsls	r2, r3, #1
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	430a      	orrs	r2, r1
 8003eb0:	609a      	str	r2, [r3, #8]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d01b      	beq.n	8003ef4 <ADC_Init+0x164>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	685a      	ldr	r2, [r3, #4]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003eca:	605a      	str	r2, [r3, #4]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	685a      	ldr	r2, [r3, #4]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8003eda:	605a      	str	r2, [r3, #4]
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	6859      	ldr	r1, [r3, #4]
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ee6:	3b01      	subs	r3, #1
 8003ee8:	035a      	lsls	r2, r3, #13
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	430a      	orrs	r2, r1
 8003ef0:	605a      	str	r2, [r3, #4]
 8003ef2:	e007      	b.n	8003f04 <ADC_Init+0x174>
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	685a      	ldr	r2, [r3, #4]
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003f02:	605a      	str	r2, [r3, #4]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8003f12:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	69db      	ldr	r3, [r3, #28]
 8003f1e:	3b01      	subs	r3, #1
 8003f20:	051a      	lsls	r2, r3, #20
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	430a      	orrs	r2, r1
 8003f28:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	689a      	ldr	r2, [r3, #8]
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003f38:	609a      	str	r2, [r3, #8]
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	6899      	ldr	r1, [r3, #8]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8003f46:	025a      	lsls	r2, r3, #9
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	430a      	orrs	r2, r1
 8003f4e:	609a      	str	r2, [r3, #8]
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	689a      	ldr	r2, [r3, #8]
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003f5e:	609a      	str	r2, [r3, #8]
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	6899      	ldr	r1, [r3, #8]
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	695b      	ldr	r3, [r3, #20]
 8003f6a:	029a      	lsls	r2, r3, #10
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	430a      	orrs	r2, r1
 8003f72:	609a      	str	r2, [r3, #8]
 8003f74:	bf00      	nop
 8003f76:	3714      	adds	r7, #20
 8003f78:	46bd      	mov	sp, r7
 8003f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f7e:	4770      	bx	lr
 8003f80:	40012300 	.word	0x40012300
 8003f84:	0f000001 	.word	0x0f000001

08003f88 <ADC_DMAConvCplt>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b084      	sub	sp, #16
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003f94:	60fb      	str	r3, [r7, #12]
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003f9a:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d13c      	bne.n	800401c <ADC_DMAConvCplt+0x94>
 8003fa2:	68fb      	ldr	r3, [r7, #12]
 8003fa4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003fa6:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	641a      	str	r2, [r3, #64]	@ 0x40
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	689b      	ldr	r3, [r3, #8]
 8003fb4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003fb8:	2b00      	cmp	r3, #0
 8003fba:	d12b      	bne.n	8004014 <ADC_DMAConvCplt+0x8c>
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	7e1b      	ldrb	r3, [r3, #24]
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d127      	bne.n	8004014 <ADC_DMAConvCplt+0x8c>
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fca:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8003fce:	2b00      	cmp	r3, #0
 8003fd0:	d006      	beq.n	8003fe0 <ADC_DMAConvCplt+0x58>
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	689b      	ldr	r3, [r3, #8]
 8003fd8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d119      	bne.n	8004014 <ADC_DMAConvCplt+0x8c>
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	685a      	ldr	r2, [r3, #4]
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	f022 0220 	bic.w	r2, r2, #32
 8003fee:	605a      	str	r2, [r3, #4]
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ff4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	641a      	str	r2, [r3, #64]	@ 0x40
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004000:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004004:	2b00      	cmp	r3, #0
 8004006:	d105      	bne.n	8004014 <ADC_DMAConvCplt+0x8c>
 8004008:	68fb      	ldr	r3, [r7, #12]
 800400a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800400c:	f043 0201 	orr.w	r2, r3, #1
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	641a      	str	r2, [r3, #64]	@ 0x40
 8004014:	68f8      	ldr	r0, [r7, #12]
 8004016:	f7fd fcff 	bl	8001a18 <HAL_ADC_ConvCpltCallback>
 800401a:	e00e      	b.n	800403a <ADC_DMAConvCplt+0xb2>
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004020:	f003 0310 	and.w	r3, r3, #16
 8004024:	2b00      	cmp	r3, #0
 8004026:	d003      	beq.n	8004030 <ADC_DMAConvCplt+0xa8>
 8004028:	68f8      	ldr	r0, [r7, #12]
 800402a:	f7ff fd85 	bl	8003b38 <HAL_ADC_ErrorCallback>
 800402e:	e004      	b.n	800403a <ADC_DMAConvCplt+0xb2>
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004034:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004036:	6878      	ldr	r0, [r7, #4]
 8004038:	4798      	blx	r3
 800403a:	bf00      	nop
 800403c:	3710      	adds	r7, #16
 800403e:	46bd      	mov	sp, r7
 8004040:	bd80      	pop	{r7, pc}

08004042 <ADC_DMAHalfConvCplt>:
 8004042:	b580      	push	{r7, lr}
 8004044:	b084      	sub	sp, #16
 8004046:	af00      	add	r7, sp, #0
 8004048:	6078      	str	r0, [r7, #4]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800404e:	60fb      	str	r3, [r7, #12]
 8004050:	68f8      	ldr	r0, [r7, #12]
 8004052:	f7ff fd67 	bl	8003b24 <HAL_ADC_ConvHalfCpltCallback>
 8004056:	bf00      	nop
 8004058:	3710      	adds	r7, #16
 800405a:	46bd      	mov	sp, r7
 800405c:	bd80      	pop	{r7, pc}

0800405e <ADC_DMAError>:
 800405e:	b580      	push	{r7, lr}
 8004060:	b084      	sub	sp, #16
 8004062:	af00      	add	r7, sp, #0
 8004064:	6078      	str	r0, [r7, #4]
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800406a:	60fb      	str	r3, [r7, #12]
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	2240      	movs	r2, #64	@ 0x40
 8004070:	641a      	str	r2, [r3, #64]	@ 0x40
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004076:	f043 0204 	orr.w	r2, r3, #4
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	645a      	str	r2, [r3, #68]	@ 0x44
 800407e:	68f8      	ldr	r0, [r7, #12]
 8004080:	f7ff fd5a 	bl	8003b38 <HAL_ADC_ErrorCallback>
 8004084:	bf00      	nop
 8004086:	3710      	adds	r7, #16
 8004088:	46bd      	mov	sp, r7
 800408a:	bd80      	pop	{r7, pc}

0800408c <HAL_CAN_Init>:
 800408c:	b580      	push	{r7, lr}
 800408e:	b084      	sub	sp, #16
 8004090:	af00      	add	r7, sp, #0
 8004092:	6078      	str	r0, [r7, #4]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	2b00      	cmp	r3, #0
 8004098:	d101      	bne.n	800409e <HAL_CAN_Init+0x12>
 800409a:	2301      	movs	r3, #1
 800409c:	e0ed      	b.n	800427a <HAL_CAN_Init+0x1ee>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80040a4:	b2db      	uxtb	r3, r3
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d102      	bne.n	80040b0 <HAL_CAN_Init+0x24>
 80040aa:	6878      	ldr	r0, [r7, #4]
 80040ac:	f7fe fe62 	bl	8002d74 <HAL_CAN_MspInit>
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	681a      	ldr	r2, [r3, #0]
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	f042 0201 	orr.w	r2, r2, #1
 80040be:	601a      	str	r2, [r3, #0]
 80040c0:	f7ff fbcc 	bl	800385c <HAL_GetTick>
 80040c4:	60f8      	str	r0, [r7, #12]
 80040c6:	e012      	b.n	80040ee <HAL_CAN_Init+0x62>
 80040c8:	f7ff fbc8 	bl	800385c <HAL_GetTick>
 80040cc:	4602      	mov	r2, r0
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	1ad3      	subs	r3, r2, r3
 80040d2:	2b0a      	cmp	r3, #10
 80040d4:	d90b      	bls.n	80040ee <HAL_CAN_Init+0x62>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040da:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	625a      	str	r2, [r3, #36]	@ 0x24
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	2205      	movs	r2, #5
 80040e6:	f883 2020 	strb.w	r2, [r3, #32]
 80040ea:	2301      	movs	r3, #1
 80040ec:	e0c5      	b.n	800427a <HAL_CAN_Init+0x1ee>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	685b      	ldr	r3, [r3, #4]
 80040f4:	f003 0301 	and.w	r3, r3, #1
 80040f8:	2b00      	cmp	r3, #0
 80040fa:	d0e5      	beq.n	80040c8 <HAL_CAN_Init+0x3c>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	681a      	ldr	r2, [r3, #0]
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	f022 0202 	bic.w	r2, r2, #2
 800410a:	601a      	str	r2, [r3, #0]
 800410c:	f7ff fba6 	bl	800385c <HAL_GetTick>
 8004110:	60f8      	str	r0, [r7, #12]
 8004112:	e012      	b.n	800413a <HAL_CAN_Init+0xae>
 8004114:	f7ff fba2 	bl	800385c <HAL_GetTick>
 8004118:	4602      	mov	r2, r0
 800411a:	68fb      	ldr	r3, [r7, #12]
 800411c:	1ad3      	subs	r3, r2, r3
 800411e:	2b0a      	cmp	r3, #10
 8004120:	d90b      	bls.n	800413a <HAL_CAN_Init+0xae>
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004126:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	625a      	str	r2, [r3, #36]	@ 0x24
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	2205      	movs	r2, #5
 8004132:	f883 2020 	strb.w	r2, [r3, #32]
 8004136:	2301      	movs	r3, #1
 8004138:	e09f      	b.n	800427a <HAL_CAN_Init+0x1ee>
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	685b      	ldr	r3, [r3, #4]
 8004140:	f003 0302 	and.w	r3, r3, #2
 8004144:	2b00      	cmp	r3, #0
 8004146:	d1e5      	bne.n	8004114 <HAL_CAN_Init+0x88>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	7e1b      	ldrb	r3, [r3, #24]
 800414c:	2b01      	cmp	r3, #1
 800414e:	d108      	bne.n	8004162 <HAL_CAN_Init+0xd6>
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	681a      	ldr	r2, [r3, #0]
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800415e:	601a      	str	r2, [r3, #0]
 8004160:	e007      	b.n	8004172 <HAL_CAN_Init+0xe6>
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	681a      	ldr	r2, [r3, #0]
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004170:	601a      	str	r2, [r3, #0]
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	7e5b      	ldrb	r3, [r3, #25]
 8004176:	2b01      	cmp	r3, #1
 8004178:	d108      	bne.n	800418c <HAL_CAN_Init+0x100>
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	681a      	ldr	r2, [r3, #0]
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	e007      	b.n	800419c <HAL_CAN_Init+0x110>
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	681a      	ldr	r2, [r3, #0]
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800419a:	601a      	str	r2, [r3, #0]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	7e9b      	ldrb	r3, [r3, #26]
 80041a0:	2b01      	cmp	r3, #1
 80041a2:	d108      	bne.n	80041b6 <HAL_CAN_Init+0x12a>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	681a      	ldr	r2, [r3, #0]
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	f042 0220 	orr.w	r2, r2, #32
 80041b2:	601a      	str	r2, [r3, #0]
 80041b4:	e007      	b.n	80041c6 <HAL_CAN_Init+0x13a>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	681a      	ldr	r2, [r3, #0]
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	f022 0220 	bic.w	r2, r2, #32
 80041c4:	601a      	str	r2, [r3, #0]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	7edb      	ldrb	r3, [r3, #27]
 80041ca:	2b01      	cmp	r3, #1
 80041cc:	d108      	bne.n	80041e0 <HAL_CAN_Init+0x154>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	681a      	ldr	r2, [r3, #0]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	f022 0210 	bic.w	r2, r2, #16
 80041dc:	601a      	str	r2, [r3, #0]
 80041de:	e007      	b.n	80041f0 <HAL_CAN_Init+0x164>
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	681a      	ldr	r2, [r3, #0]
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	f042 0210 	orr.w	r2, r2, #16
 80041ee:	601a      	str	r2, [r3, #0]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	7f1b      	ldrb	r3, [r3, #28]
 80041f4:	2b01      	cmp	r3, #1
 80041f6:	d108      	bne.n	800420a <HAL_CAN_Init+0x17e>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	681a      	ldr	r2, [r3, #0]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	f042 0208 	orr.w	r2, r2, #8
 8004206:	601a      	str	r2, [r3, #0]
 8004208:	e007      	b.n	800421a <HAL_CAN_Init+0x18e>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	681a      	ldr	r2, [r3, #0]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	f022 0208 	bic.w	r2, r2, #8
 8004218:	601a      	str	r2, [r3, #0]
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	7f5b      	ldrb	r3, [r3, #29]
 800421e:	2b01      	cmp	r3, #1
 8004220:	d108      	bne.n	8004234 <HAL_CAN_Init+0x1a8>
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	681a      	ldr	r2, [r3, #0]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	f042 0204 	orr.w	r2, r2, #4
 8004230:	601a      	str	r2, [r3, #0]
 8004232:	e007      	b.n	8004244 <HAL_CAN_Init+0x1b8>
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	681a      	ldr	r2, [r3, #0]
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	f022 0204 	bic.w	r2, r2, #4
 8004242:	601a      	str	r2, [r3, #0]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	689a      	ldr	r2, [r3, #8]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	68db      	ldr	r3, [r3, #12]
 800424c:	431a      	orrs	r2, r3
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	691b      	ldr	r3, [r3, #16]
 8004252:	431a      	orrs	r2, r3
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	695b      	ldr	r3, [r3, #20]
 8004258:	ea42 0103 	orr.w	r1, r2, r3
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	685b      	ldr	r3, [r3, #4]
 8004260:	1e5a      	subs	r2, r3, #1
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	430a      	orrs	r2, r1
 8004268:	61da      	str	r2, [r3, #28]
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	2200      	movs	r2, #0
 800426e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	2201      	movs	r2, #1
 8004274:	f883 2020 	strb.w	r2, [r3, #32]
 8004278:	2300      	movs	r3, #0
 800427a:	4618      	mov	r0, r3
 800427c:	3710      	adds	r7, #16
 800427e:	46bd      	mov	sp, r7
 8004280:	bd80      	pop	{r7, pc}
	...

08004284 <HAL_CAN_ConfigFilter>:
 8004284:	b480      	push	{r7}
 8004286:	b087      	sub	sp, #28
 8004288:	af00      	add	r7, sp, #0
 800428a:	6078      	str	r0, [r7, #4]
 800428c:	6039      	str	r1, [r7, #0]
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	f893 3020 	ldrb.w	r3, [r3, #32]
 8004294:	75fb      	strb	r3, [r7, #23]
 8004296:	7dfb      	ldrb	r3, [r7, #23]
 8004298:	2b01      	cmp	r3, #1
 800429a:	d003      	beq.n	80042a4 <HAL_CAN_ConfigFilter+0x20>
 800429c:	7dfb      	ldrb	r3, [r7, #23]
 800429e:	2b02      	cmp	r3, #2
 80042a0:	f040 80be 	bne.w	8004420 <HAL_CAN_ConfigFilter+0x19c>
 80042a4:	4b65      	ldr	r3, [pc, #404]	@ (800443c <HAL_CAN_ConfigFilter+0x1b8>)
 80042a6:	613b      	str	r3, [r7, #16]
 80042a8:	693b      	ldr	r3, [r7, #16]
 80042aa:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80042ae:	f043 0201 	orr.w	r2, r3, #1
 80042b2:	693b      	ldr	r3, [r7, #16]
 80042b4:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80042b8:	693b      	ldr	r3, [r7, #16]
 80042ba:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80042be:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 80042c2:	693b      	ldr	r3, [r7, #16]
 80042c4:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80042c8:	693b      	ldr	r3, [r7, #16]
 80042ca:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80042ce:	683b      	ldr	r3, [r7, #0]
 80042d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042d2:	021b      	lsls	r3, r3, #8
 80042d4:	431a      	orrs	r2, r3
 80042d6:	693b      	ldr	r3, [r7, #16]
 80042d8:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80042dc:	683b      	ldr	r3, [r7, #0]
 80042de:	695b      	ldr	r3, [r3, #20]
 80042e0:	f003 031f 	and.w	r3, r3, #31
 80042e4:	2201      	movs	r2, #1
 80042e6:	fa02 f303 	lsl.w	r3, r2, r3
 80042ea:	60fb      	str	r3, [r7, #12]
 80042ec:	693b      	ldr	r3, [r7, #16]
 80042ee:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	43db      	mvns	r3, r3
 80042f6:	401a      	ands	r2, r3
 80042f8:	693b      	ldr	r3, [r7, #16]
 80042fa:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 80042fe:	683b      	ldr	r3, [r7, #0]
 8004300:	69db      	ldr	r3, [r3, #28]
 8004302:	2b00      	cmp	r3, #0
 8004304:	d123      	bne.n	800434e <HAL_CAN_ConfigFilter+0xca>
 8004306:	693b      	ldr	r3, [r7, #16]
 8004308:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	43db      	mvns	r3, r3
 8004310:	401a      	ands	r2, r3
 8004312:	693b      	ldr	r3, [r7, #16]
 8004314:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8004318:	683b      	ldr	r3, [r7, #0]
 800431a:	68db      	ldr	r3, [r3, #12]
 800431c:	0419      	lsls	r1, r3, #16
 800431e:	683b      	ldr	r3, [r7, #0]
 8004320:	685b      	ldr	r3, [r3, #4]
 8004322:	b29b      	uxth	r3, r3
 8004324:	683a      	ldr	r2, [r7, #0]
 8004326:	6952      	ldr	r2, [r2, #20]
 8004328:	4319      	orrs	r1, r3
 800432a:	693b      	ldr	r3, [r7, #16]
 800432c:	3248      	adds	r2, #72	@ 0x48
 800432e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8004332:	683b      	ldr	r3, [r7, #0]
 8004334:	689b      	ldr	r3, [r3, #8]
 8004336:	0419      	lsls	r1, r3, #16
 8004338:	683b      	ldr	r3, [r7, #0]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	b29a      	uxth	r2, r3
 800433e:	683b      	ldr	r3, [r7, #0]
 8004340:	695b      	ldr	r3, [r3, #20]
 8004342:	430a      	orrs	r2, r1
 8004344:	6939      	ldr	r1, [r7, #16]
 8004346:	3348      	adds	r3, #72	@ 0x48
 8004348:	00db      	lsls	r3, r3, #3
 800434a:	440b      	add	r3, r1
 800434c:	605a      	str	r2, [r3, #4]
 800434e:	683b      	ldr	r3, [r7, #0]
 8004350:	69db      	ldr	r3, [r3, #28]
 8004352:	2b01      	cmp	r3, #1
 8004354:	d122      	bne.n	800439c <HAL_CAN_ConfigFilter+0x118>
 8004356:	693b      	ldr	r3, [r7, #16]
 8004358:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	431a      	orrs	r2, r3
 8004360:	693b      	ldr	r3, [r7, #16]
 8004362:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8004366:	683b      	ldr	r3, [r7, #0]
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	0419      	lsls	r1, r3, #16
 800436c:	683b      	ldr	r3, [r7, #0]
 800436e:	685b      	ldr	r3, [r3, #4]
 8004370:	b29b      	uxth	r3, r3
 8004372:	683a      	ldr	r2, [r7, #0]
 8004374:	6952      	ldr	r2, [r2, #20]
 8004376:	4319      	orrs	r1, r3
 8004378:	693b      	ldr	r3, [r7, #16]
 800437a:	3248      	adds	r2, #72	@ 0x48
 800437c:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8004380:	683b      	ldr	r3, [r7, #0]
 8004382:	689b      	ldr	r3, [r3, #8]
 8004384:	0419      	lsls	r1, r3, #16
 8004386:	683b      	ldr	r3, [r7, #0]
 8004388:	68db      	ldr	r3, [r3, #12]
 800438a:	b29a      	uxth	r2, r3
 800438c:	683b      	ldr	r3, [r7, #0]
 800438e:	695b      	ldr	r3, [r3, #20]
 8004390:	430a      	orrs	r2, r1
 8004392:	6939      	ldr	r1, [r7, #16]
 8004394:	3348      	adds	r3, #72	@ 0x48
 8004396:	00db      	lsls	r3, r3, #3
 8004398:	440b      	add	r3, r1
 800439a:	605a      	str	r2, [r3, #4]
 800439c:	683b      	ldr	r3, [r7, #0]
 800439e:	699b      	ldr	r3, [r3, #24]
 80043a0:	2b00      	cmp	r3, #0
 80043a2:	d109      	bne.n	80043b8 <HAL_CAN_ConfigFilter+0x134>
 80043a4:	693b      	ldr	r3, [r7, #16]
 80043a6:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80043aa:	68fb      	ldr	r3, [r7, #12]
 80043ac:	43db      	mvns	r3, r3
 80043ae:	401a      	ands	r2, r3
 80043b0:	693b      	ldr	r3, [r7, #16]
 80043b2:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80043b6:	e007      	b.n	80043c8 <HAL_CAN_ConfigFilter+0x144>
 80043b8:	693b      	ldr	r3, [r7, #16]
 80043ba:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	431a      	orrs	r2, r3
 80043c2:	693b      	ldr	r3, [r7, #16]
 80043c4:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80043c8:	683b      	ldr	r3, [r7, #0]
 80043ca:	691b      	ldr	r3, [r3, #16]
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d109      	bne.n	80043e4 <HAL_CAN_ConfigFilter+0x160>
 80043d0:	693b      	ldr	r3, [r7, #16]
 80043d2:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	43db      	mvns	r3, r3
 80043da:	401a      	ands	r2, r3
 80043dc:	693b      	ldr	r3, [r7, #16]
 80043de:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80043e2:	e007      	b.n	80043f4 <HAL_CAN_ConfigFilter+0x170>
 80043e4:	693b      	ldr	r3, [r7, #16]
 80043e6:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 80043ea:	68fb      	ldr	r3, [r7, #12]
 80043ec:	431a      	orrs	r2, r3
 80043ee:	693b      	ldr	r3, [r7, #16]
 80043f0:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80043f4:	683b      	ldr	r3, [r7, #0]
 80043f6:	6a1b      	ldr	r3, [r3, #32]
 80043f8:	2b01      	cmp	r3, #1
 80043fa:	d107      	bne.n	800440c <HAL_CAN_ConfigFilter+0x188>
 80043fc:	693b      	ldr	r3, [r7, #16]
 80043fe:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	431a      	orrs	r2, r3
 8004406:	693b      	ldr	r3, [r7, #16]
 8004408:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800440c:	693b      	ldr	r3, [r7, #16]
 800440e:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8004412:	f023 0201 	bic.w	r2, r3, #1
 8004416:	693b      	ldr	r3, [r7, #16]
 8004418:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800441c:	2300      	movs	r3, #0
 800441e:	e006      	b.n	800442e <HAL_CAN_ConfigFilter+0x1aa>
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004424:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	625a      	str	r2, [r3, #36]	@ 0x24
 800442c:	2301      	movs	r3, #1
 800442e:	4618      	mov	r0, r3
 8004430:	371c      	adds	r7, #28
 8004432:	46bd      	mov	sp, r7
 8004434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004438:	4770      	bx	lr
 800443a:	bf00      	nop
 800443c:	40006400 	.word	0x40006400

08004440 <HAL_CAN_Start>:
 8004440:	b580      	push	{r7, lr}
 8004442:	b084      	sub	sp, #16
 8004444:	af00      	add	r7, sp, #0
 8004446:	6078      	str	r0, [r7, #4]
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800444e:	b2db      	uxtb	r3, r3
 8004450:	2b01      	cmp	r3, #1
 8004452:	d12e      	bne.n	80044b2 <HAL_CAN_Start+0x72>
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	2202      	movs	r2, #2
 8004458:	f883 2020 	strb.w	r2, [r3, #32]
 800445c:	687b      	ldr	r3, [r7, #4]
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	681a      	ldr	r2, [r3, #0]
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	f022 0201 	bic.w	r2, r2, #1
 800446a:	601a      	str	r2, [r3, #0]
 800446c:	f7ff f9f6 	bl	800385c <HAL_GetTick>
 8004470:	60f8      	str	r0, [r7, #12]
 8004472:	e012      	b.n	800449a <HAL_CAN_Start+0x5a>
 8004474:	f7ff f9f2 	bl	800385c <HAL_GetTick>
 8004478:	4602      	mov	r2, r0
 800447a:	68fb      	ldr	r3, [r7, #12]
 800447c:	1ad3      	subs	r3, r2, r3
 800447e:	2b0a      	cmp	r3, #10
 8004480:	d90b      	bls.n	800449a <HAL_CAN_Start+0x5a>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004486:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	625a      	str	r2, [r3, #36]	@ 0x24
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	2205      	movs	r2, #5
 8004492:	f883 2020 	strb.w	r2, [r3, #32]
 8004496:	2301      	movs	r3, #1
 8004498:	e012      	b.n	80044c0 <HAL_CAN_Start+0x80>
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	685b      	ldr	r3, [r3, #4]
 80044a0:	f003 0301 	and.w	r3, r3, #1
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d1e5      	bne.n	8004474 <HAL_CAN_Start+0x34>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	2200      	movs	r2, #0
 80044ac:	625a      	str	r2, [r3, #36]	@ 0x24
 80044ae:	2300      	movs	r3, #0
 80044b0:	e006      	b.n	80044c0 <HAL_CAN_Start+0x80>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044b6:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80044be:	2301      	movs	r3, #1
 80044c0:	4618      	mov	r0, r3
 80044c2:	3710      	adds	r7, #16
 80044c4:	46bd      	mov	sp, r7
 80044c6:	bd80      	pop	{r7, pc}

080044c8 <HAL_CAN_AddTxMessage>:
 80044c8:	b480      	push	{r7}
 80044ca:	b089      	sub	sp, #36	@ 0x24
 80044cc:	af00      	add	r7, sp, #0
 80044ce:	60f8      	str	r0, [r7, #12]
 80044d0:	60b9      	str	r1, [r7, #8]
 80044d2:	607a      	str	r2, [r7, #4]
 80044d4:	603b      	str	r3, [r7, #0]
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80044dc:	77fb      	strb	r3, [r7, #31]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	689b      	ldr	r3, [r3, #8]
 80044e4:	61bb      	str	r3, [r7, #24]
 80044e6:	7ffb      	ldrb	r3, [r7, #31]
 80044e8:	2b01      	cmp	r3, #1
 80044ea:	d003      	beq.n	80044f4 <HAL_CAN_AddTxMessage+0x2c>
 80044ec:	7ffb      	ldrb	r3, [r7, #31]
 80044ee:	2b02      	cmp	r3, #2
 80044f0:	f040 80ad 	bne.w	800464e <HAL_CAN_AddTxMessage+0x186>
 80044f4:	69bb      	ldr	r3, [r7, #24]
 80044f6:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d10a      	bne.n	8004514 <HAL_CAN_AddTxMessage+0x4c>
 80044fe:	69bb      	ldr	r3, [r7, #24]
 8004500:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004504:	2b00      	cmp	r3, #0
 8004506:	d105      	bne.n	8004514 <HAL_CAN_AddTxMessage+0x4c>
 8004508:	69bb      	ldr	r3, [r7, #24]
 800450a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800450e:	2b00      	cmp	r3, #0
 8004510:	f000 8095 	beq.w	800463e <HAL_CAN_AddTxMessage+0x176>
 8004514:	69bb      	ldr	r3, [r7, #24]
 8004516:	0e1b      	lsrs	r3, r3, #24
 8004518:	f003 0303 	and.w	r3, r3, #3
 800451c:	617b      	str	r3, [r7, #20]
 800451e:	2201      	movs	r2, #1
 8004520:	697b      	ldr	r3, [r7, #20]
 8004522:	409a      	lsls	r2, r3
 8004524:	683b      	ldr	r3, [r7, #0]
 8004526:	601a      	str	r2, [r3, #0]
 8004528:	68bb      	ldr	r3, [r7, #8]
 800452a:	689b      	ldr	r3, [r3, #8]
 800452c:	2b00      	cmp	r3, #0
 800452e:	d10d      	bne.n	800454c <HAL_CAN_AddTxMessage+0x84>
 8004530:	68bb      	ldr	r3, [r7, #8]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	055a      	lsls	r2, r3, #21
 8004536:	68bb      	ldr	r3, [r7, #8]
 8004538:	68db      	ldr	r3, [r3, #12]
 800453a:	68f9      	ldr	r1, [r7, #12]
 800453c:	6809      	ldr	r1, [r1, #0]
 800453e:	431a      	orrs	r2, r3
 8004540:	697b      	ldr	r3, [r7, #20]
 8004542:	3318      	adds	r3, #24
 8004544:	011b      	lsls	r3, r3, #4
 8004546:	440b      	add	r3, r1
 8004548:	601a      	str	r2, [r3, #0]
 800454a:	e00f      	b.n	800456c <HAL_CAN_AddTxMessage+0xa4>
 800454c:	68bb      	ldr	r3, [r7, #8]
 800454e:	685b      	ldr	r3, [r3, #4]
 8004550:	00da      	lsls	r2, r3, #3
 8004552:	68bb      	ldr	r3, [r7, #8]
 8004554:	689b      	ldr	r3, [r3, #8]
 8004556:	431a      	orrs	r2, r3
 8004558:	68bb      	ldr	r3, [r7, #8]
 800455a:	68db      	ldr	r3, [r3, #12]
 800455c:	68f9      	ldr	r1, [r7, #12]
 800455e:	6809      	ldr	r1, [r1, #0]
 8004560:	431a      	orrs	r2, r3
 8004562:	697b      	ldr	r3, [r7, #20]
 8004564:	3318      	adds	r3, #24
 8004566:	011b      	lsls	r3, r3, #4
 8004568:	440b      	add	r3, r1
 800456a:	601a      	str	r2, [r3, #0]
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	6819      	ldr	r1, [r3, #0]
 8004570:	68bb      	ldr	r3, [r7, #8]
 8004572:	691a      	ldr	r2, [r3, #16]
 8004574:	697b      	ldr	r3, [r7, #20]
 8004576:	3318      	adds	r3, #24
 8004578:	011b      	lsls	r3, r3, #4
 800457a:	440b      	add	r3, r1
 800457c:	3304      	adds	r3, #4
 800457e:	601a      	str	r2, [r3, #0]
 8004580:	68bb      	ldr	r3, [r7, #8]
 8004582:	7d1b      	ldrb	r3, [r3, #20]
 8004584:	2b01      	cmp	r3, #1
 8004586:	d111      	bne.n	80045ac <HAL_CAN_AddTxMessage+0xe4>
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	681a      	ldr	r2, [r3, #0]
 800458c:	697b      	ldr	r3, [r7, #20]
 800458e:	3318      	adds	r3, #24
 8004590:	011b      	lsls	r3, r3, #4
 8004592:	4413      	add	r3, r2
 8004594:	3304      	adds	r3, #4
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	68fa      	ldr	r2, [r7, #12]
 800459a:	6811      	ldr	r1, [r2, #0]
 800459c:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80045a0:	697b      	ldr	r3, [r7, #20]
 80045a2:	3318      	adds	r3, #24
 80045a4:	011b      	lsls	r3, r3, #4
 80045a6:	440b      	add	r3, r1
 80045a8:	3304      	adds	r3, #4
 80045aa:	601a      	str	r2, [r3, #0]
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	3307      	adds	r3, #7
 80045b0:	781b      	ldrb	r3, [r3, #0]
 80045b2:	061a      	lsls	r2, r3, #24
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	3306      	adds	r3, #6
 80045b8:	781b      	ldrb	r3, [r3, #0]
 80045ba:	041b      	lsls	r3, r3, #16
 80045bc:	431a      	orrs	r2, r3
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	3305      	adds	r3, #5
 80045c2:	781b      	ldrb	r3, [r3, #0]
 80045c4:	021b      	lsls	r3, r3, #8
 80045c6:	4313      	orrs	r3, r2
 80045c8:	687a      	ldr	r2, [r7, #4]
 80045ca:	3204      	adds	r2, #4
 80045cc:	7812      	ldrb	r2, [r2, #0]
 80045ce:	4610      	mov	r0, r2
 80045d0:	68fa      	ldr	r2, [r7, #12]
 80045d2:	6811      	ldr	r1, [r2, #0]
 80045d4:	ea43 0200 	orr.w	r2, r3, r0
 80045d8:	697b      	ldr	r3, [r7, #20]
 80045da:	011b      	lsls	r3, r3, #4
 80045dc:	440b      	add	r3, r1
 80045de:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 80045e2:	601a      	str	r2, [r3, #0]
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	3303      	adds	r3, #3
 80045e8:	781b      	ldrb	r3, [r3, #0]
 80045ea:	061a      	lsls	r2, r3, #24
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	3302      	adds	r3, #2
 80045f0:	781b      	ldrb	r3, [r3, #0]
 80045f2:	041b      	lsls	r3, r3, #16
 80045f4:	431a      	orrs	r2, r3
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	3301      	adds	r3, #1
 80045fa:	781b      	ldrb	r3, [r3, #0]
 80045fc:	021b      	lsls	r3, r3, #8
 80045fe:	4313      	orrs	r3, r2
 8004600:	687a      	ldr	r2, [r7, #4]
 8004602:	7812      	ldrb	r2, [r2, #0]
 8004604:	4610      	mov	r0, r2
 8004606:	68fa      	ldr	r2, [r7, #12]
 8004608:	6811      	ldr	r1, [r2, #0]
 800460a:	ea43 0200 	orr.w	r2, r3, r0
 800460e:	697b      	ldr	r3, [r7, #20]
 8004610:	011b      	lsls	r3, r3, #4
 8004612:	440b      	add	r3, r1
 8004614:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8004618:	601a      	str	r2, [r3, #0]
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	681a      	ldr	r2, [r3, #0]
 800461e:	697b      	ldr	r3, [r7, #20]
 8004620:	3318      	adds	r3, #24
 8004622:	011b      	lsls	r3, r3, #4
 8004624:	4413      	add	r3, r2
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	68fa      	ldr	r2, [r7, #12]
 800462a:	6811      	ldr	r1, [r2, #0]
 800462c:	f043 0201 	orr.w	r2, r3, #1
 8004630:	697b      	ldr	r3, [r7, #20]
 8004632:	3318      	adds	r3, #24
 8004634:	011b      	lsls	r3, r3, #4
 8004636:	440b      	add	r3, r1
 8004638:	601a      	str	r2, [r3, #0]
 800463a:	2300      	movs	r3, #0
 800463c:	e00e      	b.n	800465c <HAL_CAN_AddTxMessage+0x194>
 800463e:	68fb      	ldr	r3, [r7, #12]
 8004640:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004642:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	625a      	str	r2, [r3, #36]	@ 0x24
 800464a:	2301      	movs	r3, #1
 800464c:	e006      	b.n	800465c <HAL_CAN_AddTxMessage+0x194>
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004652:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	625a      	str	r2, [r3, #36]	@ 0x24
 800465a:	2301      	movs	r3, #1
 800465c:	4618      	mov	r0, r3
 800465e:	3724      	adds	r7, #36	@ 0x24
 8004660:	46bd      	mov	sp, r7
 8004662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004666:	4770      	bx	lr

08004668 <HAL_CAN_GetRxMessage>:
 8004668:	b480      	push	{r7}
 800466a:	b087      	sub	sp, #28
 800466c:	af00      	add	r7, sp, #0
 800466e:	60f8      	str	r0, [r7, #12]
 8004670:	60b9      	str	r1, [r7, #8]
 8004672:	607a      	str	r2, [r7, #4]
 8004674:	603b      	str	r3, [r7, #0]
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	f893 3020 	ldrb.w	r3, [r3, #32]
 800467c:	75fb      	strb	r3, [r7, #23]
 800467e:	7dfb      	ldrb	r3, [r7, #23]
 8004680:	2b01      	cmp	r3, #1
 8004682:	d003      	beq.n	800468c <HAL_CAN_GetRxMessage+0x24>
 8004684:	7dfb      	ldrb	r3, [r7, #23]
 8004686:	2b02      	cmp	r3, #2
 8004688:	f040 8103 	bne.w	8004892 <HAL_CAN_GetRxMessage+0x22a>
 800468c:	68bb      	ldr	r3, [r7, #8]
 800468e:	2b00      	cmp	r3, #0
 8004690:	d10e      	bne.n	80046b0 <HAL_CAN_GetRxMessage+0x48>
 8004692:	68fb      	ldr	r3, [r7, #12]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	68db      	ldr	r3, [r3, #12]
 8004698:	f003 0303 	and.w	r3, r3, #3
 800469c:	2b00      	cmp	r3, #0
 800469e:	d116      	bne.n	80046ce <HAL_CAN_GetRxMessage+0x66>
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046a4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80046ac:	2301      	movs	r3, #1
 80046ae:	e0f7      	b.n	80048a0 <HAL_CAN_GetRxMessage+0x238>
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	691b      	ldr	r3, [r3, #16]
 80046b6:	f003 0303 	and.w	r3, r3, #3
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d107      	bne.n	80046ce <HAL_CAN_GetRxMessage+0x66>
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046c2:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	625a      	str	r2, [r3, #36]	@ 0x24
 80046ca:	2301      	movs	r3, #1
 80046cc:	e0e8      	b.n	80048a0 <HAL_CAN_GetRxMessage+0x238>
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	681a      	ldr	r2, [r3, #0]
 80046d2:	68bb      	ldr	r3, [r7, #8]
 80046d4:	331b      	adds	r3, #27
 80046d6:	011b      	lsls	r3, r3, #4
 80046d8:	4413      	add	r3, r2
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	f003 0204 	and.w	r2, r3, #4
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	609a      	str	r2, [r3, #8]
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	689b      	ldr	r3, [r3, #8]
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d10c      	bne.n	8004706 <HAL_CAN_GetRxMessage+0x9e>
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681a      	ldr	r2, [r3, #0]
 80046f0:	68bb      	ldr	r3, [r7, #8]
 80046f2:	331b      	adds	r3, #27
 80046f4:	011b      	lsls	r3, r3, #4
 80046f6:	4413      	add	r3, r2
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	0d5b      	lsrs	r3, r3, #21
 80046fc:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	601a      	str	r2, [r3, #0]
 8004704:	e00b      	b.n	800471e <HAL_CAN_GetRxMessage+0xb6>
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	681a      	ldr	r2, [r3, #0]
 800470a:	68bb      	ldr	r3, [r7, #8]
 800470c:	331b      	adds	r3, #27
 800470e:	011b      	lsls	r3, r3, #4
 8004710:	4413      	add	r3, r2
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	08db      	lsrs	r3, r3, #3
 8004716:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	605a      	str	r2, [r3, #4]
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	681a      	ldr	r2, [r3, #0]
 8004722:	68bb      	ldr	r3, [r7, #8]
 8004724:	331b      	adds	r3, #27
 8004726:	011b      	lsls	r3, r3, #4
 8004728:	4413      	add	r3, r2
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	f003 0202 	and.w	r2, r3, #2
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	60da      	str	r2, [r3, #12]
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	681a      	ldr	r2, [r3, #0]
 8004738:	68bb      	ldr	r3, [r7, #8]
 800473a:	331b      	adds	r3, #27
 800473c:	011b      	lsls	r3, r3, #4
 800473e:	4413      	add	r3, r2
 8004740:	3304      	adds	r3, #4
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	f003 0308 	and.w	r3, r3, #8
 8004748:	2b00      	cmp	r3, #0
 800474a:	d003      	beq.n	8004754 <HAL_CAN_GetRxMessage+0xec>
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	2208      	movs	r2, #8
 8004750:	611a      	str	r2, [r3, #16]
 8004752:	e00b      	b.n	800476c <HAL_CAN_GetRxMessage+0x104>
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	681a      	ldr	r2, [r3, #0]
 8004758:	68bb      	ldr	r3, [r7, #8]
 800475a:	331b      	adds	r3, #27
 800475c:	011b      	lsls	r3, r3, #4
 800475e:	4413      	add	r3, r2
 8004760:	3304      	adds	r3, #4
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	f003 020f 	and.w	r2, r3, #15
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	611a      	str	r2, [r3, #16]
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	681a      	ldr	r2, [r3, #0]
 8004770:	68bb      	ldr	r3, [r7, #8]
 8004772:	331b      	adds	r3, #27
 8004774:	011b      	lsls	r3, r3, #4
 8004776:	4413      	add	r3, r2
 8004778:	3304      	adds	r3, #4
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	0a1b      	lsrs	r3, r3, #8
 800477e:	b2da      	uxtb	r2, r3
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	619a      	str	r2, [r3, #24]
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	681a      	ldr	r2, [r3, #0]
 8004788:	68bb      	ldr	r3, [r7, #8]
 800478a:	331b      	adds	r3, #27
 800478c:	011b      	lsls	r3, r3, #4
 800478e:	4413      	add	r3, r2
 8004790:	3304      	adds	r3, #4
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	0c1b      	lsrs	r3, r3, #16
 8004796:	b29a      	uxth	r2, r3
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	615a      	str	r2, [r3, #20]
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	681a      	ldr	r2, [r3, #0]
 80047a0:	68bb      	ldr	r3, [r7, #8]
 80047a2:	011b      	lsls	r3, r3, #4
 80047a4:	4413      	add	r3, r2
 80047a6:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	b2da      	uxtb	r2, r3
 80047ae:	683b      	ldr	r3, [r7, #0]
 80047b0:	701a      	strb	r2, [r3, #0]
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	681a      	ldr	r2, [r3, #0]
 80047b6:	68bb      	ldr	r3, [r7, #8]
 80047b8:	011b      	lsls	r3, r3, #4
 80047ba:	4413      	add	r3, r2
 80047bc:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	0a1a      	lsrs	r2, r3, #8
 80047c4:	683b      	ldr	r3, [r7, #0]
 80047c6:	3301      	adds	r3, #1
 80047c8:	b2d2      	uxtb	r2, r2
 80047ca:	701a      	strb	r2, [r3, #0]
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	681a      	ldr	r2, [r3, #0]
 80047d0:	68bb      	ldr	r3, [r7, #8]
 80047d2:	011b      	lsls	r3, r3, #4
 80047d4:	4413      	add	r3, r2
 80047d6:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	0c1a      	lsrs	r2, r3, #16
 80047de:	683b      	ldr	r3, [r7, #0]
 80047e0:	3302      	adds	r3, #2
 80047e2:	b2d2      	uxtb	r2, r2
 80047e4:	701a      	strb	r2, [r3, #0]
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	681a      	ldr	r2, [r3, #0]
 80047ea:	68bb      	ldr	r3, [r7, #8]
 80047ec:	011b      	lsls	r3, r3, #4
 80047ee:	4413      	add	r3, r2
 80047f0:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	0e1a      	lsrs	r2, r3, #24
 80047f8:	683b      	ldr	r3, [r7, #0]
 80047fa:	3303      	adds	r3, #3
 80047fc:	b2d2      	uxtb	r2, r2
 80047fe:	701a      	strb	r2, [r3, #0]
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	681a      	ldr	r2, [r3, #0]
 8004804:	68bb      	ldr	r3, [r7, #8]
 8004806:	011b      	lsls	r3, r3, #4
 8004808:	4413      	add	r3, r2
 800480a:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800480e:	681a      	ldr	r2, [r3, #0]
 8004810:	683b      	ldr	r3, [r7, #0]
 8004812:	3304      	adds	r3, #4
 8004814:	b2d2      	uxtb	r2, r2
 8004816:	701a      	strb	r2, [r3, #0]
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	681a      	ldr	r2, [r3, #0]
 800481c:	68bb      	ldr	r3, [r7, #8]
 800481e:	011b      	lsls	r3, r3, #4
 8004820:	4413      	add	r3, r2
 8004822:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	0a1a      	lsrs	r2, r3, #8
 800482a:	683b      	ldr	r3, [r7, #0]
 800482c:	3305      	adds	r3, #5
 800482e:	b2d2      	uxtb	r2, r2
 8004830:	701a      	strb	r2, [r3, #0]
 8004832:	68fb      	ldr	r3, [r7, #12]
 8004834:	681a      	ldr	r2, [r3, #0]
 8004836:	68bb      	ldr	r3, [r7, #8]
 8004838:	011b      	lsls	r3, r3, #4
 800483a:	4413      	add	r3, r2
 800483c:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	0c1a      	lsrs	r2, r3, #16
 8004844:	683b      	ldr	r3, [r7, #0]
 8004846:	3306      	adds	r3, #6
 8004848:	b2d2      	uxtb	r2, r2
 800484a:	701a      	strb	r2, [r3, #0]
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	68bb      	ldr	r3, [r7, #8]
 8004852:	011b      	lsls	r3, r3, #4
 8004854:	4413      	add	r3, r2
 8004856:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	0e1a      	lsrs	r2, r3, #24
 800485e:	683b      	ldr	r3, [r7, #0]
 8004860:	3307      	adds	r3, #7
 8004862:	b2d2      	uxtb	r2, r2
 8004864:	701a      	strb	r2, [r3, #0]
 8004866:	68bb      	ldr	r3, [r7, #8]
 8004868:	2b00      	cmp	r3, #0
 800486a:	d108      	bne.n	800487e <HAL_CAN_GetRxMessage+0x216>
 800486c:	68fb      	ldr	r3, [r7, #12]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	68da      	ldr	r2, [r3, #12]
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	f042 0220 	orr.w	r2, r2, #32
 800487a:	60da      	str	r2, [r3, #12]
 800487c:	e007      	b.n	800488e <HAL_CAN_GetRxMessage+0x226>
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	691a      	ldr	r2, [r3, #16]
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f042 0220 	orr.w	r2, r2, #32
 800488c:	611a      	str	r2, [r3, #16]
 800488e:	2300      	movs	r3, #0
 8004890:	e006      	b.n	80048a0 <HAL_CAN_GetRxMessage+0x238>
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004896:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800489a:	68fb      	ldr	r3, [r7, #12]
 800489c:	625a      	str	r2, [r3, #36]	@ 0x24
 800489e:	2301      	movs	r3, #1
 80048a0:	4618      	mov	r0, r3
 80048a2:	371c      	adds	r7, #28
 80048a4:	46bd      	mov	sp, r7
 80048a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048aa:	4770      	bx	lr

080048ac <HAL_CAN_ActivateNotification>:
 80048ac:	b480      	push	{r7}
 80048ae:	b085      	sub	sp, #20
 80048b0:	af00      	add	r7, sp, #0
 80048b2:	6078      	str	r0, [r7, #4]
 80048b4:	6039      	str	r1, [r7, #0]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80048bc:	73fb      	strb	r3, [r7, #15]
 80048be:	7bfb      	ldrb	r3, [r7, #15]
 80048c0:	2b01      	cmp	r3, #1
 80048c2:	d002      	beq.n	80048ca <HAL_CAN_ActivateNotification+0x1e>
 80048c4:	7bfb      	ldrb	r3, [r7, #15]
 80048c6:	2b02      	cmp	r3, #2
 80048c8:	d109      	bne.n	80048de <HAL_CAN_ActivateNotification+0x32>
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	6959      	ldr	r1, [r3, #20]
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	683a      	ldr	r2, [r7, #0]
 80048d6:	430a      	orrs	r2, r1
 80048d8:	615a      	str	r2, [r3, #20]
 80048da:	2300      	movs	r3, #0
 80048dc:	e006      	b.n	80048ec <HAL_CAN_ActivateNotification+0x40>
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048e2:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	625a      	str	r2, [r3, #36]	@ 0x24
 80048ea:	2301      	movs	r3, #1
 80048ec:	4618      	mov	r0, r3
 80048ee:	3714      	adds	r7, #20
 80048f0:	46bd      	mov	sp, r7
 80048f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048f6:	4770      	bx	lr

080048f8 <__NVIC_SetPriorityGrouping>:
 80048f8:	b480      	push	{r7}
 80048fa:	b085      	sub	sp, #20
 80048fc:	af00      	add	r7, sp, #0
 80048fe:	6078      	str	r0, [r7, #4]
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	f003 0307 	and.w	r3, r3, #7
 8004906:	60fb      	str	r3, [r7, #12]
 8004908:	4b0c      	ldr	r3, [pc, #48]	@ (800493c <__NVIC_SetPriorityGrouping+0x44>)
 800490a:	68db      	ldr	r3, [r3, #12]
 800490c:	60bb      	str	r3, [r7, #8]
 800490e:	68ba      	ldr	r2, [r7, #8]
 8004910:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004914:	4013      	ands	r3, r2
 8004916:	60bb      	str	r3, [r7, #8]
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	021a      	lsls	r2, r3, #8
 800491c:	68bb      	ldr	r3, [r7, #8]
 800491e:	4313      	orrs	r3, r2
 8004920:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004924:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004928:	60bb      	str	r3, [r7, #8]
 800492a:	4a04      	ldr	r2, [pc, #16]	@ (800493c <__NVIC_SetPriorityGrouping+0x44>)
 800492c:	68bb      	ldr	r3, [r7, #8]
 800492e:	60d3      	str	r3, [r2, #12]
 8004930:	bf00      	nop
 8004932:	3714      	adds	r7, #20
 8004934:	46bd      	mov	sp, r7
 8004936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493a:	4770      	bx	lr
 800493c:	e000ed00 	.word	0xe000ed00

08004940 <__NVIC_GetPriorityGrouping>:
 8004940:	b480      	push	{r7}
 8004942:	af00      	add	r7, sp, #0
 8004944:	4b04      	ldr	r3, [pc, #16]	@ (8004958 <__NVIC_GetPriorityGrouping+0x18>)
 8004946:	68db      	ldr	r3, [r3, #12]
 8004948:	0a1b      	lsrs	r3, r3, #8
 800494a:	f003 0307 	and.w	r3, r3, #7
 800494e:	4618      	mov	r0, r3
 8004950:	46bd      	mov	sp, r7
 8004952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004956:	4770      	bx	lr
 8004958:	e000ed00 	.word	0xe000ed00

0800495c <__NVIC_EnableIRQ>:
 800495c:	b480      	push	{r7}
 800495e:	b083      	sub	sp, #12
 8004960:	af00      	add	r7, sp, #0
 8004962:	4603      	mov	r3, r0
 8004964:	71fb      	strb	r3, [r7, #7]
 8004966:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800496a:	2b00      	cmp	r3, #0
 800496c:	db0b      	blt.n	8004986 <__NVIC_EnableIRQ+0x2a>
 800496e:	79fb      	ldrb	r3, [r7, #7]
 8004970:	f003 021f 	and.w	r2, r3, #31
 8004974:	4907      	ldr	r1, [pc, #28]	@ (8004994 <__NVIC_EnableIRQ+0x38>)
 8004976:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800497a:	095b      	lsrs	r3, r3, #5
 800497c:	2001      	movs	r0, #1
 800497e:	fa00 f202 	lsl.w	r2, r0, r2
 8004982:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004986:	bf00      	nop
 8004988:	370c      	adds	r7, #12
 800498a:	46bd      	mov	sp, r7
 800498c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004990:	4770      	bx	lr
 8004992:	bf00      	nop
 8004994:	e000e100 	.word	0xe000e100

08004998 <__NVIC_SetPriority>:
 8004998:	b480      	push	{r7}
 800499a:	b083      	sub	sp, #12
 800499c:	af00      	add	r7, sp, #0
 800499e:	4603      	mov	r3, r0
 80049a0:	6039      	str	r1, [r7, #0]
 80049a2:	71fb      	strb	r3, [r7, #7]
 80049a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	db0a      	blt.n	80049c2 <__NVIC_SetPriority+0x2a>
 80049ac:	683b      	ldr	r3, [r7, #0]
 80049ae:	b2da      	uxtb	r2, r3
 80049b0:	490c      	ldr	r1, [pc, #48]	@ (80049e4 <__NVIC_SetPriority+0x4c>)
 80049b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049b6:	0112      	lsls	r2, r2, #4
 80049b8:	b2d2      	uxtb	r2, r2
 80049ba:	440b      	add	r3, r1
 80049bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80049c0:	e00a      	b.n	80049d8 <__NVIC_SetPriority+0x40>
 80049c2:	683b      	ldr	r3, [r7, #0]
 80049c4:	b2da      	uxtb	r2, r3
 80049c6:	4908      	ldr	r1, [pc, #32]	@ (80049e8 <__NVIC_SetPriority+0x50>)
 80049c8:	79fb      	ldrb	r3, [r7, #7]
 80049ca:	f003 030f 	and.w	r3, r3, #15
 80049ce:	3b04      	subs	r3, #4
 80049d0:	0112      	lsls	r2, r2, #4
 80049d2:	b2d2      	uxtb	r2, r2
 80049d4:	440b      	add	r3, r1
 80049d6:	761a      	strb	r2, [r3, #24]
 80049d8:	bf00      	nop
 80049da:	370c      	adds	r7, #12
 80049dc:	46bd      	mov	sp, r7
 80049de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049e2:	4770      	bx	lr
 80049e4:	e000e100 	.word	0xe000e100
 80049e8:	e000ed00 	.word	0xe000ed00

080049ec <NVIC_EncodePriority>:
 80049ec:	b480      	push	{r7}
 80049ee:	b089      	sub	sp, #36	@ 0x24
 80049f0:	af00      	add	r7, sp, #0
 80049f2:	60f8      	str	r0, [r7, #12]
 80049f4:	60b9      	str	r1, [r7, #8]
 80049f6:	607a      	str	r2, [r7, #4]
 80049f8:	68fb      	ldr	r3, [r7, #12]
 80049fa:	f003 0307 	and.w	r3, r3, #7
 80049fe:	61fb      	str	r3, [r7, #28]
 8004a00:	69fb      	ldr	r3, [r7, #28]
 8004a02:	f1c3 0307 	rsb	r3, r3, #7
 8004a06:	2b04      	cmp	r3, #4
 8004a08:	bf28      	it	cs
 8004a0a:	2304      	movcs	r3, #4
 8004a0c:	61bb      	str	r3, [r7, #24]
 8004a0e:	69fb      	ldr	r3, [r7, #28]
 8004a10:	3304      	adds	r3, #4
 8004a12:	2b06      	cmp	r3, #6
 8004a14:	d902      	bls.n	8004a1c <NVIC_EncodePriority+0x30>
 8004a16:	69fb      	ldr	r3, [r7, #28]
 8004a18:	3b03      	subs	r3, #3
 8004a1a:	e000      	b.n	8004a1e <NVIC_EncodePriority+0x32>
 8004a1c:	2300      	movs	r3, #0
 8004a1e:	617b      	str	r3, [r7, #20]
 8004a20:	f04f 32ff 	mov.w	r2, #4294967295
 8004a24:	69bb      	ldr	r3, [r7, #24]
 8004a26:	fa02 f303 	lsl.w	r3, r2, r3
 8004a2a:	43da      	mvns	r2, r3
 8004a2c:	68bb      	ldr	r3, [r7, #8]
 8004a2e:	401a      	ands	r2, r3
 8004a30:	697b      	ldr	r3, [r7, #20]
 8004a32:	409a      	lsls	r2, r3
 8004a34:	f04f 31ff 	mov.w	r1, #4294967295
 8004a38:	697b      	ldr	r3, [r7, #20]
 8004a3a:	fa01 f303 	lsl.w	r3, r1, r3
 8004a3e:	43d9      	mvns	r1, r3
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	400b      	ands	r3, r1
 8004a44:	4313      	orrs	r3, r2
 8004a46:	4618      	mov	r0, r3
 8004a48:	3724      	adds	r7, #36	@ 0x24
 8004a4a:	46bd      	mov	sp, r7
 8004a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a50:	4770      	bx	lr

08004a52 <HAL_NVIC_SetPriorityGrouping>:
 8004a52:	b580      	push	{r7, lr}
 8004a54:	b082      	sub	sp, #8
 8004a56:	af00      	add	r7, sp, #0
 8004a58:	6078      	str	r0, [r7, #4]
 8004a5a:	6878      	ldr	r0, [r7, #4]
 8004a5c:	f7ff ff4c 	bl	80048f8 <__NVIC_SetPriorityGrouping>
 8004a60:	bf00      	nop
 8004a62:	3708      	adds	r7, #8
 8004a64:	46bd      	mov	sp, r7
 8004a66:	bd80      	pop	{r7, pc}

08004a68 <HAL_NVIC_SetPriority>:
 8004a68:	b580      	push	{r7, lr}
 8004a6a:	b086      	sub	sp, #24
 8004a6c:	af00      	add	r7, sp, #0
 8004a6e:	4603      	mov	r3, r0
 8004a70:	60b9      	str	r1, [r7, #8]
 8004a72:	607a      	str	r2, [r7, #4]
 8004a74:	73fb      	strb	r3, [r7, #15]
 8004a76:	2300      	movs	r3, #0
 8004a78:	617b      	str	r3, [r7, #20]
 8004a7a:	f7ff ff61 	bl	8004940 <__NVIC_GetPriorityGrouping>
 8004a7e:	6178      	str	r0, [r7, #20]
 8004a80:	687a      	ldr	r2, [r7, #4]
 8004a82:	68b9      	ldr	r1, [r7, #8]
 8004a84:	6978      	ldr	r0, [r7, #20]
 8004a86:	f7ff ffb1 	bl	80049ec <NVIC_EncodePriority>
 8004a8a:	4602      	mov	r2, r0
 8004a8c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004a90:	4611      	mov	r1, r2
 8004a92:	4618      	mov	r0, r3
 8004a94:	f7ff ff80 	bl	8004998 <__NVIC_SetPriority>
 8004a98:	bf00      	nop
 8004a9a:	3718      	adds	r7, #24
 8004a9c:	46bd      	mov	sp, r7
 8004a9e:	bd80      	pop	{r7, pc}

08004aa0 <HAL_NVIC_EnableIRQ>:
 8004aa0:	b580      	push	{r7, lr}
 8004aa2:	b082      	sub	sp, #8
 8004aa4:	af00      	add	r7, sp, #0
 8004aa6:	4603      	mov	r3, r0
 8004aa8:	71fb      	strb	r3, [r7, #7]
 8004aaa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004aae:	4618      	mov	r0, r3
 8004ab0:	f7ff ff54 	bl	800495c <__NVIC_EnableIRQ>
 8004ab4:	bf00      	nop
 8004ab6:	3708      	adds	r7, #8
 8004ab8:	46bd      	mov	sp, r7
 8004aba:	bd80      	pop	{r7, pc}

08004abc <HAL_DMA_Init>:
 8004abc:	b580      	push	{r7, lr}
 8004abe:	b086      	sub	sp, #24
 8004ac0:	af00      	add	r7, sp, #0
 8004ac2:	6078      	str	r0, [r7, #4]
 8004ac4:	2300      	movs	r3, #0
 8004ac6:	617b      	str	r3, [r7, #20]
 8004ac8:	f7fe fec8 	bl	800385c <HAL_GetTick>
 8004acc:	6138      	str	r0, [r7, #16]
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d101      	bne.n	8004ad8 <HAL_DMA_Init+0x1c>
 8004ad4:	2301      	movs	r3, #1
 8004ad6:	e099      	b.n	8004c0c <HAL_DMA_Init+0x150>
 8004ad8:	687b      	ldr	r3, [r7, #4]
 8004ada:	2202      	movs	r2, #2
 8004adc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	681a      	ldr	r2, [r3, #0]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	f022 0201 	bic.w	r2, r2, #1
 8004af6:	601a      	str	r2, [r3, #0]
 8004af8:	e00f      	b.n	8004b1a <HAL_DMA_Init+0x5e>
 8004afa:	f7fe feaf 	bl	800385c <HAL_GetTick>
 8004afe:	4602      	mov	r2, r0
 8004b00:	693b      	ldr	r3, [r7, #16]
 8004b02:	1ad3      	subs	r3, r2, r3
 8004b04:	2b05      	cmp	r3, #5
 8004b06:	d908      	bls.n	8004b1a <HAL_DMA_Init+0x5e>
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	2220      	movs	r2, #32
 8004b0c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	2203      	movs	r2, #3
 8004b12:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004b16:	2303      	movs	r3, #3
 8004b18:	e078      	b.n	8004c0c <HAL_DMA_Init+0x150>
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	f003 0301 	and.w	r3, r3, #1
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d1e8      	bne.n	8004afa <HAL_DMA_Init+0x3e>
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	681b      	ldr	r3, [r3, #0]
 8004b2e:	617b      	str	r3, [r7, #20]
 8004b30:	697a      	ldr	r2, [r7, #20]
 8004b32:	4b38      	ldr	r3, [pc, #224]	@ (8004c14 <HAL_DMA_Init+0x158>)
 8004b34:	4013      	ands	r3, r2
 8004b36:	617b      	str	r3, [r7, #20]
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	685a      	ldr	r2, [r3, #4]
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	689b      	ldr	r3, [r3, #8]
 8004b40:	431a      	orrs	r2, r3
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	68db      	ldr	r3, [r3, #12]
 8004b46:	431a      	orrs	r2, r3
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	691b      	ldr	r3, [r3, #16]
 8004b4c:	431a      	orrs	r2, r3
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	695b      	ldr	r3, [r3, #20]
 8004b52:	431a      	orrs	r2, r3
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	699b      	ldr	r3, [r3, #24]
 8004b58:	431a      	orrs	r2, r3
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	69db      	ldr	r3, [r3, #28]
 8004b5e:	431a      	orrs	r2, r3
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	6a1b      	ldr	r3, [r3, #32]
 8004b64:	4313      	orrs	r3, r2
 8004b66:	697a      	ldr	r2, [r7, #20]
 8004b68:	4313      	orrs	r3, r2
 8004b6a:	617b      	str	r3, [r7, #20]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b70:	2b04      	cmp	r3, #4
 8004b72:	d107      	bne.n	8004b84 <HAL_DMA_Init+0xc8>
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004b7c:	4313      	orrs	r3, r2
 8004b7e:	697a      	ldr	r2, [r7, #20]
 8004b80:	4313      	orrs	r3, r2
 8004b82:	617b      	str	r3, [r7, #20]
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	697a      	ldr	r2, [r7, #20]
 8004b8a:	601a      	str	r2, [r3, #0]
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	695b      	ldr	r3, [r3, #20]
 8004b92:	617b      	str	r3, [r7, #20]
 8004b94:	697b      	ldr	r3, [r7, #20]
 8004b96:	f023 0307 	bic.w	r3, r3, #7
 8004b9a:	617b      	str	r3, [r7, #20]
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ba0:	697a      	ldr	r2, [r7, #20]
 8004ba2:	4313      	orrs	r3, r2
 8004ba4:	617b      	str	r3, [r7, #20]
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004baa:	2b04      	cmp	r3, #4
 8004bac:	d117      	bne.n	8004bde <HAL_DMA_Init+0x122>
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004bb2:	697a      	ldr	r2, [r7, #20]
 8004bb4:	4313      	orrs	r3, r2
 8004bb6:	617b      	str	r3, [r7, #20]
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	d00e      	beq.n	8004bde <HAL_DMA_Init+0x122>
 8004bc0:	6878      	ldr	r0, [r7, #4]
 8004bc2:	f000 fa6f 	bl	80050a4 <DMA_CheckFifoParam>
 8004bc6:	4603      	mov	r3, r0
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d008      	beq.n	8004bde <HAL_DMA_Init+0x122>
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	2240      	movs	r2, #64	@ 0x40
 8004bd0:	655a      	str	r2, [r3, #84]	@ 0x54
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	2201      	movs	r2, #1
 8004bd6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004bda:	2301      	movs	r3, #1
 8004bdc:	e016      	b.n	8004c0c <HAL_DMA_Init+0x150>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	697a      	ldr	r2, [r7, #20]
 8004be4:	615a      	str	r2, [r3, #20]
 8004be6:	6878      	ldr	r0, [r7, #4]
 8004be8:	f000 fa26 	bl	8005038 <DMA_CalcBaseAndBitshift>
 8004bec:	4603      	mov	r3, r0
 8004bee:	60fb      	str	r3, [r7, #12]
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004bf4:	223f      	movs	r2, #63	@ 0x3f
 8004bf6:	409a      	lsls	r2, r3
 8004bf8:	68fb      	ldr	r3, [r7, #12]
 8004bfa:	609a      	str	r2, [r3, #8]
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	2200      	movs	r2, #0
 8004c00:	655a      	str	r2, [r3, #84]	@ 0x54
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	2201      	movs	r2, #1
 8004c06:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004c0a:	2300      	movs	r3, #0
 8004c0c:	4618      	mov	r0, r3
 8004c0e:	3718      	adds	r7, #24
 8004c10:	46bd      	mov	sp, r7
 8004c12:	bd80      	pop	{r7, pc}
 8004c14:	f010803f 	.word	0xf010803f

08004c18 <HAL_DMA_Start_IT>:
 8004c18:	b580      	push	{r7, lr}
 8004c1a:	b086      	sub	sp, #24
 8004c1c:	af00      	add	r7, sp, #0
 8004c1e:	60f8      	str	r0, [r7, #12]
 8004c20:	60b9      	str	r1, [r7, #8]
 8004c22:	607a      	str	r2, [r7, #4]
 8004c24:	603b      	str	r3, [r7, #0]
 8004c26:	2300      	movs	r3, #0
 8004c28:	75fb      	strb	r3, [r7, #23]
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004c2e:	613b      	str	r3, [r7, #16]
 8004c30:	68fb      	ldr	r3, [r7, #12]
 8004c32:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8004c36:	2b01      	cmp	r3, #1
 8004c38:	d101      	bne.n	8004c3e <HAL_DMA_Start_IT+0x26>
 8004c3a:	2302      	movs	r3, #2
 8004c3c:	e040      	b.n	8004cc0 <HAL_DMA_Start_IT+0xa8>
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	2201      	movs	r2, #1
 8004c42:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004c4c:	b2db      	uxtb	r3, r3
 8004c4e:	2b01      	cmp	r3, #1
 8004c50:	d12f      	bne.n	8004cb2 <HAL_DMA_Start_IT+0x9a>
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	2202      	movs	r2, #2
 8004c56:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	2200      	movs	r2, #0
 8004c5e:	655a      	str	r2, [r3, #84]	@ 0x54
 8004c60:	683b      	ldr	r3, [r7, #0]
 8004c62:	687a      	ldr	r2, [r7, #4]
 8004c64:	68b9      	ldr	r1, [r7, #8]
 8004c66:	68f8      	ldr	r0, [r7, #12]
 8004c68:	f000 f9b8 	bl	8004fdc <DMA_SetConfig>
 8004c6c:	68fb      	ldr	r3, [r7, #12]
 8004c6e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004c70:	223f      	movs	r2, #63	@ 0x3f
 8004c72:	409a      	lsls	r2, r3
 8004c74:	693b      	ldr	r3, [r7, #16]
 8004c76:	609a      	str	r2, [r3, #8]
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	681a      	ldr	r2, [r3, #0]
 8004c7e:	68fb      	ldr	r3, [r7, #12]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	f042 0216 	orr.w	r2, r2, #22
 8004c86:	601a      	str	r2, [r3, #0]
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d007      	beq.n	8004ca0 <HAL_DMA_Start_IT+0x88>
 8004c90:	68fb      	ldr	r3, [r7, #12]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	681a      	ldr	r2, [r3, #0]
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	f042 0208 	orr.w	r2, r2, #8
 8004c9e:	601a      	str	r2, [r3, #0]
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	681a      	ldr	r2, [r3, #0]
 8004ca6:	68fb      	ldr	r3, [r7, #12]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	f042 0201 	orr.w	r2, r2, #1
 8004cae:	601a      	str	r2, [r3, #0]
 8004cb0:	e005      	b.n	8004cbe <HAL_DMA_Start_IT+0xa6>
 8004cb2:	68fb      	ldr	r3, [r7, #12]
 8004cb4:	2200      	movs	r2, #0
 8004cb6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004cba:	2302      	movs	r3, #2
 8004cbc:	75fb      	strb	r3, [r7, #23]
 8004cbe:	7dfb      	ldrb	r3, [r7, #23]
 8004cc0:	4618      	mov	r0, r3
 8004cc2:	3718      	adds	r7, #24
 8004cc4:	46bd      	mov	sp, r7
 8004cc6:	bd80      	pop	{r7, pc}

08004cc8 <HAL_DMA_IRQHandler>:
 8004cc8:	b580      	push	{r7, lr}
 8004cca:	b086      	sub	sp, #24
 8004ccc:	af00      	add	r7, sp, #0
 8004cce:	6078      	str	r0, [r7, #4]
 8004cd0:	2300      	movs	r3, #0
 8004cd2:	60bb      	str	r3, [r7, #8]
 8004cd4:	4b8e      	ldr	r3, [pc, #568]	@ (8004f10 <HAL_DMA_IRQHandler+0x248>)
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	4a8e      	ldr	r2, [pc, #568]	@ (8004f14 <HAL_DMA_IRQHandler+0x24c>)
 8004cda:	fba2 2303 	umull	r2, r3, r2, r3
 8004cde:	0a9b      	lsrs	r3, r3, #10
 8004ce0:	617b      	str	r3, [r7, #20]
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ce6:	613b      	str	r3, [r7, #16]
 8004ce8:	693b      	ldr	r3, [r7, #16]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	60fb      	str	r3, [r7, #12]
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004cf2:	2208      	movs	r2, #8
 8004cf4:	409a      	lsls	r2, r3
 8004cf6:	68fb      	ldr	r3, [r7, #12]
 8004cf8:	4013      	ands	r3, r2
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d01a      	beq.n	8004d34 <HAL_DMA_IRQHandler+0x6c>
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	f003 0304 	and.w	r3, r3, #4
 8004d08:	2b00      	cmp	r3, #0
 8004d0a:	d013      	beq.n	8004d34 <HAL_DMA_IRQHandler+0x6c>
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	681a      	ldr	r2, [r3, #0]
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	f022 0204 	bic.w	r2, r2, #4
 8004d1a:	601a      	str	r2, [r3, #0]
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d20:	2208      	movs	r2, #8
 8004d22:	409a      	lsls	r2, r3
 8004d24:	693b      	ldr	r3, [r7, #16]
 8004d26:	609a      	str	r2, [r3, #8]
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d2c:	f043 0201 	orr.w	r2, r3, #1
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d38:	2201      	movs	r2, #1
 8004d3a:	409a      	lsls	r2, r3
 8004d3c:	68fb      	ldr	r3, [r7, #12]
 8004d3e:	4013      	ands	r3, r2
 8004d40:	2b00      	cmp	r3, #0
 8004d42:	d012      	beq.n	8004d6a <HAL_DMA_IRQHandler+0xa2>
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	695b      	ldr	r3, [r3, #20]
 8004d4a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d00b      	beq.n	8004d6a <HAL_DMA_IRQHandler+0xa2>
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d56:	2201      	movs	r2, #1
 8004d58:	409a      	lsls	r2, r3
 8004d5a:	693b      	ldr	r3, [r7, #16]
 8004d5c:	609a      	str	r2, [r3, #8]
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d62:	f043 0202 	orr.w	r2, r3, #2
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d6e:	2204      	movs	r2, #4
 8004d70:	409a      	lsls	r2, r3
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	4013      	ands	r3, r2
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d012      	beq.n	8004da0 <HAL_DMA_IRQHandler+0xd8>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	f003 0302 	and.w	r3, r3, #2
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	d00b      	beq.n	8004da0 <HAL_DMA_IRQHandler+0xd8>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d8c:	2204      	movs	r2, #4
 8004d8e:	409a      	lsls	r2, r3
 8004d90:	693b      	ldr	r3, [r7, #16]
 8004d92:	609a      	str	r2, [r3, #8]
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d98:	f043 0204 	orr.w	r2, r3, #4
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	655a      	str	r2, [r3, #84]	@ 0x54
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004da4:	2210      	movs	r2, #16
 8004da6:	409a      	lsls	r2, r3
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	4013      	ands	r3, r2
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d043      	beq.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	f003 0308 	and.w	r3, r3, #8
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d03c      	beq.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004dc2:	2210      	movs	r2, #16
 8004dc4:	409a      	lsls	r2, r3
 8004dc6:	693b      	ldr	r3, [r7, #16]
 8004dc8:	609a      	str	r2, [r3, #8]
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d018      	beq.n	8004e0a <HAL_DMA_IRQHandler+0x142>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	d108      	bne.n	8004df8 <HAL_DMA_IRQHandler+0x130>
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d024      	beq.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004df2:	6878      	ldr	r0, [r7, #4]
 8004df4:	4798      	blx	r3
 8004df6:	e01f      	b.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d01b      	beq.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004e04:	6878      	ldr	r0, [r7, #4]
 8004e06:	4798      	blx	r3
 8004e08:	e016      	b.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	d107      	bne.n	8004e28 <HAL_DMA_IRQHandler+0x160>
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	681a      	ldr	r2, [r3, #0]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	f022 0208 	bic.w	r2, r2, #8
 8004e26:	601a      	str	r2, [r3, #0]
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e2c:	2b00      	cmp	r3, #0
 8004e2e:	d003      	beq.n	8004e38 <HAL_DMA_IRQHandler+0x170>
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e34:	6878      	ldr	r0, [r7, #4]
 8004e36:	4798      	blx	r3
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004e3c:	2220      	movs	r2, #32
 8004e3e:	409a      	lsls	r2, r3
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	4013      	ands	r3, r2
 8004e44:	2b00      	cmp	r3, #0
 8004e46:	f000 808f 	beq.w	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	f003 0310 	and.w	r3, r3, #16
 8004e54:	2b00      	cmp	r3, #0
 8004e56:	f000 8087 	beq.w	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004e5e:	2220      	movs	r2, #32
 8004e60:	409a      	lsls	r2, r3
 8004e62:	693b      	ldr	r3, [r7, #16]
 8004e64:	609a      	str	r2, [r3, #8]
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004e6c:	b2db      	uxtb	r3, r3
 8004e6e:	2b05      	cmp	r3, #5
 8004e70:	d136      	bne.n	8004ee0 <HAL_DMA_IRQHandler+0x218>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	681a      	ldr	r2, [r3, #0]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	f022 0216 	bic.w	r2, r2, #22
 8004e80:	601a      	str	r2, [r3, #0]
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	695a      	ldr	r2, [r3, #20]
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004e90:	615a      	str	r2, [r3, #20]
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d103      	bne.n	8004ea2 <HAL_DMA_IRQHandler+0x1da>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d007      	beq.n	8004eb2 <HAL_DMA_IRQHandler+0x1ea>
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	681a      	ldr	r2, [r3, #0]
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	681b      	ldr	r3, [r3, #0]
 8004eac:	f022 0208 	bic.w	r2, r2, #8
 8004eb0:	601a      	str	r2, [r3, #0]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004eb6:	223f      	movs	r2, #63	@ 0x3f
 8004eb8:	409a      	lsls	r2, r3
 8004eba:	693b      	ldr	r3, [r7, #16]
 8004ebc:	609a      	str	r2, [r3, #8]
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	2201      	movs	r2, #1
 8004ec2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	2200      	movs	r2, #0
 8004eca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004ed2:	2b00      	cmp	r3, #0
 8004ed4:	d07e      	beq.n	8004fd4 <HAL_DMA_IRQHandler+0x30c>
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004eda:	6878      	ldr	r0, [r7, #4]
 8004edc:	4798      	blx	r3
 8004ede:	e079      	b.n	8004fd4 <HAL_DMA_IRQHandler+0x30c>
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8004eea:	2b00      	cmp	r3, #0
 8004eec:	d01d      	beq.n	8004f2a <HAL_DMA_IRQHandler+0x262>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	d10d      	bne.n	8004f18 <HAL_DMA_IRQHandler+0x250>
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d031      	beq.n	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004f08:	6878      	ldr	r0, [r7, #4]
 8004f0a:	4798      	blx	r3
 8004f0c:	e02c      	b.n	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004f0e:	bf00      	nop
 8004f10:	20000004 	.word	0x20000004
 8004f14:	1b4e81b5 	.word	0x1b4e81b5
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004f1c:	2b00      	cmp	r3, #0
 8004f1e:	d023      	beq.n	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004f24:	6878      	ldr	r0, [r7, #4]
 8004f26:	4798      	blx	r3
 8004f28:	e01e      	b.n	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d10f      	bne.n	8004f58 <HAL_DMA_IRQHandler+0x290>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	681a      	ldr	r2, [r3, #0]
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	f022 0210 	bic.w	r2, r2, #16
 8004f46:	601a      	str	r2, [r3, #0]
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	2200      	movs	r2, #0
 8004f54:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	d003      	beq.n	8004f68 <HAL_DMA_IRQHandler+0x2a0>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004f64:	6878      	ldr	r0, [r7, #4]
 8004f66:	4798      	blx	r3
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d032      	beq.n	8004fd6 <HAL_DMA_IRQHandler+0x30e>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004f74:	f003 0301 	and.w	r3, r3, #1
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	d022      	beq.n	8004fc2 <HAL_DMA_IRQHandler+0x2fa>
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	2205      	movs	r2, #5
 8004f80:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	681a      	ldr	r2, [r3, #0]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	f022 0201 	bic.w	r2, r2, #1
 8004f92:	601a      	str	r2, [r3, #0]
 8004f94:	68bb      	ldr	r3, [r7, #8]
 8004f96:	3301      	adds	r3, #1
 8004f98:	60bb      	str	r3, [r7, #8]
 8004f9a:	697a      	ldr	r2, [r7, #20]
 8004f9c:	429a      	cmp	r2, r3
 8004f9e:	d307      	bcc.n	8004fb0 <HAL_DMA_IRQHandler+0x2e8>
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	f003 0301 	and.w	r3, r3, #1
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d1f2      	bne.n	8004f94 <HAL_DMA_IRQHandler+0x2cc>
 8004fae:	e000      	b.n	8004fb2 <HAL_DMA_IRQHandler+0x2ea>
 8004fb0:	bf00      	nop
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	2201      	movs	r2, #1
 8004fb6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	2200      	movs	r2, #0
 8004fbe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d005      	beq.n	8004fd6 <HAL_DMA_IRQHandler+0x30e>
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004fce:	6878      	ldr	r0, [r7, #4]
 8004fd0:	4798      	blx	r3
 8004fd2:	e000      	b.n	8004fd6 <HAL_DMA_IRQHandler+0x30e>
 8004fd4:	bf00      	nop
 8004fd6:	3718      	adds	r7, #24
 8004fd8:	46bd      	mov	sp, r7
 8004fda:	bd80      	pop	{r7, pc}

08004fdc <DMA_SetConfig>:
 8004fdc:	b480      	push	{r7}
 8004fde:	b085      	sub	sp, #20
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	60f8      	str	r0, [r7, #12]
 8004fe4:	60b9      	str	r1, [r7, #8]
 8004fe6:	607a      	str	r2, [r7, #4]
 8004fe8:	603b      	str	r3, [r7, #0]
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	681a      	ldr	r2, [r3, #0]
 8004ff0:	68fb      	ldr	r3, [r7, #12]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004ff8:	601a      	str	r2, [r3, #0]
 8004ffa:	68fb      	ldr	r3, [r7, #12]
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	683a      	ldr	r2, [r7, #0]
 8005000:	605a      	str	r2, [r3, #4]
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	689b      	ldr	r3, [r3, #8]
 8005006:	2b40      	cmp	r3, #64	@ 0x40
 8005008:	d108      	bne.n	800501c <DMA_SetConfig+0x40>
 800500a:	68fb      	ldr	r3, [r7, #12]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	687a      	ldr	r2, [r7, #4]
 8005010:	609a      	str	r2, [r3, #8]
 8005012:	68fb      	ldr	r3, [r7, #12]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	68ba      	ldr	r2, [r7, #8]
 8005018:	60da      	str	r2, [r3, #12]
 800501a:	e007      	b.n	800502c <DMA_SetConfig+0x50>
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	68ba      	ldr	r2, [r7, #8]
 8005022:	609a      	str	r2, [r3, #8]
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	687a      	ldr	r2, [r7, #4]
 800502a:	60da      	str	r2, [r3, #12]
 800502c:	bf00      	nop
 800502e:	3714      	adds	r7, #20
 8005030:	46bd      	mov	sp, r7
 8005032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005036:	4770      	bx	lr

08005038 <DMA_CalcBaseAndBitshift>:
 8005038:	b480      	push	{r7}
 800503a:	b085      	sub	sp, #20
 800503c:	af00      	add	r7, sp, #0
 800503e:	6078      	str	r0, [r7, #4]
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	b2db      	uxtb	r3, r3
 8005046:	3b10      	subs	r3, #16
 8005048:	4a14      	ldr	r2, [pc, #80]	@ (800509c <DMA_CalcBaseAndBitshift+0x64>)
 800504a:	fba2 2303 	umull	r2, r3, r2, r3
 800504e:	091b      	lsrs	r3, r3, #4
 8005050:	60fb      	str	r3, [r7, #12]
 8005052:	4a13      	ldr	r2, [pc, #76]	@ (80050a0 <DMA_CalcBaseAndBitshift+0x68>)
 8005054:	68fb      	ldr	r3, [r7, #12]
 8005056:	4413      	add	r3, r2
 8005058:	781b      	ldrb	r3, [r3, #0]
 800505a:	461a      	mov	r2, r3
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	2b03      	cmp	r3, #3
 8005064:	d909      	bls.n	800507a <DMA_CalcBaseAndBitshift+0x42>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800506e:	f023 0303 	bic.w	r3, r3, #3
 8005072:	1d1a      	adds	r2, r3, #4
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	659a      	str	r2, [r3, #88]	@ 0x58
 8005078:	e007      	b.n	800508a <DMA_CalcBaseAndBitshift+0x52>
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8005082:	f023 0303 	bic.w	r3, r3, #3
 8005086:	687a      	ldr	r2, [r7, #4]
 8005088:	6593      	str	r3, [r2, #88]	@ 0x58
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800508e:	4618      	mov	r0, r3
 8005090:	3714      	adds	r7, #20
 8005092:	46bd      	mov	sp, r7
 8005094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005098:	4770      	bx	lr
 800509a:	bf00      	nop
 800509c:	aaaaaaab 	.word	0xaaaaaaab
 80050a0:	0800b000 	.word	0x0800b000

080050a4 <DMA_CheckFifoParam>:
 80050a4:	b480      	push	{r7}
 80050a6:	b085      	sub	sp, #20
 80050a8:	af00      	add	r7, sp, #0
 80050aa:	6078      	str	r0, [r7, #4]
 80050ac:	2300      	movs	r3, #0
 80050ae:	73fb      	strb	r3, [r7, #15]
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80050b4:	60bb      	str	r3, [r7, #8]
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	699b      	ldr	r3, [r3, #24]
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d11f      	bne.n	80050fe <DMA_CheckFifoParam+0x5a>
 80050be:	68bb      	ldr	r3, [r7, #8]
 80050c0:	2b03      	cmp	r3, #3
 80050c2:	d856      	bhi.n	8005172 <DMA_CheckFifoParam+0xce>
 80050c4:	a201      	add	r2, pc, #4	@ (adr r2, 80050cc <DMA_CheckFifoParam+0x28>)
 80050c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80050ca:	bf00      	nop
 80050cc:	080050dd 	.word	0x080050dd
 80050d0:	080050ef 	.word	0x080050ef
 80050d4:	080050dd 	.word	0x080050dd
 80050d8:	08005173 	.word	0x08005173
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050e0:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80050e4:	2b00      	cmp	r3, #0
 80050e6:	d046      	beq.n	8005176 <DMA_CheckFifoParam+0xd2>
 80050e8:	2301      	movs	r3, #1
 80050ea:	73fb      	strb	r3, [r7, #15]
 80050ec:	e043      	b.n	8005176 <DMA_CheckFifoParam+0xd2>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050f2:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80050f6:	d140      	bne.n	800517a <DMA_CheckFifoParam+0xd6>
 80050f8:	2301      	movs	r3, #1
 80050fa:	73fb      	strb	r3, [r7, #15]
 80050fc:	e03d      	b.n	800517a <DMA_CheckFifoParam+0xd6>
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	699b      	ldr	r3, [r3, #24]
 8005102:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005106:	d121      	bne.n	800514c <DMA_CheckFifoParam+0xa8>
 8005108:	68bb      	ldr	r3, [r7, #8]
 800510a:	2b03      	cmp	r3, #3
 800510c:	d837      	bhi.n	800517e <DMA_CheckFifoParam+0xda>
 800510e:	a201      	add	r2, pc, #4	@ (adr r2, 8005114 <DMA_CheckFifoParam+0x70>)
 8005110:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005114:	08005125 	.word	0x08005125
 8005118:	0800512b 	.word	0x0800512b
 800511c:	08005125 	.word	0x08005125
 8005120:	0800513d 	.word	0x0800513d
 8005124:	2301      	movs	r3, #1
 8005126:	73fb      	strb	r3, [r7, #15]
 8005128:	e030      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800512e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005132:	2b00      	cmp	r3, #0
 8005134:	d025      	beq.n	8005182 <DMA_CheckFifoParam+0xde>
 8005136:	2301      	movs	r3, #1
 8005138:	73fb      	strb	r3, [r7, #15]
 800513a:	e022      	b.n	8005182 <DMA_CheckFifoParam+0xde>
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005140:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8005144:	d11f      	bne.n	8005186 <DMA_CheckFifoParam+0xe2>
 8005146:	2301      	movs	r3, #1
 8005148:	73fb      	strb	r3, [r7, #15]
 800514a:	e01c      	b.n	8005186 <DMA_CheckFifoParam+0xe2>
 800514c:	68bb      	ldr	r3, [r7, #8]
 800514e:	2b02      	cmp	r3, #2
 8005150:	d903      	bls.n	800515a <DMA_CheckFifoParam+0xb6>
 8005152:	68bb      	ldr	r3, [r7, #8]
 8005154:	2b03      	cmp	r3, #3
 8005156:	d003      	beq.n	8005160 <DMA_CheckFifoParam+0xbc>
 8005158:	e018      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 800515a:	2301      	movs	r3, #1
 800515c:	73fb      	strb	r3, [r7, #15]
 800515e:	e015      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005164:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005168:	2b00      	cmp	r3, #0
 800516a:	d00e      	beq.n	800518a <DMA_CheckFifoParam+0xe6>
 800516c:	2301      	movs	r3, #1
 800516e:	73fb      	strb	r3, [r7, #15]
 8005170:	e00b      	b.n	800518a <DMA_CheckFifoParam+0xe6>
 8005172:	bf00      	nop
 8005174:	e00a      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 8005176:	bf00      	nop
 8005178:	e008      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 800517a:	bf00      	nop
 800517c:	e006      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 800517e:	bf00      	nop
 8005180:	e004      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 8005182:	bf00      	nop
 8005184:	e002      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 8005186:	bf00      	nop
 8005188:	e000      	b.n	800518c <DMA_CheckFifoParam+0xe8>
 800518a:	bf00      	nop
 800518c:	7bfb      	ldrb	r3, [r7, #15]
 800518e:	4618      	mov	r0, r3
 8005190:	3714      	adds	r7, #20
 8005192:	46bd      	mov	sp, r7
 8005194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005198:	4770      	bx	lr
 800519a:	bf00      	nop

0800519c <HAL_GPIO_Init>:
 800519c:	b480      	push	{r7}
 800519e:	b089      	sub	sp, #36	@ 0x24
 80051a0:	af00      	add	r7, sp, #0
 80051a2:	6078      	str	r0, [r7, #4]
 80051a4:	6039      	str	r1, [r7, #0]
 80051a6:	2300      	movs	r3, #0
 80051a8:	617b      	str	r3, [r7, #20]
 80051aa:	2300      	movs	r3, #0
 80051ac:	613b      	str	r3, [r7, #16]
 80051ae:	2300      	movs	r3, #0
 80051b0:	61bb      	str	r3, [r7, #24]
 80051b2:	2300      	movs	r3, #0
 80051b4:	61fb      	str	r3, [r7, #28]
 80051b6:	e16b      	b.n	8005490 <HAL_GPIO_Init+0x2f4>
 80051b8:	2201      	movs	r2, #1
 80051ba:	69fb      	ldr	r3, [r7, #28]
 80051bc:	fa02 f303 	lsl.w	r3, r2, r3
 80051c0:	617b      	str	r3, [r7, #20]
 80051c2:	683b      	ldr	r3, [r7, #0]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	697a      	ldr	r2, [r7, #20]
 80051c8:	4013      	ands	r3, r2
 80051ca:	613b      	str	r3, [r7, #16]
 80051cc:	693a      	ldr	r2, [r7, #16]
 80051ce:	697b      	ldr	r3, [r7, #20]
 80051d0:	429a      	cmp	r2, r3
 80051d2:	f040 815a 	bne.w	800548a <HAL_GPIO_Init+0x2ee>
 80051d6:	683b      	ldr	r3, [r7, #0]
 80051d8:	685b      	ldr	r3, [r3, #4]
 80051da:	f003 0303 	and.w	r3, r3, #3
 80051de:	2b01      	cmp	r3, #1
 80051e0:	d005      	beq.n	80051ee <HAL_GPIO_Init+0x52>
 80051e2:	683b      	ldr	r3, [r7, #0]
 80051e4:	685b      	ldr	r3, [r3, #4]
 80051e6:	f003 0303 	and.w	r3, r3, #3
 80051ea:	2b02      	cmp	r3, #2
 80051ec:	d130      	bne.n	8005250 <HAL_GPIO_Init+0xb4>
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	689b      	ldr	r3, [r3, #8]
 80051f2:	61bb      	str	r3, [r7, #24]
 80051f4:	69fb      	ldr	r3, [r7, #28]
 80051f6:	005b      	lsls	r3, r3, #1
 80051f8:	2203      	movs	r2, #3
 80051fa:	fa02 f303 	lsl.w	r3, r2, r3
 80051fe:	43db      	mvns	r3, r3
 8005200:	69ba      	ldr	r2, [r7, #24]
 8005202:	4013      	ands	r3, r2
 8005204:	61bb      	str	r3, [r7, #24]
 8005206:	683b      	ldr	r3, [r7, #0]
 8005208:	68da      	ldr	r2, [r3, #12]
 800520a:	69fb      	ldr	r3, [r7, #28]
 800520c:	005b      	lsls	r3, r3, #1
 800520e:	fa02 f303 	lsl.w	r3, r2, r3
 8005212:	69ba      	ldr	r2, [r7, #24]
 8005214:	4313      	orrs	r3, r2
 8005216:	61bb      	str	r3, [r7, #24]
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	69ba      	ldr	r2, [r7, #24]
 800521c:	609a      	str	r2, [r3, #8]
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	685b      	ldr	r3, [r3, #4]
 8005222:	61bb      	str	r3, [r7, #24]
 8005224:	2201      	movs	r2, #1
 8005226:	69fb      	ldr	r3, [r7, #28]
 8005228:	fa02 f303 	lsl.w	r3, r2, r3
 800522c:	43db      	mvns	r3, r3
 800522e:	69ba      	ldr	r2, [r7, #24]
 8005230:	4013      	ands	r3, r2
 8005232:	61bb      	str	r3, [r7, #24]
 8005234:	683b      	ldr	r3, [r7, #0]
 8005236:	685b      	ldr	r3, [r3, #4]
 8005238:	091b      	lsrs	r3, r3, #4
 800523a:	f003 0201 	and.w	r2, r3, #1
 800523e:	69fb      	ldr	r3, [r7, #28]
 8005240:	fa02 f303 	lsl.w	r3, r2, r3
 8005244:	69ba      	ldr	r2, [r7, #24]
 8005246:	4313      	orrs	r3, r2
 8005248:	61bb      	str	r3, [r7, #24]
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	69ba      	ldr	r2, [r7, #24]
 800524e:	605a      	str	r2, [r3, #4]
 8005250:	683b      	ldr	r3, [r7, #0]
 8005252:	685b      	ldr	r3, [r3, #4]
 8005254:	f003 0303 	and.w	r3, r3, #3
 8005258:	2b03      	cmp	r3, #3
 800525a:	d017      	beq.n	800528c <HAL_GPIO_Init+0xf0>
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	68db      	ldr	r3, [r3, #12]
 8005260:	61bb      	str	r3, [r7, #24]
 8005262:	69fb      	ldr	r3, [r7, #28]
 8005264:	005b      	lsls	r3, r3, #1
 8005266:	2203      	movs	r2, #3
 8005268:	fa02 f303 	lsl.w	r3, r2, r3
 800526c:	43db      	mvns	r3, r3
 800526e:	69ba      	ldr	r2, [r7, #24]
 8005270:	4013      	ands	r3, r2
 8005272:	61bb      	str	r3, [r7, #24]
 8005274:	683b      	ldr	r3, [r7, #0]
 8005276:	689a      	ldr	r2, [r3, #8]
 8005278:	69fb      	ldr	r3, [r7, #28]
 800527a:	005b      	lsls	r3, r3, #1
 800527c:	fa02 f303 	lsl.w	r3, r2, r3
 8005280:	69ba      	ldr	r2, [r7, #24]
 8005282:	4313      	orrs	r3, r2
 8005284:	61bb      	str	r3, [r7, #24]
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	69ba      	ldr	r2, [r7, #24]
 800528a:	60da      	str	r2, [r3, #12]
 800528c:	683b      	ldr	r3, [r7, #0]
 800528e:	685b      	ldr	r3, [r3, #4]
 8005290:	f003 0303 	and.w	r3, r3, #3
 8005294:	2b02      	cmp	r3, #2
 8005296:	d123      	bne.n	80052e0 <HAL_GPIO_Init+0x144>
 8005298:	69fb      	ldr	r3, [r7, #28]
 800529a:	08da      	lsrs	r2, r3, #3
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	3208      	adds	r2, #8
 80052a0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80052a4:	61bb      	str	r3, [r7, #24]
 80052a6:	69fb      	ldr	r3, [r7, #28]
 80052a8:	f003 0307 	and.w	r3, r3, #7
 80052ac:	009b      	lsls	r3, r3, #2
 80052ae:	220f      	movs	r2, #15
 80052b0:	fa02 f303 	lsl.w	r3, r2, r3
 80052b4:	43db      	mvns	r3, r3
 80052b6:	69ba      	ldr	r2, [r7, #24]
 80052b8:	4013      	ands	r3, r2
 80052ba:	61bb      	str	r3, [r7, #24]
 80052bc:	683b      	ldr	r3, [r7, #0]
 80052be:	691a      	ldr	r2, [r3, #16]
 80052c0:	69fb      	ldr	r3, [r7, #28]
 80052c2:	f003 0307 	and.w	r3, r3, #7
 80052c6:	009b      	lsls	r3, r3, #2
 80052c8:	fa02 f303 	lsl.w	r3, r2, r3
 80052cc:	69ba      	ldr	r2, [r7, #24]
 80052ce:	4313      	orrs	r3, r2
 80052d0:	61bb      	str	r3, [r7, #24]
 80052d2:	69fb      	ldr	r3, [r7, #28]
 80052d4:	08da      	lsrs	r2, r3, #3
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	3208      	adds	r2, #8
 80052da:	69b9      	ldr	r1, [r7, #24]
 80052dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	61bb      	str	r3, [r7, #24]
 80052e6:	69fb      	ldr	r3, [r7, #28]
 80052e8:	005b      	lsls	r3, r3, #1
 80052ea:	2203      	movs	r2, #3
 80052ec:	fa02 f303 	lsl.w	r3, r2, r3
 80052f0:	43db      	mvns	r3, r3
 80052f2:	69ba      	ldr	r2, [r7, #24]
 80052f4:	4013      	ands	r3, r2
 80052f6:	61bb      	str	r3, [r7, #24]
 80052f8:	683b      	ldr	r3, [r7, #0]
 80052fa:	685b      	ldr	r3, [r3, #4]
 80052fc:	f003 0203 	and.w	r2, r3, #3
 8005300:	69fb      	ldr	r3, [r7, #28]
 8005302:	005b      	lsls	r3, r3, #1
 8005304:	fa02 f303 	lsl.w	r3, r2, r3
 8005308:	69ba      	ldr	r2, [r7, #24]
 800530a:	4313      	orrs	r3, r2
 800530c:	61bb      	str	r3, [r7, #24]
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	69ba      	ldr	r2, [r7, #24]
 8005312:	601a      	str	r2, [r3, #0]
 8005314:	683b      	ldr	r3, [r7, #0]
 8005316:	685b      	ldr	r3, [r3, #4]
 8005318:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800531c:	2b00      	cmp	r3, #0
 800531e:	f000 80b4 	beq.w	800548a <HAL_GPIO_Init+0x2ee>
 8005322:	2300      	movs	r3, #0
 8005324:	60fb      	str	r3, [r7, #12]
 8005326:	4b60      	ldr	r3, [pc, #384]	@ (80054a8 <HAL_GPIO_Init+0x30c>)
 8005328:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800532a:	4a5f      	ldr	r2, [pc, #380]	@ (80054a8 <HAL_GPIO_Init+0x30c>)
 800532c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005330:	6453      	str	r3, [r2, #68]	@ 0x44
 8005332:	4b5d      	ldr	r3, [pc, #372]	@ (80054a8 <HAL_GPIO_Init+0x30c>)
 8005334:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005336:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800533a:	60fb      	str	r3, [r7, #12]
 800533c:	68fb      	ldr	r3, [r7, #12]
 800533e:	4a5b      	ldr	r2, [pc, #364]	@ (80054ac <HAL_GPIO_Init+0x310>)
 8005340:	69fb      	ldr	r3, [r7, #28]
 8005342:	089b      	lsrs	r3, r3, #2
 8005344:	3302      	adds	r3, #2
 8005346:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800534a:	61bb      	str	r3, [r7, #24]
 800534c:	69fb      	ldr	r3, [r7, #28]
 800534e:	f003 0303 	and.w	r3, r3, #3
 8005352:	009b      	lsls	r3, r3, #2
 8005354:	220f      	movs	r2, #15
 8005356:	fa02 f303 	lsl.w	r3, r2, r3
 800535a:	43db      	mvns	r3, r3
 800535c:	69ba      	ldr	r2, [r7, #24]
 800535e:	4013      	ands	r3, r2
 8005360:	61bb      	str	r3, [r7, #24]
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	4a52      	ldr	r2, [pc, #328]	@ (80054b0 <HAL_GPIO_Init+0x314>)
 8005366:	4293      	cmp	r3, r2
 8005368:	d02b      	beq.n	80053c2 <HAL_GPIO_Init+0x226>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	4a51      	ldr	r2, [pc, #324]	@ (80054b4 <HAL_GPIO_Init+0x318>)
 800536e:	4293      	cmp	r3, r2
 8005370:	d025      	beq.n	80053be <HAL_GPIO_Init+0x222>
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	4a50      	ldr	r2, [pc, #320]	@ (80054b8 <HAL_GPIO_Init+0x31c>)
 8005376:	4293      	cmp	r3, r2
 8005378:	d01f      	beq.n	80053ba <HAL_GPIO_Init+0x21e>
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	4a4f      	ldr	r2, [pc, #316]	@ (80054bc <HAL_GPIO_Init+0x320>)
 800537e:	4293      	cmp	r3, r2
 8005380:	d019      	beq.n	80053b6 <HAL_GPIO_Init+0x21a>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	4a4e      	ldr	r2, [pc, #312]	@ (80054c0 <HAL_GPIO_Init+0x324>)
 8005386:	4293      	cmp	r3, r2
 8005388:	d013      	beq.n	80053b2 <HAL_GPIO_Init+0x216>
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	4a4d      	ldr	r2, [pc, #308]	@ (80054c4 <HAL_GPIO_Init+0x328>)
 800538e:	4293      	cmp	r3, r2
 8005390:	d00d      	beq.n	80053ae <HAL_GPIO_Init+0x212>
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	4a4c      	ldr	r2, [pc, #304]	@ (80054c8 <HAL_GPIO_Init+0x32c>)
 8005396:	4293      	cmp	r3, r2
 8005398:	d007      	beq.n	80053aa <HAL_GPIO_Init+0x20e>
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	4a4b      	ldr	r2, [pc, #300]	@ (80054cc <HAL_GPIO_Init+0x330>)
 800539e:	4293      	cmp	r3, r2
 80053a0:	d101      	bne.n	80053a6 <HAL_GPIO_Init+0x20a>
 80053a2:	2307      	movs	r3, #7
 80053a4:	e00e      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053a6:	2308      	movs	r3, #8
 80053a8:	e00c      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053aa:	2306      	movs	r3, #6
 80053ac:	e00a      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053ae:	2305      	movs	r3, #5
 80053b0:	e008      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053b2:	2304      	movs	r3, #4
 80053b4:	e006      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053b6:	2303      	movs	r3, #3
 80053b8:	e004      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053ba:	2302      	movs	r3, #2
 80053bc:	e002      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053be:	2301      	movs	r3, #1
 80053c0:	e000      	b.n	80053c4 <HAL_GPIO_Init+0x228>
 80053c2:	2300      	movs	r3, #0
 80053c4:	69fa      	ldr	r2, [r7, #28]
 80053c6:	f002 0203 	and.w	r2, r2, #3
 80053ca:	0092      	lsls	r2, r2, #2
 80053cc:	4093      	lsls	r3, r2
 80053ce:	69ba      	ldr	r2, [r7, #24]
 80053d0:	4313      	orrs	r3, r2
 80053d2:	61bb      	str	r3, [r7, #24]
 80053d4:	4935      	ldr	r1, [pc, #212]	@ (80054ac <HAL_GPIO_Init+0x310>)
 80053d6:	69fb      	ldr	r3, [r7, #28]
 80053d8:	089b      	lsrs	r3, r3, #2
 80053da:	3302      	adds	r3, #2
 80053dc:	69ba      	ldr	r2, [r7, #24]
 80053de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80053e2:	4b3b      	ldr	r3, [pc, #236]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 80053e4:	689b      	ldr	r3, [r3, #8]
 80053e6:	61bb      	str	r3, [r7, #24]
 80053e8:	693b      	ldr	r3, [r7, #16]
 80053ea:	43db      	mvns	r3, r3
 80053ec:	69ba      	ldr	r2, [r7, #24]
 80053ee:	4013      	ands	r3, r2
 80053f0:	61bb      	str	r3, [r7, #24]
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	685b      	ldr	r3, [r3, #4]
 80053f6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	d003      	beq.n	8005406 <HAL_GPIO_Init+0x26a>
 80053fe:	69ba      	ldr	r2, [r7, #24]
 8005400:	693b      	ldr	r3, [r7, #16]
 8005402:	4313      	orrs	r3, r2
 8005404:	61bb      	str	r3, [r7, #24]
 8005406:	4a32      	ldr	r2, [pc, #200]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 8005408:	69bb      	ldr	r3, [r7, #24]
 800540a:	6093      	str	r3, [r2, #8]
 800540c:	4b30      	ldr	r3, [pc, #192]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 800540e:	68db      	ldr	r3, [r3, #12]
 8005410:	61bb      	str	r3, [r7, #24]
 8005412:	693b      	ldr	r3, [r7, #16]
 8005414:	43db      	mvns	r3, r3
 8005416:	69ba      	ldr	r2, [r7, #24]
 8005418:	4013      	ands	r3, r2
 800541a:	61bb      	str	r3, [r7, #24]
 800541c:	683b      	ldr	r3, [r7, #0]
 800541e:	685b      	ldr	r3, [r3, #4]
 8005420:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005424:	2b00      	cmp	r3, #0
 8005426:	d003      	beq.n	8005430 <HAL_GPIO_Init+0x294>
 8005428:	69ba      	ldr	r2, [r7, #24]
 800542a:	693b      	ldr	r3, [r7, #16]
 800542c:	4313      	orrs	r3, r2
 800542e:	61bb      	str	r3, [r7, #24]
 8005430:	4a27      	ldr	r2, [pc, #156]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 8005432:	69bb      	ldr	r3, [r7, #24]
 8005434:	60d3      	str	r3, [r2, #12]
 8005436:	4b26      	ldr	r3, [pc, #152]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 8005438:	685b      	ldr	r3, [r3, #4]
 800543a:	61bb      	str	r3, [r7, #24]
 800543c:	693b      	ldr	r3, [r7, #16]
 800543e:	43db      	mvns	r3, r3
 8005440:	69ba      	ldr	r2, [r7, #24]
 8005442:	4013      	ands	r3, r2
 8005444:	61bb      	str	r3, [r7, #24]
 8005446:	683b      	ldr	r3, [r7, #0]
 8005448:	685b      	ldr	r3, [r3, #4]
 800544a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800544e:	2b00      	cmp	r3, #0
 8005450:	d003      	beq.n	800545a <HAL_GPIO_Init+0x2be>
 8005452:	69ba      	ldr	r2, [r7, #24]
 8005454:	693b      	ldr	r3, [r7, #16]
 8005456:	4313      	orrs	r3, r2
 8005458:	61bb      	str	r3, [r7, #24]
 800545a:	4a1d      	ldr	r2, [pc, #116]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 800545c:	69bb      	ldr	r3, [r7, #24]
 800545e:	6053      	str	r3, [r2, #4]
 8005460:	4b1b      	ldr	r3, [pc, #108]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	61bb      	str	r3, [r7, #24]
 8005466:	693b      	ldr	r3, [r7, #16]
 8005468:	43db      	mvns	r3, r3
 800546a:	69ba      	ldr	r2, [r7, #24]
 800546c:	4013      	ands	r3, r2
 800546e:	61bb      	str	r3, [r7, #24]
 8005470:	683b      	ldr	r3, [r7, #0]
 8005472:	685b      	ldr	r3, [r3, #4]
 8005474:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005478:	2b00      	cmp	r3, #0
 800547a:	d003      	beq.n	8005484 <HAL_GPIO_Init+0x2e8>
 800547c:	69ba      	ldr	r2, [r7, #24]
 800547e:	693b      	ldr	r3, [r7, #16]
 8005480:	4313      	orrs	r3, r2
 8005482:	61bb      	str	r3, [r7, #24]
 8005484:	4a12      	ldr	r2, [pc, #72]	@ (80054d0 <HAL_GPIO_Init+0x334>)
 8005486:	69bb      	ldr	r3, [r7, #24]
 8005488:	6013      	str	r3, [r2, #0]
 800548a:	69fb      	ldr	r3, [r7, #28]
 800548c:	3301      	adds	r3, #1
 800548e:	61fb      	str	r3, [r7, #28]
 8005490:	69fb      	ldr	r3, [r7, #28]
 8005492:	2b0f      	cmp	r3, #15
 8005494:	f67f ae90 	bls.w	80051b8 <HAL_GPIO_Init+0x1c>
 8005498:	bf00      	nop
 800549a:	bf00      	nop
 800549c:	3724      	adds	r7, #36	@ 0x24
 800549e:	46bd      	mov	sp, r7
 80054a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054a4:	4770      	bx	lr
 80054a6:	bf00      	nop
 80054a8:	40023800 	.word	0x40023800
 80054ac:	40013800 	.word	0x40013800
 80054b0:	40020000 	.word	0x40020000
 80054b4:	40020400 	.word	0x40020400
 80054b8:	40020800 	.word	0x40020800
 80054bc:	40020c00 	.word	0x40020c00
 80054c0:	40021000 	.word	0x40021000
 80054c4:	40021400 	.word	0x40021400
 80054c8:	40021800 	.word	0x40021800
 80054cc:	40021c00 	.word	0x40021c00
 80054d0:	40013c00 	.word	0x40013c00

080054d4 <HAL_GPIO_ReadPin>:
 80054d4:	b480      	push	{r7}
 80054d6:	b085      	sub	sp, #20
 80054d8:	af00      	add	r7, sp, #0
 80054da:	6078      	str	r0, [r7, #4]
 80054dc:	460b      	mov	r3, r1
 80054de:	807b      	strh	r3, [r7, #2]
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	691a      	ldr	r2, [r3, #16]
 80054e4:	887b      	ldrh	r3, [r7, #2]
 80054e6:	4013      	ands	r3, r2
 80054e8:	2b00      	cmp	r3, #0
 80054ea:	d002      	beq.n	80054f2 <HAL_GPIO_ReadPin+0x1e>
 80054ec:	2301      	movs	r3, #1
 80054ee:	73fb      	strb	r3, [r7, #15]
 80054f0:	e001      	b.n	80054f6 <HAL_GPIO_ReadPin+0x22>
 80054f2:	2300      	movs	r3, #0
 80054f4:	73fb      	strb	r3, [r7, #15]
 80054f6:	7bfb      	ldrb	r3, [r7, #15]
 80054f8:	4618      	mov	r0, r3
 80054fa:	3714      	adds	r7, #20
 80054fc:	46bd      	mov	sp, r7
 80054fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005502:	4770      	bx	lr

08005504 <HAL_GPIO_WritePin>:
 8005504:	b480      	push	{r7}
 8005506:	b083      	sub	sp, #12
 8005508:	af00      	add	r7, sp, #0
 800550a:	6078      	str	r0, [r7, #4]
 800550c:	460b      	mov	r3, r1
 800550e:	807b      	strh	r3, [r7, #2]
 8005510:	4613      	mov	r3, r2
 8005512:	707b      	strb	r3, [r7, #1]
 8005514:	787b      	ldrb	r3, [r7, #1]
 8005516:	2b00      	cmp	r3, #0
 8005518:	d003      	beq.n	8005522 <HAL_GPIO_WritePin+0x1e>
 800551a:	887a      	ldrh	r2, [r7, #2]
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	619a      	str	r2, [r3, #24]
 8005520:	e003      	b.n	800552a <HAL_GPIO_WritePin+0x26>
 8005522:	887b      	ldrh	r3, [r7, #2]
 8005524:	041a      	lsls	r2, r3, #16
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	619a      	str	r2, [r3, #24]
 800552a:	bf00      	nop
 800552c:	370c      	adds	r7, #12
 800552e:	46bd      	mov	sp, r7
 8005530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005534:	4770      	bx	lr

08005536 <HAL_GPIO_TogglePin>:
 8005536:	b480      	push	{r7}
 8005538:	b085      	sub	sp, #20
 800553a:	af00      	add	r7, sp, #0
 800553c:	6078      	str	r0, [r7, #4]
 800553e:	460b      	mov	r3, r1
 8005540:	807b      	strh	r3, [r7, #2]
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	695b      	ldr	r3, [r3, #20]
 8005546:	60fb      	str	r3, [r7, #12]
 8005548:	887a      	ldrh	r2, [r7, #2]
 800554a:	68fb      	ldr	r3, [r7, #12]
 800554c:	4013      	ands	r3, r2
 800554e:	041a      	lsls	r2, r3, #16
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	43d9      	mvns	r1, r3
 8005554:	887b      	ldrh	r3, [r7, #2]
 8005556:	400b      	ands	r3, r1
 8005558:	431a      	orrs	r2, r3
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	619a      	str	r2, [r3, #24]
 800555e:	bf00      	nop
 8005560:	3714      	adds	r7, #20
 8005562:	46bd      	mov	sp, r7
 8005564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005568:	4770      	bx	lr
	...

0800556c <HAL_I2C_Init>:
 800556c:	b580      	push	{r7, lr}
 800556e:	b084      	sub	sp, #16
 8005570:	af00      	add	r7, sp, #0
 8005572:	6078      	str	r0, [r7, #4]
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	2b00      	cmp	r3, #0
 8005578:	d101      	bne.n	800557e <HAL_I2C_Init+0x12>
 800557a:	2301      	movs	r3, #1
 800557c:	e12b      	b.n	80057d6 <HAL_I2C_Init+0x26a>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005584:	b2db      	uxtb	r3, r3
 8005586:	2b00      	cmp	r3, #0
 8005588:	d106      	bne.n	8005598 <HAL_I2C_Init+0x2c>
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	2200      	movs	r2, #0
 800558e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005592:	6878      	ldr	r0, [r7, #4]
 8005594:	f7fd fc8e 	bl	8002eb4 <HAL_I2C_MspInit>
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	2224      	movs	r2, #36	@ 0x24
 800559c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	681a      	ldr	r2, [r3, #0]
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	f022 0201 	bic.w	r2, r2, #1
 80055ae:	601a      	str	r2, [r3, #0]
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	681a      	ldr	r2, [r3, #0]
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80055be:	601a      	str	r2, [r3, #0]
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	681a      	ldr	r2, [r3, #0]
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80055ce:	601a      	str	r2, [r3, #0]
 80055d0:	f001 f9d8 	bl	8006984 <HAL_RCC_GetPCLK1Freq>
 80055d4:	60f8      	str	r0, [r7, #12]
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	685b      	ldr	r3, [r3, #4]
 80055da:	4a81      	ldr	r2, [pc, #516]	@ (80057e0 <HAL_I2C_Init+0x274>)
 80055dc:	4293      	cmp	r3, r2
 80055de:	d807      	bhi.n	80055f0 <HAL_I2C_Init+0x84>
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	4a80      	ldr	r2, [pc, #512]	@ (80057e4 <HAL_I2C_Init+0x278>)
 80055e4:	4293      	cmp	r3, r2
 80055e6:	bf94      	ite	ls
 80055e8:	2301      	movls	r3, #1
 80055ea:	2300      	movhi	r3, #0
 80055ec:	b2db      	uxtb	r3, r3
 80055ee:	e006      	b.n	80055fe <HAL_I2C_Init+0x92>
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	4a7d      	ldr	r2, [pc, #500]	@ (80057e8 <HAL_I2C_Init+0x27c>)
 80055f4:	4293      	cmp	r3, r2
 80055f6:	bf94      	ite	ls
 80055f8:	2301      	movls	r3, #1
 80055fa:	2300      	movhi	r3, #0
 80055fc:	b2db      	uxtb	r3, r3
 80055fe:	2b00      	cmp	r3, #0
 8005600:	d001      	beq.n	8005606 <HAL_I2C_Init+0x9a>
 8005602:	2301      	movs	r3, #1
 8005604:	e0e7      	b.n	80057d6 <HAL_I2C_Init+0x26a>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	4a78      	ldr	r2, [pc, #480]	@ (80057ec <HAL_I2C_Init+0x280>)
 800560a:	fba2 2303 	umull	r2, r3, r2, r3
 800560e:	0c9b      	lsrs	r3, r3, #18
 8005610:	60bb      	str	r3, [r7, #8]
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	685b      	ldr	r3, [r3, #4]
 8005618:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	68ba      	ldr	r2, [r7, #8]
 8005622:	430a      	orrs	r2, r1
 8005624:	605a      	str	r2, [r3, #4]
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	6a1b      	ldr	r3, [r3, #32]
 800562c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	685b      	ldr	r3, [r3, #4]
 8005634:	4a6a      	ldr	r2, [pc, #424]	@ (80057e0 <HAL_I2C_Init+0x274>)
 8005636:	4293      	cmp	r3, r2
 8005638:	d802      	bhi.n	8005640 <HAL_I2C_Init+0xd4>
 800563a:	68bb      	ldr	r3, [r7, #8]
 800563c:	3301      	adds	r3, #1
 800563e:	e009      	b.n	8005654 <HAL_I2C_Init+0xe8>
 8005640:	68bb      	ldr	r3, [r7, #8]
 8005642:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8005646:	fb02 f303 	mul.w	r3, r2, r3
 800564a:	4a69      	ldr	r2, [pc, #420]	@ (80057f0 <HAL_I2C_Init+0x284>)
 800564c:	fba2 2303 	umull	r2, r3, r2, r3
 8005650:	099b      	lsrs	r3, r3, #6
 8005652:	3301      	adds	r3, #1
 8005654:	687a      	ldr	r2, [r7, #4]
 8005656:	6812      	ldr	r2, [r2, #0]
 8005658:	430b      	orrs	r3, r1
 800565a:	6213      	str	r3, [r2, #32]
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	681b      	ldr	r3, [r3, #0]
 8005660:	69db      	ldr	r3, [r3, #28]
 8005662:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8005666:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	685b      	ldr	r3, [r3, #4]
 800566e:	495c      	ldr	r1, [pc, #368]	@ (80057e0 <HAL_I2C_Init+0x274>)
 8005670:	428b      	cmp	r3, r1
 8005672:	d819      	bhi.n	80056a8 <HAL_I2C_Init+0x13c>
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	1e59      	subs	r1, r3, #1
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	685b      	ldr	r3, [r3, #4]
 800567c:	005b      	lsls	r3, r3, #1
 800567e:	fbb1 f3f3 	udiv	r3, r1, r3
 8005682:	1c59      	adds	r1, r3, #1
 8005684:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8005688:	400b      	ands	r3, r1
 800568a:	2b00      	cmp	r3, #0
 800568c:	d00a      	beq.n	80056a4 <HAL_I2C_Init+0x138>
 800568e:	68fb      	ldr	r3, [r7, #12]
 8005690:	1e59      	subs	r1, r3, #1
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	685b      	ldr	r3, [r3, #4]
 8005696:	005b      	lsls	r3, r3, #1
 8005698:	fbb1 f3f3 	udiv	r3, r1, r3
 800569c:	3301      	adds	r3, #1
 800569e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80056a2:	e051      	b.n	8005748 <HAL_I2C_Init+0x1dc>
 80056a4:	2304      	movs	r3, #4
 80056a6:	e04f      	b.n	8005748 <HAL_I2C_Init+0x1dc>
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	689b      	ldr	r3, [r3, #8]
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d111      	bne.n	80056d4 <HAL_I2C_Init+0x168>
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	1e58      	subs	r0, r3, #1
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	6859      	ldr	r1, [r3, #4]
 80056b8:	460b      	mov	r3, r1
 80056ba:	005b      	lsls	r3, r3, #1
 80056bc:	440b      	add	r3, r1
 80056be:	fbb0 f3f3 	udiv	r3, r0, r3
 80056c2:	3301      	adds	r3, #1
 80056c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80056c8:	2b00      	cmp	r3, #0
 80056ca:	bf0c      	ite	eq
 80056cc:	2301      	moveq	r3, #1
 80056ce:	2300      	movne	r3, #0
 80056d0:	b2db      	uxtb	r3, r3
 80056d2:	e012      	b.n	80056fa <HAL_I2C_Init+0x18e>
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	1e58      	subs	r0, r3, #1
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	6859      	ldr	r1, [r3, #4]
 80056dc:	460b      	mov	r3, r1
 80056de:	009b      	lsls	r3, r3, #2
 80056e0:	440b      	add	r3, r1
 80056e2:	0099      	lsls	r1, r3, #2
 80056e4:	440b      	add	r3, r1
 80056e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80056ea:	3301      	adds	r3, #1
 80056ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	bf0c      	ite	eq
 80056f4:	2301      	moveq	r3, #1
 80056f6:	2300      	movne	r3, #0
 80056f8:	b2db      	uxtb	r3, r3
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d001      	beq.n	8005702 <HAL_I2C_Init+0x196>
 80056fe:	2301      	movs	r3, #1
 8005700:	e022      	b.n	8005748 <HAL_I2C_Init+0x1dc>
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	689b      	ldr	r3, [r3, #8]
 8005706:	2b00      	cmp	r3, #0
 8005708:	d10e      	bne.n	8005728 <HAL_I2C_Init+0x1bc>
 800570a:	68fb      	ldr	r3, [r7, #12]
 800570c:	1e58      	subs	r0, r3, #1
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	6859      	ldr	r1, [r3, #4]
 8005712:	460b      	mov	r3, r1
 8005714:	005b      	lsls	r3, r3, #1
 8005716:	440b      	add	r3, r1
 8005718:	fbb0 f3f3 	udiv	r3, r0, r3
 800571c:	3301      	adds	r3, #1
 800571e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005722:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005726:	e00f      	b.n	8005748 <HAL_I2C_Init+0x1dc>
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	1e58      	subs	r0, r3, #1
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	6859      	ldr	r1, [r3, #4]
 8005730:	460b      	mov	r3, r1
 8005732:	009b      	lsls	r3, r3, #2
 8005734:	440b      	add	r3, r1
 8005736:	0099      	lsls	r1, r3, #2
 8005738:	440b      	add	r3, r1
 800573a:	fbb0 f3f3 	udiv	r3, r0, r3
 800573e:	3301      	adds	r3, #1
 8005740:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005744:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005748:	6879      	ldr	r1, [r7, #4]
 800574a:	6809      	ldr	r1, [r1, #0]
 800574c:	4313      	orrs	r3, r2
 800574e:	61cb      	str	r3, [r1, #28]
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	69da      	ldr	r2, [r3, #28]
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	6a1b      	ldr	r3, [r3, #32]
 8005762:	431a      	orrs	r2, r3
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	430a      	orrs	r2, r1
 800576a:	601a      	str	r2, [r3, #0]
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	689b      	ldr	r3, [r3, #8]
 8005772:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8005776:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800577a:	687a      	ldr	r2, [r7, #4]
 800577c:	6911      	ldr	r1, [r2, #16]
 800577e:	687a      	ldr	r2, [r7, #4]
 8005780:	68d2      	ldr	r2, [r2, #12]
 8005782:	4311      	orrs	r1, r2
 8005784:	687a      	ldr	r2, [r7, #4]
 8005786:	6812      	ldr	r2, [r2, #0]
 8005788:	430b      	orrs	r3, r1
 800578a:	6093      	str	r3, [r2, #8]
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	68db      	ldr	r3, [r3, #12]
 8005792:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	695a      	ldr	r2, [r3, #20]
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	699b      	ldr	r3, [r3, #24]
 800579e:	431a      	orrs	r2, r3
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	430a      	orrs	r2, r1
 80057a6:	60da      	str	r2, [r3, #12]
 80057a8:	687b      	ldr	r3, [r7, #4]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	681a      	ldr	r2, [r3, #0]
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	681b      	ldr	r3, [r3, #0]
 80057b2:	f042 0201 	orr.w	r2, r2, #1
 80057b6:	601a      	str	r2, [r3, #0]
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	2200      	movs	r2, #0
 80057bc:	641a      	str	r2, [r3, #64]	@ 0x40
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	2220      	movs	r2, #32
 80057c2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	2200      	movs	r2, #0
 80057ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	2200      	movs	r2, #0
 80057d0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80057d4:	2300      	movs	r3, #0
 80057d6:	4618      	mov	r0, r3
 80057d8:	3710      	adds	r7, #16
 80057da:	46bd      	mov	sp, r7
 80057dc:	bd80      	pop	{r7, pc}
 80057de:	bf00      	nop
 80057e0:	000186a0 	.word	0x000186a0
 80057e4:	001e847f 	.word	0x001e847f
 80057e8:	003d08ff 	.word	0x003d08ff
 80057ec:	431bde83 	.word	0x431bde83
 80057f0:	10624dd3 	.word	0x10624dd3

080057f4 <HAL_I2C_Mem_Write>:
 80057f4:	b580      	push	{r7, lr}
 80057f6:	b088      	sub	sp, #32
 80057f8:	af02      	add	r7, sp, #8
 80057fa:	60f8      	str	r0, [r7, #12]
 80057fc:	4608      	mov	r0, r1
 80057fe:	4611      	mov	r1, r2
 8005800:	461a      	mov	r2, r3
 8005802:	4603      	mov	r3, r0
 8005804:	817b      	strh	r3, [r7, #10]
 8005806:	460b      	mov	r3, r1
 8005808:	813b      	strh	r3, [r7, #8]
 800580a:	4613      	mov	r3, r2
 800580c:	80fb      	strh	r3, [r7, #6]
 800580e:	f7fe f825 	bl	800385c <HAL_GetTick>
 8005812:	6178      	str	r0, [r7, #20]
 8005814:	68fb      	ldr	r3, [r7, #12]
 8005816:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800581a:	b2db      	uxtb	r3, r3
 800581c:	2b20      	cmp	r3, #32
 800581e:	f040 80d9 	bne.w	80059d4 <HAL_I2C_Mem_Write+0x1e0>
 8005822:	697b      	ldr	r3, [r7, #20]
 8005824:	9300      	str	r3, [sp, #0]
 8005826:	2319      	movs	r3, #25
 8005828:	2201      	movs	r2, #1
 800582a:	496d      	ldr	r1, [pc, #436]	@ (80059e0 <HAL_I2C_Mem_Write+0x1ec>)
 800582c:	68f8      	ldr	r0, [r7, #12]
 800582e:	f000 fa9f 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005832:	4603      	mov	r3, r0
 8005834:	2b00      	cmp	r3, #0
 8005836:	d001      	beq.n	800583c <HAL_I2C_Mem_Write+0x48>
 8005838:	2302      	movs	r3, #2
 800583a:	e0cc      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 800583c:	68fb      	ldr	r3, [r7, #12]
 800583e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005842:	2b01      	cmp	r3, #1
 8005844:	d101      	bne.n	800584a <HAL_I2C_Mem_Write+0x56>
 8005846:	2302      	movs	r3, #2
 8005848:	e0c5      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	2201      	movs	r2, #1
 800584e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005852:	68fb      	ldr	r3, [r7, #12]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	f003 0301 	and.w	r3, r3, #1
 800585c:	2b01      	cmp	r3, #1
 800585e:	d007      	beq.n	8005870 <HAL_I2C_Mem_Write+0x7c>
 8005860:	68fb      	ldr	r3, [r7, #12]
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	681a      	ldr	r2, [r3, #0]
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	681b      	ldr	r3, [r3, #0]
 800586a:	f042 0201 	orr.w	r2, r2, #1
 800586e:	601a      	str	r2, [r3, #0]
 8005870:	68fb      	ldr	r3, [r7, #12]
 8005872:	681b      	ldr	r3, [r3, #0]
 8005874:	681a      	ldr	r2, [r3, #0]
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	681b      	ldr	r3, [r3, #0]
 800587a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800587e:	601a      	str	r2, [r3, #0]
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	2221      	movs	r2, #33	@ 0x21
 8005884:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005888:	68fb      	ldr	r3, [r7, #12]
 800588a:	2240      	movs	r2, #64	@ 0x40
 800588c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	2200      	movs	r2, #0
 8005894:	641a      	str	r2, [r3, #64]	@ 0x40
 8005896:	68fb      	ldr	r3, [r7, #12]
 8005898:	6a3a      	ldr	r2, [r7, #32]
 800589a:	625a      	str	r2, [r3, #36]	@ 0x24
 800589c:	68fb      	ldr	r3, [r7, #12]
 800589e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80058a0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80058a2:	68fb      	ldr	r3, [r7, #12]
 80058a4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80058a6:	b29a      	uxth	r2, r3
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	851a      	strh	r2, [r3, #40]	@ 0x28
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	4a4d      	ldr	r2, [pc, #308]	@ (80059e4 <HAL_I2C_Mem_Write+0x1f0>)
 80058b0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80058b2:	88f8      	ldrh	r0, [r7, #6]
 80058b4:	893a      	ldrh	r2, [r7, #8]
 80058b6:	8979      	ldrh	r1, [r7, #10]
 80058b8:	697b      	ldr	r3, [r7, #20]
 80058ba:	9301      	str	r3, [sp, #4]
 80058bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80058be:	9300      	str	r3, [sp, #0]
 80058c0:	4603      	mov	r3, r0
 80058c2:	68f8      	ldr	r0, [r7, #12]
 80058c4:	f000 f9be 	bl	8005c44 <I2C_RequestMemoryWrite>
 80058c8:	4603      	mov	r3, r0
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d052      	beq.n	8005974 <HAL_I2C_Mem_Write+0x180>
 80058ce:	2301      	movs	r3, #1
 80058d0:	e081      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 80058d2:	697a      	ldr	r2, [r7, #20]
 80058d4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80058d6:	68f8      	ldr	r0, [r7, #12]
 80058d8:	f000 fb64 	bl	8005fa4 <I2C_WaitOnTXEFlagUntilTimeout>
 80058dc:	4603      	mov	r3, r0
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d00d      	beq.n	80058fe <HAL_I2C_Mem_Write+0x10a>
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80058e6:	2b04      	cmp	r3, #4
 80058e8:	d107      	bne.n	80058fa <HAL_I2C_Mem_Write+0x106>
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	681a      	ldr	r2, [r3, #0]
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	681b      	ldr	r3, [r3, #0]
 80058f4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80058f8:	601a      	str	r2, [r3, #0]
 80058fa:	2301      	movs	r3, #1
 80058fc:	e06b      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005902:	781a      	ldrb	r2, [r3, #0]
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	611a      	str	r2, [r3, #16]
 800590a:	68fb      	ldr	r3, [r7, #12]
 800590c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800590e:	1c5a      	adds	r2, r3, #1
 8005910:	68fb      	ldr	r3, [r7, #12]
 8005912:	625a      	str	r2, [r3, #36]	@ 0x24
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005918:	3b01      	subs	r3, #1
 800591a:	b29a      	uxth	r2, r3
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005920:	68fb      	ldr	r3, [r7, #12]
 8005922:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005924:	b29b      	uxth	r3, r3
 8005926:	3b01      	subs	r3, #1
 8005928:	b29a      	uxth	r2, r3
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800592e:	68fb      	ldr	r3, [r7, #12]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	695b      	ldr	r3, [r3, #20]
 8005934:	f003 0304 	and.w	r3, r3, #4
 8005938:	2b04      	cmp	r3, #4
 800593a:	d11b      	bne.n	8005974 <HAL_I2C_Mem_Write+0x180>
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005940:	2b00      	cmp	r3, #0
 8005942:	d017      	beq.n	8005974 <HAL_I2C_Mem_Write+0x180>
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005948:	781a      	ldrb	r2, [r3, #0]
 800594a:	68fb      	ldr	r3, [r7, #12]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	611a      	str	r2, [r3, #16]
 8005950:	68fb      	ldr	r3, [r7, #12]
 8005952:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005954:	1c5a      	adds	r2, r3, #1
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	625a      	str	r2, [r3, #36]	@ 0x24
 800595a:	68fb      	ldr	r3, [r7, #12]
 800595c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800595e:	3b01      	subs	r3, #1
 8005960:	b29a      	uxth	r2, r3
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005966:	68fb      	ldr	r3, [r7, #12]
 8005968:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800596a:	b29b      	uxth	r3, r3
 800596c:	3b01      	subs	r3, #1
 800596e:	b29a      	uxth	r2, r3
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005978:	2b00      	cmp	r3, #0
 800597a:	d1aa      	bne.n	80058d2 <HAL_I2C_Mem_Write+0xde>
 800597c:	697a      	ldr	r2, [r7, #20]
 800597e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005980:	68f8      	ldr	r0, [r7, #12]
 8005982:	f000 fb57 	bl	8006034 <I2C_WaitOnBTFFlagUntilTimeout>
 8005986:	4603      	mov	r3, r0
 8005988:	2b00      	cmp	r3, #0
 800598a:	d00d      	beq.n	80059a8 <HAL_I2C_Mem_Write+0x1b4>
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005990:	2b04      	cmp	r3, #4
 8005992:	d107      	bne.n	80059a4 <HAL_I2C_Mem_Write+0x1b0>
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	681b      	ldr	r3, [r3, #0]
 8005998:	681a      	ldr	r2, [r3, #0]
 800599a:	68fb      	ldr	r3, [r7, #12]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80059a2:	601a      	str	r2, [r3, #0]
 80059a4:	2301      	movs	r3, #1
 80059a6:	e016      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	681b      	ldr	r3, [r3, #0]
 80059ac:	681a      	ldr	r2, [r3, #0]
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80059b6:	601a      	str	r2, [r3, #0]
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	2220      	movs	r2, #32
 80059bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	2200      	movs	r2, #0
 80059c4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	2200      	movs	r2, #0
 80059cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80059d0:	2300      	movs	r3, #0
 80059d2:	e000      	b.n	80059d6 <HAL_I2C_Mem_Write+0x1e2>
 80059d4:	2302      	movs	r3, #2
 80059d6:	4618      	mov	r0, r3
 80059d8:	3718      	adds	r7, #24
 80059da:	46bd      	mov	sp, r7
 80059dc:	bd80      	pop	{r7, pc}
 80059de:	bf00      	nop
 80059e0:	00100002 	.word	0x00100002
 80059e4:	ffff0000 	.word	0xffff0000

080059e8 <HAL_I2C_IsDeviceReady>:
 80059e8:	b580      	push	{r7, lr}
 80059ea:	b08a      	sub	sp, #40	@ 0x28
 80059ec:	af02      	add	r7, sp, #8
 80059ee:	60f8      	str	r0, [r7, #12]
 80059f0:	607a      	str	r2, [r7, #4]
 80059f2:	603b      	str	r3, [r7, #0]
 80059f4:	460b      	mov	r3, r1
 80059f6:	817b      	strh	r3, [r7, #10]
 80059f8:	f7fd ff30 	bl	800385c <HAL_GetTick>
 80059fc:	61f8      	str	r0, [r7, #28]
 80059fe:	2300      	movs	r3, #0
 8005a00:	61bb      	str	r3, [r7, #24]
 8005a02:	68fb      	ldr	r3, [r7, #12]
 8005a04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005a08:	b2db      	uxtb	r3, r3
 8005a0a:	2b20      	cmp	r3, #32
 8005a0c:	f040 8111 	bne.w	8005c32 <HAL_I2C_IsDeviceReady+0x24a>
 8005a10:	69fb      	ldr	r3, [r7, #28]
 8005a12:	9300      	str	r3, [sp, #0]
 8005a14:	2319      	movs	r3, #25
 8005a16:	2201      	movs	r2, #1
 8005a18:	4988      	ldr	r1, [pc, #544]	@ (8005c3c <HAL_I2C_IsDeviceReady+0x254>)
 8005a1a:	68f8      	ldr	r0, [r7, #12]
 8005a1c:	f000 f9a8 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005a20:	4603      	mov	r3, r0
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	d001      	beq.n	8005a2a <HAL_I2C_IsDeviceReady+0x42>
 8005a26:	2302      	movs	r3, #2
 8005a28:	e104      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005a30:	2b01      	cmp	r3, #1
 8005a32:	d101      	bne.n	8005a38 <HAL_I2C_IsDeviceReady+0x50>
 8005a34:	2302      	movs	r3, #2
 8005a36:	e0fd      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	2201      	movs	r2, #1
 8005a3c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a40:	68fb      	ldr	r3, [r7, #12]
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	f003 0301 	and.w	r3, r3, #1
 8005a4a:	2b01      	cmp	r3, #1
 8005a4c:	d007      	beq.n	8005a5e <HAL_I2C_IsDeviceReady+0x76>
 8005a4e:	68fb      	ldr	r3, [r7, #12]
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	681a      	ldr	r2, [r3, #0]
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	f042 0201 	orr.w	r2, r2, #1
 8005a5c:	601a      	str	r2, [r3, #0]
 8005a5e:	68fb      	ldr	r3, [r7, #12]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	681a      	ldr	r2, [r3, #0]
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005a6c:	601a      	str	r2, [r3, #0]
 8005a6e:	68fb      	ldr	r3, [r7, #12]
 8005a70:	2224      	movs	r2, #36	@ 0x24
 8005a72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	2200      	movs	r2, #0
 8005a7a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005a7c:	68fb      	ldr	r3, [r7, #12]
 8005a7e:	4a70      	ldr	r2, [pc, #448]	@ (8005c40 <HAL_I2C_IsDeviceReady+0x258>)
 8005a80:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005a82:	68fb      	ldr	r3, [r7, #12]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	681a      	ldr	r2, [r3, #0]
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005a90:	601a      	str	r2, [r3, #0]
 8005a92:	69fb      	ldr	r3, [r7, #28]
 8005a94:	9300      	str	r3, [sp, #0]
 8005a96:	683b      	ldr	r3, [r7, #0]
 8005a98:	2200      	movs	r2, #0
 8005a9a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005a9e:	68f8      	ldr	r0, [r7, #12]
 8005aa0:	f000 f966 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005aa4:	4603      	mov	r3, r0
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d00d      	beq.n	8005ac6 <HAL_I2C_IsDeviceReady+0xde>
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ab4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005ab8:	d103      	bne.n	8005ac2 <HAL_I2C_IsDeviceReady+0xda>
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005ac0:	641a      	str	r2, [r3, #64]	@ 0x40
 8005ac2:	2303      	movs	r3, #3
 8005ac4:	e0b6      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005ac6:	897b      	ldrh	r3, [r7, #10]
 8005ac8:	b2db      	uxtb	r3, r3
 8005aca:	461a      	mov	r2, r3
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8005ad4:	611a      	str	r2, [r3, #16]
 8005ad6:	f7fd fec1 	bl	800385c <HAL_GetTick>
 8005ada:	61f8      	str	r0, [r7, #28]
 8005adc:	68fb      	ldr	r3, [r7, #12]
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	695b      	ldr	r3, [r3, #20]
 8005ae2:	f003 0302 	and.w	r3, r3, #2
 8005ae6:	2b02      	cmp	r3, #2
 8005ae8:	bf0c      	ite	eq
 8005aea:	2301      	moveq	r3, #1
 8005aec:	2300      	movne	r3, #0
 8005aee:	b2db      	uxtb	r3, r3
 8005af0:	75fb      	strb	r3, [r7, #23]
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	695b      	ldr	r3, [r3, #20]
 8005af8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005afc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005b00:	bf0c      	ite	eq
 8005b02:	2301      	moveq	r3, #1
 8005b04:	2300      	movne	r3, #0
 8005b06:	b2db      	uxtb	r3, r3
 8005b08:	75bb      	strb	r3, [r7, #22]
 8005b0a:	e025      	b.n	8005b58 <HAL_I2C_IsDeviceReady+0x170>
 8005b0c:	f7fd fea6 	bl	800385c <HAL_GetTick>
 8005b10:	4602      	mov	r2, r0
 8005b12:	69fb      	ldr	r3, [r7, #28]
 8005b14:	1ad3      	subs	r3, r2, r3
 8005b16:	683a      	ldr	r2, [r7, #0]
 8005b18:	429a      	cmp	r2, r3
 8005b1a:	d302      	bcc.n	8005b22 <HAL_I2C_IsDeviceReady+0x13a>
 8005b1c:	683b      	ldr	r3, [r7, #0]
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	d103      	bne.n	8005b2a <HAL_I2C_IsDeviceReady+0x142>
 8005b22:	68fb      	ldr	r3, [r7, #12]
 8005b24:	22a0      	movs	r2, #160	@ 0xa0
 8005b26:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005b2a:	68fb      	ldr	r3, [r7, #12]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	695b      	ldr	r3, [r3, #20]
 8005b30:	f003 0302 	and.w	r3, r3, #2
 8005b34:	2b02      	cmp	r3, #2
 8005b36:	bf0c      	ite	eq
 8005b38:	2301      	moveq	r3, #1
 8005b3a:	2300      	movne	r3, #0
 8005b3c:	b2db      	uxtb	r3, r3
 8005b3e:	75fb      	strb	r3, [r7, #23]
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	695b      	ldr	r3, [r3, #20]
 8005b46:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005b4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005b4e:	bf0c      	ite	eq
 8005b50:	2301      	moveq	r3, #1
 8005b52:	2300      	movne	r3, #0
 8005b54:	b2db      	uxtb	r3, r3
 8005b56:	75bb      	strb	r3, [r7, #22]
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005b5e:	b2db      	uxtb	r3, r3
 8005b60:	2ba0      	cmp	r3, #160	@ 0xa0
 8005b62:	d005      	beq.n	8005b70 <HAL_I2C_IsDeviceReady+0x188>
 8005b64:	7dfb      	ldrb	r3, [r7, #23]
 8005b66:	2b00      	cmp	r3, #0
 8005b68:	d102      	bne.n	8005b70 <HAL_I2C_IsDeviceReady+0x188>
 8005b6a:	7dbb      	ldrb	r3, [r7, #22]
 8005b6c:	2b00      	cmp	r3, #0
 8005b6e:	d0cd      	beq.n	8005b0c <HAL_I2C_IsDeviceReady+0x124>
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	2220      	movs	r2, #32
 8005b74:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	695b      	ldr	r3, [r3, #20]
 8005b7e:	f003 0302 	and.w	r3, r3, #2
 8005b82:	2b02      	cmp	r3, #2
 8005b84:	d129      	bne.n	8005bda <HAL_I2C_IsDeviceReady+0x1f2>
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	681a      	ldr	r2, [r3, #0]
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005b94:	601a      	str	r2, [r3, #0]
 8005b96:	2300      	movs	r3, #0
 8005b98:	613b      	str	r3, [r7, #16]
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	695b      	ldr	r3, [r3, #20]
 8005ba0:	613b      	str	r3, [r7, #16]
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	699b      	ldr	r3, [r3, #24]
 8005ba8:	613b      	str	r3, [r7, #16]
 8005baa:	693b      	ldr	r3, [r7, #16]
 8005bac:	69fb      	ldr	r3, [r7, #28]
 8005bae:	9300      	str	r3, [sp, #0]
 8005bb0:	2319      	movs	r3, #25
 8005bb2:	2201      	movs	r2, #1
 8005bb4:	4921      	ldr	r1, [pc, #132]	@ (8005c3c <HAL_I2C_IsDeviceReady+0x254>)
 8005bb6:	68f8      	ldr	r0, [r7, #12]
 8005bb8:	f000 f8da 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005bbc:	4603      	mov	r3, r0
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d001      	beq.n	8005bc6 <HAL_I2C_IsDeviceReady+0x1de>
 8005bc2:	2301      	movs	r3, #1
 8005bc4:	e036      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	2220      	movs	r2, #32
 8005bca:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	2200      	movs	r2, #0
 8005bd2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005bd6:	2300      	movs	r3, #0
 8005bd8:	e02c      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	681a      	ldr	r2, [r3, #0]
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005be8:	601a      	str	r2, [r3, #0]
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005bf2:	615a      	str	r2, [r3, #20]
 8005bf4:	69fb      	ldr	r3, [r7, #28]
 8005bf6:	9300      	str	r3, [sp, #0]
 8005bf8:	2319      	movs	r3, #25
 8005bfa:	2201      	movs	r2, #1
 8005bfc:	490f      	ldr	r1, [pc, #60]	@ (8005c3c <HAL_I2C_IsDeviceReady+0x254>)
 8005bfe:	68f8      	ldr	r0, [r7, #12]
 8005c00:	f000 f8b6 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005c04:	4603      	mov	r3, r0
 8005c06:	2b00      	cmp	r3, #0
 8005c08:	d001      	beq.n	8005c0e <HAL_I2C_IsDeviceReady+0x226>
 8005c0a:	2301      	movs	r3, #1
 8005c0c:	e012      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005c0e:	69bb      	ldr	r3, [r7, #24]
 8005c10:	3301      	adds	r3, #1
 8005c12:	61bb      	str	r3, [r7, #24]
 8005c14:	69ba      	ldr	r2, [r7, #24]
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	429a      	cmp	r2, r3
 8005c1a:	f4ff af32 	bcc.w	8005a82 <HAL_I2C_IsDeviceReady+0x9a>
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	2220      	movs	r2, #32
 8005c22:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	2200      	movs	r2, #0
 8005c2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005c2e:	2301      	movs	r3, #1
 8005c30:	e000      	b.n	8005c34 <HAL_I2C_IsDeviceReady+0x24c>
 8005c32:	2302      	movs	r3, #2
 8005c34:	4618      	mov	r0, r3
 8005c36:	3720      	adds	r7, #32
 8005c38:	46bd      	mov	sp, r7
 8005c3a:	bd80      	pop	{r7, pc}
 8005c3c:	00100002 	.word	0x00100002
 8005c40:	ffff0000 	.word	0xffff0000

08005c44 <I2C_RequestMemoryWrite>:
 8005c44:	b580      	push	{r7, lr}
 8005c46:	b088      	sub	sp, #32
 8005c48:	af02      	add	r7, sp, #8
 8005c4a:	60f8      	str	r0, [r7, #12]
 8005c4c:	4608      	mov	r0, r1
 8005c4e:	4611      	mov	r1, r2
 8005c50:	461a      	mov	r2, r3
 8005c52:	4603      	mov	r3, r0
 8005c54:	817b      	strh	r3, [r7, #10]
 8005c56:	460b      	mov	r3, r1
 8005c58:	813b      	strh	r3, [r7, #8]
 8005c5a:	4613      	mov	r3, r2
 8005c5c:	80fb      	strh	r3, [r7, #6]
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	681b      	ldr	r3, [r3, #0]
 8005c62:	681a      	ldr	r2, [r3, #0]
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005c6c:	601a      	str	r2, [r3, #0]
 8005c6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c70:	9300      	str	r3, [sp, #0]
 8005c72:	6a3b      	ldr	r3, [r7, #32]
 8005c74:	2200      	movs	r2, #0
 8005c76:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005c7a:	68f8      	ldr	r0, [r7, #12]
 8005c7c:	f000 f878 	bl	8005d70 <I2C_WaitOnFlagUntilTimeout>
 8005c80:	4603      	mov	r3, r0
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d00d      	beq.n	8005ca2 <I2C_RequestMemoryWrite+0x5e>
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005c90:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005c94:	d103      	bne.n	8005c9e <I2C_RequestMemoryWrite+0x5a>
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005c9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c9e:	2303      	movs	r3, #3
 8005ca0:	e05f      	b.n	8005d62 <I2C_RequestMemoryWrite+0x11e>
 8005ca2:	897b      	ldrh	r3, [r7, #10]
 8005ca4:	b2db      	uxtb	r3, r3
 8005ca6:	461a      	mov	r2, r3
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	681b      	ldr	r3, [r3, #0]
 8005cac:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8005cb0:	611a      	str	r2, [r3, #16]
 8005cb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005cb4:	6a3a      	ldr	r2, [r7, #32]
 8005cb6:	492d      	ldr	r1, [pc, #180]	@ (8005d6c <I2C_RequestMemoryWrite+0x128>)
 8005cb8:	68f8      	ldr	r0, [r7, #12]
 8005cba:	f000 f8d3 	bl	8005e64 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005cbe:	4603      	mov	r3, r0
 8005cc0:	2b00      	cmp	r3, #0
 8005cc2:	d001      	beq.n	8005cc8 <I2C_RequestMemoryWrite+0x84>
 8005cc4:	2301      	movs	r3, #1
 8005cc6:	e04c      	b.n	8005d62 <I2C_RequestMemoryWrite+0x11e>
 8005cc8:	2300      	movs	r3, #0
 8005cca:	617b      	str	r3, [r7, #20]
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	695b      	ldr	r3, [r3, #20]
 8005cd2:	617b      	str	r3, [r7, #20]
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	699b      	ldr	r3, [r3, #24]
 8005cda:	617b      	str	r3, [r7, #20]
 8005cdc:	697b      	ldr	r3, [r7, #20]
 8005cde:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005ce0:	6a39      	ldr	r1, [r7, #32]
 8005ce2:	68f8      	ldr	r0, [r7, #12]
 8005ce4:	f000 f95e 	bl	8005fa4 <I2C_WaitOnTXEFlagUntilTimeout>
 8005ce8:	4603      	mov	r3, r0
 8005cea:	2b00      	cmp	r3, #0
 8005cec:	d00d      	beq.n	8005d0a <I2C_RequestMemoryWrite+0xc6>
 8005cee:	68fb      	ldr	r3, [r7, #12]
 8005cf0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005cf2:	2b04      	cmp	r3, #4
 8005cf4:	d107      	bne.n	8005d06 <I2C_RequestMemoryWrite+0xc2>
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	681a      	ldr	r2, [r3, #0]
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005d04:	601a      	str	r2, [r3, #0]
 8005d06:	2301      	movs	r3, #1
 8005d08:	e02b      	b.n	8005d62 <I2C_RequestMemoryWrite+0x11e>
 8005d0a:	88fb      	ldrh	r3, [r7, #6]
 8005d0c:	2b01      	cmp	r3, #1
 8005d0e:	d105      	bne.n	8005d1c <I2C_RequestMemoryWrite+0xd8>
 8005d10:	893b      	ldrh	r3, [r7, #8]
 8005d12:	b2da      	uxtb	r2, r3
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	611a      	str	r2, [r3, #16]
 8005d1a:	e021      	b.n	8005d60 <I2C_RequestMemoryWrite+0x11c>
 8005d1c:	893b      	ldrh	r3, [r7, #8]
 8005d1e:	0a1b      	lsrs	r3, r3, #8
 8005d20:	b29b      	uxth	r3, r3
 8005d22:	b2da      	uxtb	r2, r3
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	611a      	str	r2, [r3, #16]
 8005d2a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005d2c:	6a39      	ldr	r1, [r7, #32]
 8005d2e:	68f8      	ldr	r0, [r7, #12]
 8005d30:	f000 f938 	bl	8005fa4 <I2C_WaitOnTXEFlagUntilTimeout>
 8005d34:	4603      	mov	r3, r0
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d00d      	beq.n	8005d56 <I2C_RequestMemoryWrite+0x112>
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d3e:	2b04      	cmp	r3, #4
 8005d40:	d107      	bne.n	8005d52 <I2C_RequestMemoryWrite+0x10e>
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	681a      	ldr	r2, [r3, #0]
 8005d48:	68fb      	ldr	r3, [r7, #12]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005d50:	601a      	str	r2, [r3, #0]
 8005d52:	2301      	movs	r3, #1
 8005d54:	e005      	b.n	8005d62 <I2C_RequestMemoryWrite+0x11e>
 8005d56:	893b      	ldrh	r3, [r7, #8]
 8005d58:	b2da      	uxtb	r2, r3
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	611a      	str	r2, [r3, #16]
 8005d60:	2300      	movs	r3, #0
 8005d62:	4618      	mov	r0, r3
 8005d64:	3718      	adds	r7, #24
 8005d66:	46bd      	mov	sp, r7
 8005d68:	bd80      	pop	{r7, pc}
 8005d6a:	bf00      	nop
 8005d6c:	00010002 	.word	0x00010002

08005d70 <I2C_WaitOnFlagUntilTimeout>:
 8005d70:	b580      	push	{r7, lr}
 8005d72:	b084      	sub	sp, #16
 8005d74:	af00      	add	r7, sp, #0
 8005d76:	60f8      	str	r0, [r7, #12]
 8005d78:	60b9      	str	r1, [r7, #8]
 8005d7a:	603b      	str	r3, [r7, #0]
 8005d7c:	4613      	mov	r3, r2
 8005d7e:	71fb      	strb	r3, [r7, #7]
 8005d80:	e048      	b.n	8005e14 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005d82:	683b      	ldr	r3, [r7, #0]
 8005d84:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005d88:	d044      	beq.n	8005e14 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005d8a:	f7fd fd67 	bl	800385c <HAL_GetTick>
 8005d8e:	4602      	mov	r2, r0
 8005d90:	69bb      	ldr	r3, [r7, #24]
 8005d92:	1ad3      	subs	r3, r2, r3
 8005d94:	683a      	ldr	r2, [r7, #0]
 8005d96:	429a      	cmp	r2, r3
 8005d98:	d302      	bcc.n	8005da0 <I2C_WaitOnFlagUntilTimeout+0x30>
 8005d9a:	683b      	ldr	r3, [r7, #0]
 8005d9c:	2b00      	cmp	r3, #0
 8005d9e:	d139      	bne.n	8005e14 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005da0:	68bb      	ldr	r3, [r7, #8]
 8005da2:	0c1b      	lsrs	r3, r3, #16
 8005da4:	b2db      	uxtb	r3, r3
 8005da6:	2b01      	cmp	r3, #1
 8005da8:	d10d      	bne.n	8005dc6 <I2C_WaitOnFlagUntilTimeout+0x56>
 8005daa:	68fb      	ldr	r3, [r7, #12]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	695b      	ldr	r3, [r3, #20]
 8005db0:	43da      	mvns	r2, r3
 8005db2:	68bb      	ldr	r3, [r7, #8]
 8005db4:	4013      	ands	r3, r2
 8005db6:	b29b      	uxth	r3, r3
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	bf0c      	ite	eq
 8005dbc:	2301      	moveq	r3, #1
 8005dbe:	2300      	movne	r3, #0
 8005dc0:	b2db      	uxtb	r3, r3
 8005dc2:	461a      	mov	r2, r3
 8005dc4:	e00c      	b.n	8005de0 <I2C_WaitOnFlagUntilTimeout+0x70>
 8005dc6:	68fb      	ldr	r3, [r7, #12]
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	699b      	ldr	r3, [r3, #24]
 8005dcc:	43da      	mvns	r2, r3
 8005dce:	68bb      	ldr	r3, [r7, #8]
 8005dd0:	4013      	ands	r3, r2
 8005dd2:	b29b      	uxth	r3, r3
 8005dd4:	2b00      	cmp	r3, #0
 8005dd6:	bf0c      	ite	eq
 8005dd8:	2301      	moveq	r3, #1
 8005dda:	2300      	movne	r3, #0
 8005ddc:	b2db      	uxtb	r3, r3
 8005dde:	461a      	mov	r2, r3
 8005de0:	79fb      	ldrb	r3, [r7, #7]
 8005de2:	429a      	cmp	r2, r3
 8005de4:	d116      	bne.n	8005e14 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8005de6:	68fb      	ldr	r3, [r7, #12]
 8005de8:	2200      	movs	r2, #0
 8005dea:	631a      	str	r2, [r3, #48]	@ 0x30
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	2220      	movs	r2, #32
 8005df0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	2200      	movs	r2, #0
 8005df8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e00:	f043 0220 	orr.w	r2, r3, #32
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	641a      	str	r2, [r3, #64]	@ 0x40
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	2200      	movs	r2, #0
 8005e0c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e10:	2301      	movs	r3, #1
 8005e12:	e023      	b.n	8005e5c <I2C_WaitOnFlagUntilTimeout+0xec>
 8005e14:	68bb      	ldr	r3, [r7, #8]
 8005e16:	0c1b      	lsrs	r3, r3, #16
 8005e18:	b2db      	uxtb	r3, r3
 8005e1a:	2b01      	cmp	r3, #1
 8005e1c:	d10d      	bne.n	8005e3a <I2C_WaitOnFlagUntilTimeout+0xca>
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	695b      	ldr	r3, [r3, #20]
 8005e24:	43da      	mvns	r2, r3
 8005e26:	68bb      	ldr	r3, [r7, #8]
 8005e28:	4013      	ands	r3, r2
 8005e2a:	b29b      	uxth	r3, r3
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	bf0c      	ite	eq
 8005e30:	2301      	moveq	r3, #1
 8005e32:	2300      	movne	r3, #0
 8005e34:	b2db      	uxtb	r3, r3
 8005e36:	461a      	mov	r2, r3
 8005e38:	e00c      	b.n	8005e54 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8005e3a:	68fb      	ldr	r3, [r7, #12]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	699b      	ldr	r3, [r3, #24]
 8005e40:	43da      	mvns	r2, r3
 8005e42:	68bb      	ldr	r3, [r7, #8]
 8005e44:	4013      	ands	r3, r2
 8005e46:	b29b      	uxth	r3, r3
 8005e48:	2b00      	cmp	r3, #0
 8005e4a:	bf0c      	ite	eq
 8005e4c:	2301      	moveq	r3, #1
 8005e4e:	2300      	movne	r3, #0
 8005e50:	b2db      	uxtb	r3, r3
 8005e52:	461a      	mov	r2, r3
 8005e54:	79fb      	ldrb	r3, [r7, #7]
 8005e56:	429a      	cmp	r2, r3
 8005e58:	d093      	beq.n	8005d82 <I2C_WaitOnFlagUntilTimeout+0x12>
 8005e5a:	2300      	movs	r3, #0
 8005e5c:	4618      	mov	r0, r3
 8005e5e:	3710      	adds	r7, #16
 8005e60:	46bd      	mov	sp, r7
 8005e62:	bd80      	pop	{r7, pc}

08005e64 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8005e64:	b580      	push	{r7, lr}
 8005e66:	b084      	sub	sp, #16
 8005e68:	af00      	add	r7, sp, #0
 8005e6a:	60f8      	str	r0, [r7, #12]
 8005e6c:	60b9      	str	r1, [r7, #8]
 8005e6e:	607a      	str	r2, [r7, #4]
 8005e70:	603b      	str	r3, [r7, #0]
 8005e72:	e071      	b.n	8005f58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	681b      	ldr	r3, [r3, #0]
 8005e78:	695b      	ldr	r3, [r3, #20]
 8005e7a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005e7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005e82:	d123      	bne.n	8005ecc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8005e84:	68fb      	ldr	r3, [r7, #12]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	681a      	ldr	r2, [r3, #0]
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	681b      	ldr	r3, [r3, #0]
 8005e8e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005e92:	601a      	str	r2, [r3, #0]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	681b      	ldr	r3, [r3, #0]
 8005e98:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005e9c:	615a      	str	r2, [r3, #20]
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	2200      	movs	r2, #0
 8005ea2:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	2220      	movs	r2, #32
 8005ea8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005eac:	68fb      	ldr	r3, [r7, #12]
 8005eae:	2200      	movs	r2, #0
 8005eb0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005eb8:	f043 0204 	orr.w	r2, r3, #4
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	641a      	str	r2, [r3, #64]	@ 0x40
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	2200      	movs	r2, #0
 8005ec4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ec8:	2301      	movs	r3, #1
 8005eca:	e067      	b.n	8005f9c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ed2:	d041      	beq.n	8005f58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005ed4:	f7fd fcc2 	bl	800385c <HAL_GetTick>
 8005ed8:	4602      	mov	r2, r0
 8005eda:	683b      	ldr	r3, [r7, #0]
 8005edc:	1ad3      	subs	r3, r2, r3
 8005ede:	687a      	ldr	r2, [r7, #4]
 8005ee0:	429a      	cmp	r2, r3
 8005ee2:	d302      	bcc.n	8005eea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d136      	bne.n	8005f58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005eea:	68bb      	ldr	r3, [r7, #8]
 8005eec:	0c1b      	lsrs	r3, r3, #16
 8005eee:	b2db      	uxtb	r3, r3
 8005ef0:	2b01      	cmp	r3, #1
 8005ef2:	d10c      	bne.n	8005f0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8005ef4:	68fb      	ldr	r3, [r7, #12]
 8005ef6:	681b      	ldr	r3, [r3, #0]
 8005ef8:	695b      	ldr	r3, [r3, #20]
 8005efa:	43da      	mvns	r2, r3
 8005efc:	68bb      	ldr	r3, [r7, #8]
 8005efe:	4013      	ands	r3, r2
 8005f00:	b29b      	uxth	r3, r3
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	bf14      	ite	ne
 8005f06:	2301      	movne	r3, #1
 8005f08:	2300      	moveq	r3, #0
 8005f0a:	b2db      	uxtb	r3, r3
 8005f0c:	e00b      	b.n	8005f26 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	699b      	ldr	r3, [r3, #24]
 8005f14:	43da      	mvns	r2, r3
 8005f16:	68bb      	ldr	r3, [r7, #8]
 8005f18:	4013      	ands	r3, r2
 8005f1a:	b29b      	uxth	r3, r3
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	bf14      	ite	ne
 8005f20:	2301      	movne	r3, #1
 8005f22:	2300      	moveq	r3, #0
 8005f24:	b2db      	uxtb	r3, r3
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	d016      	beq.n	8005f58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8005f2a:	68fb      	ldr	r3, [r7, #12]
 8005f2c:	2200      	movs	r2, #0
 8005f2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	2220      	movs	r2, #32
 8005f34:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	2200      	movs	r2, #0
 8005f3c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005f40:	68fb      	ldr	r3, [r7, #12]
 8005f42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f44:	f043 0220 	orr.w	r2, r3, #32
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	2200      	movs	r2, #0
 8005f50:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005f54:	2301      	movs	r3, #1
 8005f56:	e021      	b.n	8005f9c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8005f58:	68bb      	ldr	r3, [r7, #8]
 8005f5a:	0c1b      	lsrs	r3, r3, #16
 8005f5c:	b2db      	uxtb	r3, r3
 8005f5e:	2b01      	cmp	r3, #1
 8005f60:	d10c      	bne.n	8005f7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	695b      	ldr	r3, [r3, #20]
 8005f68:	43da      	mvns	r2, r3
 8005f6a:	68bb      	ldr	r3, [r7, #8]
 8005f6c:	4013      	ands	r3, r2
 8005f6e:	b29b      	uxth	r3, r3
 8005f70:	2b00      	cmp	r3, #0
 8005f72:	bf14      	ite	ne
 8005f74:	2301      	movne	r3, #1
 8005f76:	2300      	moveq	r3, #0
 8005f78:	b2db      	uxtb	r3, r3
 8005f7a:	e00b      	b.n	8005f94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	699b      	ldr	r3, [r3, #24]
 8005f82:	43da      	mvns	r2, r3
 8005f84:	68bb      	ldr	r3, [r7, #8]
 8005f86:	4013      	ands	r3, r2
 8005f88:	b29b      	uxth	r3, r3
 8005f8a:	2b00      	cmp	r3, #0
 8005f8c:	bf14      	ite	ne
 8005f8e:	2301      	movne	r3, #1
 8005f90:	2300      	moveq	r3, #0
 8005f92:	b2db      	uxtb	r3, r3
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	f47f af6d 	bne.w	8005e74 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8005f9a:	2300      	movs	r3, #0
 8005f9c:	4618      	mov	r0, r3
 8005f9e:	3710      	adds	r7, #16
 8005fa0:	46bd      	mov	sp, r7
 8005fa2:	bd80      	pop	{r7, pc}

08005fa4 <I2C_WaitOnTXEFlagUntilTimeout>:
 8005fa4:	b580      	push	{r7, lr}
 8005fa6:	b084      	sub	sp, #16
 8005fa8:	af00      	add	r7, sp, #0
 8005faa:	60f8      	str	r0, [r7, #12]
 8005fac:	60b9      	str	r1, [r7, #8]
 8005fae:	607a      	str	r2, [r7, #4]
 8005fb0:	e034      	b.n	800601c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005fb2:	68f8      	ldr	r0, [r7, #12]
 8005fb4:	f000 f886 	bl	80060c4 <I2C_IsAcknowledgeFailed>
 8005fb8:	4603      	mov	r3, r0
 8005fba:	2b00      	cmp	r3, #0
 8005fbc:	d001      	beq.n	8005fc2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8005fbe:	2301      	movs	r3, #1
 8005fc0:	e034      	b.n	800602c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8005fc2:	68bb      	ldr	r3, [r7, #8]
 8005fc4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fc8:	d028      	beq.n	800601c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005fca:	f7fd fc47 	bl	800385c <HAL_GetTick>
 8005fce:	4602      	mov	r2, r0
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	1ad3      	subs	r3, r2, r3
 8005fd4:	68ba      	ldr	r2, [r7, #8]
 8005fd6:	429a      	cmp	r2, r3
 8005fd8:	d302      	bcc.n	8005fe0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8005fda:	68bb      	ldr	r3, [r7, #8]
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d11d      	bne.n	800601c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005fe0:	68fb      	ldr	r3, [r7, #12]
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	695b      	ldr	r3, [r3, #20]
 8005fe6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005fea:	2b80      	cmp	r3, #128	@ 0x80
 8005fec:	d016      	beq.n	800601c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	2200      	movs	r2, #0
 8005ff2:	631a      	str	r2, [r3, #48]	@ 0x30
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	2220      	movs	r2, #32
 8005ff8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	2200      	movs	r2, #0
 8006000:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006004:	68fb      	ldr	r3, [r7, #12]
 8006006:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006008:	f043 0220 	orr.w	r2, r3, #32
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	2200      	movs	r2, #0
 8006014:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006018:	2301      	movs	r3, #1
 800601a:	e007      	b.n	800602c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	695b      	ldr	r3, [r3, #20]
 8006022:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006026:	2b80      	cmp	r3, #128	@ 0x80
 8006028:	d1c3      	bne.n	8005fb2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800602a:	2300      	movs	r3, #0
 800602c:	4618      	mov	r0, r3
 800602e:	3710      	adds	r7, #16
 8006030:	46bd      	mov	sp, r7
 8006032:	bd80      	pop	{r7, pc}

08006034 <I2C_WaitOnBTFFlagUntilTimeout>:
 8006034:	b580      	push	{r7, lr}
 8006036:	b084      	sub	sp, #16
 8006038:	af00      	add	r7, sp, #0
 800603a:	60f8      	str	r0, [r7, #12]
 800603c:	60b9      	str	r1, [r7, #8]
 800603e:	607a      	str	r2, [r7, #4]
 8006040:	e034      	b.n	80060ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006042:	68f8      	ldr	r0, [r7, #12]
 8006044:	f000 f83e 	bl	80060c4 <I2C_IsAcknowledgeFailed>
 8006048:	4603      	mov	r3, r0
 800604a:	2b00      	cmp	r3, #0
 800604c:	d001      	beq.n	8006052 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800604e:	2301      	movs	r3, #1
 8006050:	e034      	b.n	80060bc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8006052:	68bb      	ldr	r3, [r7, #8]
 8006054:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006058:	d028      	beq.n	80060ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800605a:	f7fd fbff 	bl	800385c <HAL_GetTick>
 800605e:	4602      	mov	r2, r0
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	1ad3      	subs	r3, r2, r3
 8006064:	68ba      	ldr	r2, [r7, #8]
 8006066:	429a      	cmp	r2, r3
 8006068:	d302      	bcc.n	8006070 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800606a:	68bb      	ldr	r3, [r7, #8]
 800606c:	2b00      	cmp	r3, #0
 800606e:	d11d      	bne.n	80060ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006070:	68fb      	ldr	r3, [r7, #12]
 8006072:	681b      	ldr	r3, [r3, #0]
 8006074:	695b      	ldr	r3, [r3, #20]
 8006076:	f003 0304 	and.w	r3, r3, #4
 800607a:	2b04      	cmp	r3, #4
 800607c:	d016      	beq.n	80060ac <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	2200      	movs	r2, #0
 8006082:	631a      	str	r2, [r3, #48]	@ 0x30
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	2220      	movs	r2, #32
 8006088:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	2200      	movs	r2, #0
 8006090:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006098:	f043 0220 	orr.w	r2, r3, #32
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	641a      	str	r2, [r3, #64]	@ 0x40
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	2200      	movs	r2, #0
 80060a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80060a8:	2301      	movs	r3, #1
 80060aa:	e007      	b.n	80060bc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80060ac:	68fb      	ldr	r3, [r7, #12]
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	695b      	ldr	r3, [r3, #20]
 80060b2:	f003 0304 	and.w	r3, r3, #4
 80060b6:	2b04      	cmp	r3, #4
 80060b8:	d1c3      	bne.n	8006042 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80060ba:	2300      	movs	r3, #0
 80060bc:	4618      	mov	r0, r3
 80060be:	3710      	adds	r7, #16
 80060c0:	46bd      	mov	sp, r7
 80060c2:	bd80      	pop	{r7, pc}

080060c4 <I2C_IsAcknowledgeFailed>:
 80060c4:	b480      	push	{r7}
 80060c6:	b083      	sub	sp, #12
 80060c8:	af00      	add	r7, sp, #0
 80060ca:	6078      	str	r0, [r7, #4]
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	695b      	ldr	r3, [r3, #20]
 80060d2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80060d6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80060da:	d11b      	bne.n	8006114 <I2C_IsAcknowledgeFailed+0x50>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80060e4:	615a      	str	r2, [r3, #20]
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	2200      	movs	r2, #0
 80060ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	2220      	movs	r2, #32
 80060f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	2200      	movs	r2, #0
 80060f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006100:	f043 0204 	orr.w	r2, r3, #4
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	641a      	str	r2, [r3, #64]	@ 0x40
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	2200      	movs	r2, #0
 800610c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006110:	2301      	movs	r3, #1
 8006112:	e000      	b.n	8006116 <I2C_IsAcknowledgeFailed+0x52>
 8006114:	2300      	movs	r3, #0
 8006116:	4618      	mov	r0, r3
 8006118:	370c      	adds	r7, #12
 800611a:	46bd      	mov	sp, r7
 800611c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006120:	4770      	bx	lr
	...

08006124 <HAL_RCC_OscConfig>:
 8006124:	b580      	push	{r7, lr}
 8006126:	b086      	sub	sp, #24
 8006128:	af00      	add	r7, sp, #0
 800612a:	6078      	str	r0, [r7, #4]
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	2b00      	cmp	r3, #0
 8006130:	d101      	bne.n	8006136 <HAL_RCC_OscConfig+0x12>
 8006132:	2301      	movs	r3, #1
 8006134:	e267      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	f003 0301 	and.w	r3, r3, #1
 800613e:	2b00      	cmp	r3, #0
 8006140:	d075      	beq.n	800622e <HAL_RCC_OscConfig+0x10a>
 8006142:	4b88      	ldr	r3, [pc, #544]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006144:	689b      	ldr	r3, [r3, #8]
 8006146:	f003 030c 	and.w	r3, r3, #12
 800614a:	2b04      	cmp	r3, #4
 800614c:	d00c      	beq.n	8006168 <HAL_RCC_OscConfig+0x44>
 800614e:	4b85      	ldr	r3, [pc, #532]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006150:	689b      	ldr	r3, [r3, #8]
 8006152:	f003 030c 	and.w	r3, r3, #12
 8006156:	2b08      	cmp	r3, #8
 8006158:	d112      	bne.n	8006180 <HAL_RCC_OscConfig+0x5c>
 800615a:	4b82      	ldr	r3, [pc, #520]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 800615c:	685b      	ldr	r3, [r3, #4]
 800615e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006162:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006166:	d10b      	bne.n	8006180 <HAL_RCC_OscConfig+0x5c>
 8006168:	4b7e      	ldr	r3, [pc, #504]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006170:	2b00      	cmp	r3, #0
 8006172:	d05b      	beq.n	800622c <HAL_RCC_OscConfig+0x108>
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	685b      	ldr	r3, [r3, #4]
 8006178:	2b00      	cmp	r3, #0
 800617a:	d157      	bne.n	800622c <HAL_RCC_OscConfig+0x108>
 800617c:	2301      	movs	r3, #1
 800617e:	e242      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006180:	687b      	ldr	r3, [r7, #4]
 8006182:	685b      	ldr	r3, [r3, #4]
 8006184:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006188:	d106      	bne.n	8006198 <HAL_RCC_OscConfig+0x74>
 800618a:	4b76      	ldr	r3, [pc, #472]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	4a75      	ldr	r2, [pc, #468]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006190:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006194:	6013      	str	r3, [r2, #0]
 8006196:	e01d      	b.n	80061d4 <HAL_RCC_OscConfig+0xb0>
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	685b      	ldr	r3, [r3, #4]
 800619c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80061a0:	d10c      	bne.n	80061bc <HAL_RCC_OscConfig+0x98>
 80061a2:	4b70      	ldr	r3, [pc, #448]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	4a6f      	ldr	r2, [pc, #444]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061a8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80061ac:	6013      	str	r3, [r2, #0]
 80061ae:	4b6d      	ldr	r3, [pc, #436]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	4a6c      	ldr	r2, [pc, #432]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061b4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80061b8:	6013      	str	r3, [r2, #0]
 80061ba:	e00b      	b.n	80061d4 <HAL_RCC_OscConfig+0xb0>
 80061bc:	4b69      	ldr	r3, [pc, #420]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	4a68      	ldr	r2, [pc, #416]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061c2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80061c6:	6013      	str	r3, [r2, #0]
 80061c8:	4b66      	ldr	r3, [pc, #408]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	4a65      	ldr	r2, [pc, #404]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061ce:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80061d2:	6013      	str	r3, [r2, #0]
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	685b      	ldr	r3, [r3, #4]
 80061d8:	2b00      	cmp	r3, #0
 80061da:	d013      	beq.n	8006204 <HAL_RCC_OscConfig+0xe0>
 80061dc:	f7fd fb3e 	bl	800385c <HAL_GetTick>
 80061e0:	6138      	str	r0, [r7, #16]
 80061e2:	e008      	b.n	80061f6 <HAL_RCC_OscConfig+0xd2>
 80061e4:	f7fd fb3a 	bl	800385c <HAL_GetTick>
 80061e8:	4602      	mov	r2, r0
 80061ea:	693b      	ldr	r3, [r7, #16]
 80061ec:	1ad3      	subs	r3, r2, r3
 80061ee:	2b64      	cmp	r3, #100	@ 0x64
 80061f0:	d901      	bls.n	80061f6 <HAL_RCC_OscConfig+0xd2>
 80061f2:	2303      	movs	r3, #3
 80061f4:	e207      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 80061f6:	4b5b      	ldr	r3, [pc, #364]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80061fe:	2b00      	cmp	r3, #0
 8006200:	d0f0      	beq.n	80061e4 <HAL_RCC_OscConfig+0xc0>
 8006202:	e014      	b.n	800622e <HAL_RCC_OscConfig+0x10a>
 8006204:	f7fd fb2a 	bl	800385c <HAL_GetTick>
 8006208:	6138      	str	r0, [r7, #16]
 800620a:	e008      	b.n	800621e <HAL_RCC_OscConfig+0xfa>
 800620c:	f7fd fb26 	bl	800385c <HAL_GetTick>
 8006210:	4602      	mov	r2, r0
 8006212:	693b      	ldr	r3, [r7, #16]
 8006214:	1ad3      	subs	r3, r2, r3
 8006216:	2b64      	cmp	r3, #100	@ 0x64
 8006218:	d901      	bls.n	800621e <HAL_RCC_OscConfig+0xfa>
 800621a:	2303      	movs	r3, #3
 800621c:	e1f3      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 800621e:	4b51      	ldr	r3, [pc, #324]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006226:	2b00      	cmp	r3, #0
 8006228:	d1f0      	bne.n	800620c <HAL_RCC_OscConfig+0xe8>
 800622a:	e000      	b.n	800622e <HAL_RCC_OscConfig+0x10a>
 800622c:	bf00      	nop
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	f003 0302 	and.w	r3, r3, #2
 8006236:	2b00      	cmp	r3, #0
 8006238:	d063      	beq.n	8006302 <HAL_RCC_OscConfig+0x1de>
 800623a:	4b4a      	ldr	r3, [pc, #296]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 800623c:	689b      	ldr	r3, [r3, #8]
 800623e:	f003 030c 	and.w	r3, r3, #12
 8006242:	2b00      	cmp	r3, #0
 8006244:	d00b      	beq.n	800625e <HAL_RCC_OscConfig+0x13a>
 8006246:	4b47      	ldr	r3, [pc, #284]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006248:	689b      	ldr	r3, [r3, #8]
 800624a:	f003 030c 	and.w	r3, r3, #12
 800624e:	2b08      	cmp	r3, #8
 8006250:	d11c      	bne.n	800628c <HAL_RCC_OscConfig+0x168>
 8006252:	4b44      	ldr	r3, [pc, #272]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006254:	685b      	ldr	r3, [r3, #4]
 8006256:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800625a:	2b00      	cmp	r3, #0
 800625c:	d116      	bne.n	800628c <HAL_RCC_OscConfig+0x168>
 800625e:	4b41      	ldr	r3, [pc, #260]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	f003 0302 	and.w	r3, r3, #2
 8006266:	2b00      	cmp	r3, #0
 8006268:	d005      	beq.n	8006276 <HAL_RCC_OscConfig+0x152>
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	68db      	ldr	r3, [r3, #12]
 800626e:	2b01      	cmp	r3, #1
 8006270:	d001      	beq.n	8006276 <HAL_RCC_OscConfig+0x152>
 8006272:	2301      	movs	r3, #1
 8006274:	e1c7      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006276:	4b3b      	ldr	r3, [pc, #236]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006278:	681b      	ldr	r3, [r3, #0]
 800627a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	691b      	ldr	r3, [r3, #16]
 8006282:	00db      	lsls	r3, r3, #3
 8006284:	4937      	ldr	r1, [pc, #220]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006286:	4313      	orrs	r3, r2
 8006288:	600b      	str	r3, [r1, #0]
 800628a:	e03a      	b.n	8006302 <HAL_RCC_OscConfig+0x1de>
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	68db      	ldr	r3, [r3, #12]
 8006290:	2b00      	cmp	r3, #0
 8006292:	d020      	beq.n	80062d6 <HAL_RCC_OscConfig+0x1b2>
 8006294:	4b34      	ldr	r3, [pc, #208]	@ (8006368 <HAL_RCC_OscConfig+0x244>)
 8006296:	2201      	movs	r2, #1
 8006298:	601a      	str	r2, [r3, #0]
 800629a:	f7fd fadf 	bl	800385c <HAL_GetTick>
 800629e:	6138      	str	r0, [r7, #16]
 80062a0:	e008      	b.n	80062b4 <HAL_RCC_OscConfig+0x190>
 80062a2:	f7fd fadb 	bl	800385c <HAL_GetTick>
 80062a6:	4602      	mov	r2, r0
 80062a8:	693b      	ldr	r3, [r7, #16]
 80062aa:	1ad3      	subs	r3, r2, r3
 80062ac:	2b02      	cmp	r3, #2
 80062ae:	d901      	bls.n	80062b4 <HAL_RCC_OscConfig+0x190>
 80062b0:	2303      	movs	r3, #3
 80062b2:	e1a8      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 80062b4:	4b2b      	ldr	r3, [pc, #172]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	f003 0302 	and.w	r3, r3, #2
 80062bc:	2b00      	cmp	r3, #0
 80062be:	d0f0      	beq.n	80062a2 <HAL_RCC_OscConfig+0x17e>
 80062c0:	4b28      	ldr	r3, [pc, #160]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	691b      	ldr	r3, [r3, #16]
 80062cc:	00db      	lsls	r3, r3, #3
 80062ce:	4925      	ldr	r1, [pc, #148]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80062d0:	4313      	orrs	r3, r2
 80062d2:	600b      	str	r3, [r1, #0]
 80062d4:	e015      	b.n	8006302 <HAL_RCC_OscConfig+0x1de>
 80062d6:	4b24      	ldr	r3, [pc, #144]	@ (8006368 <HAL_RCC_OscConfig+0x244>)
 80062d8:	2200      	movs	r2, #0
 80062da:	601a      	str	r2, [r3, #0]
 80062dc:	f7fd fabe 	bl	800385c <HAL_GetTick>
 80062e0:	6138      	str	r0, [r7, #16]
 80062e2:	e008      	b.n	80062f6 <HAL_RCC_OscConfig+0x1d2>
 80062e4:	f7fd faba 	bl	800385c <HAL_GetTick>
 80062e8:	4602      	mov	r2, r0
 80062ea:	693b      	ldr	r3, [r7, #16]
 80062ec:	1ad3      	subs	r3, r2, r3
 80062ee:	2b02      	cmp	r3, #2
 80062f0:	d901      	bls.n	80062f6 <HAL_RCC_OscConfig+0x1d2>
 80062f2:	2303      	movs	r3, #3
 80062f4:	e187      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 80062f6:	4b1b      	ldr	r3, [pc, #108]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 80062f8:	681b      	ldr	r3, [r3, #0]
 80062fa:	f003 0302 	and.w	r3, r3, #2
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d1f0      	bne.n	80062e4 <HAL_RCC_OscConfig+0x1c0>
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	f003 0308 	and.w	r3, r3, #8
 800630a:	2b00      	cmp	r3, #0
 800630c:	d036      	beq.n	800637c <HAL_RCC_OscConfig+0x258>
 800630e:	687b      	ldr	r3, [r7, #4]
 8006310:	695b      	ldr	r3, [r3, #20]
 8006312:	2b00      	cmp	r3, #0
 8006314:	d016      	beq.n	8006344 <HAL_RCC_OscConfig+0x220>
 8006316:	4b15      	ldr	r3, [pc, #84]	@ (800636c <HAL_RCC_OscConfig+0x248>)
 8006318:	2201      	movs	r2, #1
 800631a:	601a      	str	r2, [r3, #0]
 800631c:	f7fd fa9e 	bl	800385c <HAL_GetTick>
 8006320:	6138      	str	r0, [r7, #16]
 8006322:	e008      	b.n	8006336 <HAL_RCC_OscConfig+0x212>
 8006324:	f7fd fa9a 	bl	800385c <HAL_GetTick>
 8006328:	4602      	mov	r2, r0
 800632a:	693b      	ldr	r3, [r7, #16]
 800632c:	1ad3      	subs	r3, r2, r3
 800632e:	2b02      	cmp	r3, #2
 8006330:	d901      	bls.n	8006336 <HAL_RCC_OscConfig+0x212>
 8006332:	2303      	movs	r3, #3
 8006334:	e167      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006336:	4b0b      	ldr	r3, [pc, #44]	@ (8006364 <HAL_RCC_OscConfig+0x240>)
 8006338:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800633a:	f003 0302 	and.w	r3, r3, #2
 800633e:	2b00      	cmp	r3, #0
 8006340:	d0f0      	beq.n	8006324 <HAL_RCC_OscConfig+0x200>
 8006342:	e01b      	b.n	800637c <HAL_RCC_OscConfig+0x258>
 8006344:	4b09      	ldr	r3, [pc, #36]	@ (800636c <HAL_RCC_OscConfig+0x248>)
 8006346:	2200      	movs	r2, #0
 8006348:	601a      	str	r2, [r3, #0]
 800634a:	f7fd fa87 	bl	800385c <HAL_GetTick>
 800634e:	6138      	str	r0, [r7, #16]
 8006350:	e00e      	b.n	8006370 <HAL_RCC_OscConfig+0x24c>
 8006352:	f7fd fa83 	bl	800385c <HAL_GetTick>
 8006356:	4602      	mov	r2, r0
 8006358:	693b      	ldr	r3, [r7, #16]
 800635a:	1ad3      	subs	r3, r2, r3
 800635c:	2b02      	cmp	r3, #2
 800635e:	d907      	bls.n	8006370 <HAL_RCC_OscConfig+0x24c>
 8006360:	2303      	movs	r3, #3
 8006362:	e150      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006364:	40023800 	.word	0x40023800
 8006368:	42470000 	.word	0x42470000
 800636c:	42470e80 	.word	0x42470e80
 8006370:	4b88      	ldr	r3, [pc, #544]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006372:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006374:	f003 0302 	and.w	r3, r3, #2
 8006378:	2b00      	cmp	r3, #0
 800637a:	d1ea      	bne.n	8006352 <HAL_RCC_OscConfig+0x22e>
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	f003 0304 	and.w	r3, r3, #4
 8006384:	2b00      	cmp	r3, #0
 8006386:	f000 8097 	beq.w	80064b8 <HAL_RCC_OscConfig+0x394>
 800638a:	2300      	movs	r3, #0
 800638c:	75fb      	strb	r3, [r7, #23]
 800638e:	4b81      	ldr	r3, [pc, #516]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006390:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006392:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006396:	2b00      	cmp	r3, #0
 8006398:	d10f      	bne.n	80063ba <HAL_RCC_OscConfig+0x296>
 800639a:	2300      	movs	r3, #0
 800639c:	60bb      	str	r3, [r7, #8]
 800639e:	4b7d      	ldr	r3, [pc, #500]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80063a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80063a2:	4a7c      	ldr	r2, [pc, #496]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80063a4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80063a8:	6413      	str	r3, [r2, #64]	@ 0x40
 80063aa:	4b7a      	ldr	r3, [pc, #488]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80063ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80063ae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80063b2:	60bb      	str	r3, [r7, #8]
 80063b4:	68bb      	ldr	r3, [r7, #8]
 80063b6:	2301      	movs	r3, #1
 80063b8:	75fb      	strb	r3, [r7, #23]
 80063ba:	4b77      	ldr	r3, [pc, #476]	@ (8006598 <HAL_RCC_OscConfig+0x474>)
 80063bc:	681b      	ldr	r3, [r3, #0]
 80063be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d118      	bne.n	80063f8 <HAL_RCC_OscConfig+0x2d4>
 80063c6:	4b74      	ldr	r3, [pc, #464]	@ (8006598 <HAL_RCC_OscConfig+0x474>)
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	4a73      	ldr	r2, [pc, #460]	@ (8006598 <HAL_RCC_OscConfig+0x474>)
 80063cc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80063d0:	6013      	str	r3, [r2, #0]
 80063d2:	f7fd fa43 	bl	800385c <HAL_GetTick>
 80063d6:	6138      	str	r0, [r7, #16]
 80063d8:	e008      	b.n	80063ec <HAL_RCC_OscConfig+0x2c8>
 80063da:	f7fd fa3f 	bl	800385c <HAL_GetTick>
 80063de:	4602      	mov	r2, r0
 80063e0:	693b      	ldr	r3, [r7, #16]
 80063e2:	1ad3      	subs	r3, r2, r3
 80063e4:	2b02      	cmp	r3, #2
 80063e6:	d901      	bls.n	80063ec <HAL_RCC_OscConfig+0x2c8>
 80063e8:	2303      	movs	r3, #3
 80063ea:	e10c      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 80063ec:	4b6a      	ldr	r3, [pc, #424]	@ (8006598 <HAL_RCC_OscConfig+0x474>)
 80063ee:	681b      	ldr	r3, [r3, #0]
 80063f0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d0f0      	beq.n	80063da <HAL_RCC_OscConfig+0x2b6>
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	689b      	ldr	r3, [r3, #8]
 80063fc:	2b01      	cmp	r3, #1
 80063fe:	d106      	bne.n	800640e <HAL_RCC_OscConfig+0x2ea>
 8006400:	4b64      	ldr	r3, [pc, #400]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006402:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006404:	4a63      	ldr	r2, [pc, #396]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006406:	f043 0301 	orr.w	r3, r3, #1
 800640a:	6713      	str	r3, [r2, #112]	@ 0x70
 800640c:	e01c      	b.n	8006448 <HAL_RCC_OscConfig+0x324>
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	689b      	ldr	r3, [r3, #8]
 8006412:	2b05      	cmp	r3, #5
 8006414:	d10c      	bne.n	8006430 <HAL_RCC_OscConfig+0x30c>
 8006416:	4b5f      	ldr	r3, [pc, #380]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006418:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800641a:	4a5e      	ldr	r2, [pc, #376]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 800641c:	f043 0304 	orr.w	r3, r3, #4
 8006420:	6713      	str	r3, [r2, #112]	@ 0x70
 8006422:	4b5c      	ldr	r3, [pc, #368]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006424:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006426:	4a5b      	ldr	r2, [pc, #364]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006428:	f043 0301 	orr.w	r3, r3, #1
 800642c:	6713      	str	r3, [r2, #112]	@ 0x70
 800642e:	e00b      	b.n	8006448 <HAL_RCC_OscConfig+0x324>
 8006430:	4b58      	ldr	r3, [pc, #352]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006432:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006434:	4a57      	ldr	r2, [pc, #348]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006436:	f023 0301 	bic.w	r3, r3, #1
 800643a:	6713      	str	r3, [r2, #112]	@ 0x70
 800643c:	4b55      	ldr	r3, [pc, #340]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 800643e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006440:	4a54      	ldr	r2, [pc, #336]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006442:	f023 0304 	bic.w	r3, r3, #4
 8006446:	6713      	str	r3, [r2, #112]	@ 0x70
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	689b      	ldr	r3, [r3, #8]
 800644c:	2b00      	cmp	r3, #0
 800644e:	d015      	beq.n	800647c <HAL_RCC_OscConfig+0x358>
 8006450:	f7fd fa04 	bl	800385c <HAL_GetTick>
 8006454:	6138      	str	r0, [r7, #16]
 8006456:	e00a      	b.n	800646e <HAL_RCC_OscConfig+0x34a>
 8006458:	f7fd fa00 	bl	800385c <HAL_GetTick>
 800645c:	4602      	mov	r2, r0
 800645e:	693b      	ldr	r3, [r7, #16]
 8006460:	1ad3      	subs	r3, r2, r3
 8006462:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006466:	4293      	cmp	r3, r2
 8006468:	d901      	bls.n	800646e <HAL_RCC_OscConfig+0x34a>
 800646a:	2303      	movs	r3, #3
 800646c:	e0cb      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 800646e:	4b49      	ldr	r3, [pc, #292]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006470:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006472:	f003 0302 	and.w	r3, r3, #2
 8006476:	2b00      	cmp	r3, #0
 8006478:	d0ee      	beq.n	8006458 <HAL_RCC_OscConfig+0x334>
 800647a:	e014      	b.n	80064a6 <HAL_RCC_OscConfig+0x382>
 800647c:	f7fd f9ee 	bl	800385c <HAL_GetTick>
 8006480:	6138      	str	r0, [r7, #16]
 8006482:	e00a      	b.n	800649a <HAL_RCC_OscConfig+0x376>
 8006484:	f7fd f9ea 	bl	800385c <HAL_GetTick>
 8006488:	4602      	mov	r2, r0
 800648a:	693b      	ldr	r3, [r7, #16]
 800648c:	1ad3      	subs	r3, r2, r3
 800648e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006492:	4293      	cmp	r3, r2
 8006494:	d901      	bls.n	800649a <HAL_RCC_OscConfig+0x376>
 8006496:	2303      	movs	r3, #3
 8006498:	e0b5      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 800649a:	4b3e      	ldr	r3, [pc, #248]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 800649c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800649e:	f003 0302 	and.w	r3, r3, #2
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	d1ee      	bne.n	8006484 <HAL_RCC_OscConfig+0x360>
 80064a6:	7dfb      	ldrb	r3, [r7, #23]
 80064a8:	2b01      	cmp	r3, #1
 80064aa:	d105      	bne.n	80064b8 <HAL_RCC_OscConfig+0x394>
 80064ac:	4b39      	ldr	r3, [pc, #228]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80064ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80064b0:	4a38      	ldr	r2, [pc, #224]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80064b2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80064b6:	6413      	str	r3, [r2, #64]	@ 0x40
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	699b      	ldr	r3, [r3, #24]
 80064bc:	2b00      	cmp	r3, #0
 80064be:	f000 80a1 	beq.w	8006604 <HAL_RCC_OscConfig+0x4e0>
 80064c2:	4b34      	ldr	r3, [pc, #208]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80064c4:	689b      	ldr	r3, [r3, #8]
 80064c6:	f003 030c 	and.w	r3, r3, #12
 80064ca:	2b08      	cmp	r3, #8
 80064cc:	d05c      	beq.n	8006588 <HAL_RCC_OscConfig+0x464>
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	699b      	ldr	r3, [r3, #24]
 80064d2:	2b02      	cmp	r3, #2
 80064d4:	d141      	bne.n	800655a <HAL_RCC_OscConfig+0x436>
 80064d6:	4b31      	ldr	r3, [pc, #196]	@ (800659c <HAL_RCC_OscConfig+0x478>)
 80064d8:	2200      	movs	r2, #0
 80064da:	601a      	str	r2, [r3, #0]
 80064dc:	f7fd f9be 	bl	800385c <HAL_GetTick>
 80064e0:	6138      	str	r0, [r7, #16]
 80064e2:	e008      	b.n	80064f6 <HAL_RCC_OscConfig+0x3d2>
 80064e4:	f7fd f9ba 	bl	800385c <HAL_GetTick>
 80064e8:	4602      	mov	r2, r0
 80064ea:	693b      	ldr	r3, [r7, #16]
 80064ec:	1ad3      	subs	r3, r2, r3
 80064ee:	2b02      	cmp	r3, #2
 80064f0:	d901      	bls.n	80064f6 <HAL_RCC_OscConfig+0x3d2>
 80064f2:	2303      	movs	r3, #3
 80064f4:	e087      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 80064f6:	4b27      	ldr	r3, [pc, #156]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d1f0      	bne.n	80064e4 <HAL_RCC_OscConfig+0x3c0>
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	69da      	ldr	r2, [r3, #28]
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	6a1b      	ldr	r3, [r3, #32]
 800650a:	431a      	orrs	r2, r3
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006510:	019b      	lsls	r3, r3, #6
 8006512:	431a      	orrs	r2, r3
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006518:	085b      	lsrs	r3, r3, #1
 800651a:	3b01      	subs	r3, #1
 800651c:	041b      	lsls	r3, r3, #16
 800651e:	431a      	orrs	r2, r3
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006524:	061b      	lsls	r3, r3, #24
 8006526:	491b      	ldr	r1, [pc, #108]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 8006528:	4313      	orrs	r3, r2
 800652a:	604b      	str	r3, [r1, #4]
 800652c:	4b1b      	ldr	r3, [pc, #108]	@ (800659c <HAL_RCC_OscConfig+0x478>)
 800652e:	2201      	movs	r2, #1
 8006530:	601a      	str	r2, [r3, #0]
 8006532:	f7fd f993 	bl	800385c <HAL_GetTick>
 8006536:	6138      	str	r0, [r7, #16]
 8006538:	e008      	b.n	800654c <HAL_RCC_OscConfig+0x428>
 800653a:	f7fd f98f 	bl	800385c <HAL_GetTick>
 800653e:	4602      	mov	r2, r0
 8006540:	693b      	ldr	r3, [r7, #16]
 8006542:	1ad3      	subs	r3, r2, r3
 8006544:	2b02      	cmp	r3, #2
 8006546:	d901      	bls.n	800654c <HAL_RCC_OscConfig+0x428>
 8006548:	2303      	movs	r3, #3
 800654a:	e05c      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 800654c:	4b11      	ldr	r3, [pc, #68]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 800654e:	681b      	ldr	r3, [r3, #0]
 8006550:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006554:	2b00      	cmp	r3, #0
 8006556:	d0f0      	beq.n	800653a <HAL_RCC_OscConfig+0x416>
 8006558:	e054      	b.n	8006604 <HAL_RCC_OscConfig+0x4e0>
 800655a:	4b10      	ldr	r3, [pc, #64]	@ (800659c <HAL_RCC_OscConfig+0x478>)
 800655c:	2200      	movs	r2, #0
 800655e:	601a      	str	r2, [r3, #0]
 8006560:	f7fd f97c 	bl	800385c <HAL_GetTick>
 8006564:	6138      	str	r0, [r7, #16]
 8006566:	e008      	b.n	800657a <HAL_RCC_OscConfig+0x456>
 8006568:	f7fd f978 	bl	800385c <HAL_GetTick>
 800656c:	4602      	mov	r2, r0
 800656e:	693b      	ldr	r3, [r7, #16]
 8006570:	1ad3      	subs	r3, r2, r3
 8006572:	2b02      	cmp	r3, #2
 8006574:	d901      	bls.n	800657a <HAL_RCC_OscConfig+0x456>
 8006576:	2303      	movs	r3, #3
 8006578:	e045      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 800657a:	4b06      	ldr	r3, [pc, #24]	@ (8006594 <HAL_RCC_OscConfig+0x470>)
 800657c:	681b      	ldr	r3, [r3, #0]
 800657e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006582:	2b00      	cmp	r3, #0
 8006584:	d1f0      	bne.n	8006568 <HAL_RCC_OscConfig+0x444>
 8006586:	e03d      	b.n	8006604 <HAL_RCC_OscConfig+0x4e0>
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	699b      	ldr	r3, [r3, #24]
 800658c:	2b01      	cmp	r3, #1
 800658e:	d107      	bne.n	80065a0 <HAL_RCC_OscConfig+0x47c>
 8006590:	2301      	movs	r3, #1
 8006592:	e038      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006594:	40023800 	.word	0x40023800
 8006598:	40007000 	.word	0x40007000
 800659c:	42470060 	.word	0x42470060
 80065a0:	4b1b      	ldr	r3, [pc, #108]	@ (8006610 <HAL_RCC_OscConfig+0x4ec>)
 80065a2:	685b      	ldr	r3, [r3, #4]
 80065a4:	60fb      	str	r3, [r7, #12]
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	699b      	ldr	r3, [r3, #24]
 80065aa:	2b01      	cmp	r3, #1
 80065ac:	d028      	beq.n	8006600 <HAL_RCC_OscConfig+0x4dc>
 80065ae:	68fb      	ldr	r3, [r7, #12]
 80065b0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	69db      	ldr	r3, [r3, #28]
 80065b8:	429a      	cmp	r2, r3
 80065ba:	d121      	bne.n	8006600 <HAL_RCC_OscConfig+0x4dc>
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	6a1b      	ldr	r3, [r3, #32]
 80065c6:	429a      	cmp	r2, r3
 80065c8:	d11a      	bne.n	8006600 <HAL_RCC_OscConfig+0x4dc>
 80065ca:	68fa      	ldr	r2, [r7, #12]
 80065cc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80065d0:	4013      	ands	r3, r2
 80065d2:	687a      	ldr	r2, [r7, #4]
 80065d4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80065d6:	0192      	lsls	r2, r2, #6
 80065d8:	4293      	cmp	r3, r2
 80065da:	d111      	bne.n	8006600 <HAL_RCC_OscConfig+0x4dc>
 80065dc:	68fb      	ldr	r3, [r7, #12]
 80065de:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80065e6:	085b      	lsrs	r3, r3, #1
 80065e8:	3b01      	subs	r3, #1
 80065ea:	041b      	lsls	r3, r3, #16
 80065ec:	429a      	cmp	r2, r3
 80065ee:	d107      	bne.n	8006600 <HAL_RCC_OscConfig+0x4dc>
 80065f0:	68fb      	ldr	r3, [r7, #12]
 80065f2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80065fa:	061b      	lsls	r3, r3, #24
 80065fc:	429a      	cmp	r2, r3
 80065fe:	d001      	beq.n	8006604 <HAL_RCC_OscConfig+0x4e0>
 8006600:	2301      	movs	r3, #1
 8006602:	e000      	b.n	8006606 <HAL_RCC_OscConfig+0x4e2>
 8006604:	2300      	movs	r3, #0
 8006606:	4618      	mov	r0, r3
 8006608:	3718      	adds	r7, #24
 800660a:	46bd      	mov	sp, r7
 800660c:	bd80      	pop	{r7, pc}
 800660e:	bf00      	nop
 8006610:	40023800 	.word	0x40023800

08006614 <HAL_RCC_ClockConfig>:
 8006614:	b580      	push	{r7, lr}
 8006616:	b084      	sub	sp, #16
 8006618:	af00      	add	r7, sp, #0
 800661a:	6078      	str	r0, [r7, #4]
 800661c:	6039      	str	r1, [r7, #0]
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	2b00      	cmp	r3, #0
 8006622:	d101      	bne.n	8006628 <HAL_RCC_ClockConfig+0x14>
 8006624:	2301      	movs	r3, #1
 8006626:	e0cc      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 8006628:	4b68      	ldr	r3, [pc, #416]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	f003 0307 	and.w	r3, r3, #7
 8006630:	683a      	ldr	r2, [r7, #0]
 8006632:	429a      	cmp	r2, r3
 8006634:	d90c      	bls.n	8006650 <HAL_RCC_ClockConfig+0x3c>
 8006636:	4b65      	ldr	r3, [pc, #404]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 8006638:	683a      	ldr	r2, [r7, #0]
 800663a:	b2d2      	uxtb	r2, r2
 800663c:	701a      	strb	r2, [r3, #0]
 800663e:	4b63      	ldr	r3, [pc, #396]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	f003 0307 	and.w	r3, r3, #7
 8006646:	683a      	ldr	r2, [r7, #0]
 8006648:	429a      	cmp	r2, r3
 800664a:	d001      	beq.n	8006650 <HAL_RCC_ClockConfig+0x3c>
 800664c:	2301      	movs	r3, #1
 800664e:	e0b8      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	f003 0302 	and.w	r3, r3, #2
 8006658:	2b00      	cmp	r3, #0
 800665a:	d020      	beq.n	800669e <HAL_RCC_ClockConfig+0x8a>
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	f003 0304 	and.w	r3, r3, #4
 8006664:	2b00      	cmp	r3, #0
 8006666:	d005      	beq.n	8006674 <HAL_RCC_ClockConfig+0x60>
 8006668:	4b59      	ldr	r3, [pc, #356]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 800666a:	689b      	ldr	r3, [r3, #8]
 800666c:	4a58      	ldr	r2, [pc, #352]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 800666e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8006672:	6093      	str	r3, [r2, #8]
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	681b      	ldr	r3, [r3, #0]
 8006678:	f003 0308 	and.w	r3, r3, #8
 800667c:	2b00      	cmp	r3, #0
 800667e:	d005      	beq.n	800668c <HAL_RCC_ClockConfig+0x78>
 8006680:	4b53      	ldr	r3, [pc, #332]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006682:	689b      	ldr	r3, [r3, #8]
 8006684:	4a52      	ldr	r2, [pc, #328]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006686:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800668a:	6093      	str	r3, [r2, #8]
 800668c:	4b50      	ldr	r3, [pc, #320]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 800668e:	689b      	ldr	r3, [r3, #8]
 8006690:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	689b      	ldr	r3, [r3, #8]
 8006698:	494d      	ldr	r1, [pc, #308]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 800669a:	4313      	orrs	r3, r2
 800669c:	608b      	str	r3, [r1, #8]
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	f003 0301 	and.w	r3, r3, #1
 80066a6:	2b00      	cmp	r3, #0
 80066a8:	d044      	beq.n	8006734 <HAL_RCC_ClockConfig+0x120>
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	685b      	ldr	r3, [r3, #4]
 80066ae:	2b01      	cmp	r3, #1
 80066b0:	d107      	bne.n	80066c2 <HAL_RCC_ClockConfig+0xae>
 80066b2:	4b47      	ldr	r3, [pc, #284]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d119      	bne.n	80066f2 <HAL_RCC_ClockConfig+0xde>
 80066be:	2301      	movs	r3, #1
 80066c0:	e07f      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	685b      	ldr	r3, [r3, #4]
 80066c6:	2b02      	cmp	r3, #2
 80066c8:	d003      	beq.n	80066d2 <HAL_RCC_ClockConfig+0xbe>
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	685b      	ldr	r3, [r3, #4]
 80066ce:	2b03      	cmp	r3, #3
 80066d0:	d107      	bne.n	80066e2 <HAL_RCC_ClockConfig+0xce>
 80066d2:	4b3f      	ldr	r3, [pc, #252]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d109      	bne.n	80066f2 <HAL_RCC_ClockConfig+0xde>
 80066de:	2301      	movs	r3, #1
 80066e0:	e06f      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 80066e2:	4b3b      	ldr	r3, [pc, #236]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	f003 0302 	and.w	r3, r3, #2
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	d101      	bne.n	80066f2 <HAL_RCC_ClockConfig+0xde>
 80066ee:	2301      	movs	r3, #1
 80066f0:	e067      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 80066f2:	4b37      	ldr	r3, [pc, #220]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 80066f4:	689b      	ldr	r3, [r3, #8]
 80066f6:	f023 0203 	bic.w	r2, r3, #3
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	685b      	ldr	r3, [r3, #4]
 80066fe:	4934      	ldr	r1, [pc, #208]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006700:	4313      	orrs	r3, r2
 8006702:	608b      	str	r3, [r1, #8]
 8006704:	f7fd f8aa 	bl	800385c <HAL_GetTick>
 8006708:	60f8      	str	r0, [r7, #12]
 800670a:	e00a      	b.n	8006722 <HAL_RCC_ClockConfig+0x10e>
 800670c:	f7fd f8a6 	bl	800385c <HAL_GetTick>
 8006710:	4602      	mov	r2, r0
 8006712:	68fb      	ldr	r3, [r7, #12]
 8006714:	1ad3      	subs	r3, r2, r3
 8006716:	f241 3288 	movw	r2, #5000	@ 0x1388
 800671a:	4293      	cmp	r3, r2
 800671c:	d901      	bls.n	8006722 <HAL_RCC_ClockConfig+0x10e>
 800671e:	2303      	movs	r3, #3
 8006720:	e04f      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 8006722:	4b2b      	ldr	r3, [pc, #172]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006724:	689b      	ldr	r3, [r3, #8]
 8006726:	f003 020c 	and.w	r2, r3, #12
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	685b      	ldr	r3, [r3, #4]
 800672e:	009b      	lsls	r3, r3, #2
 8006730:	429a      	cmp	r2, r3
 8006732:	d1eb      	bne.n	800670c <HAL_RCC_ClockConfig+0xf8>
 8006734:	4b25      	ldr	r3, [pc, #148]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	f003 0307 	and.w	r3, r3, #7
 800673c:	683a      	ldr	r2, [r7, #0]
 800673e:	429a      	cmp	r2, r3
 8006740:	d20c      	bcs.n	800675c <HAL_RCC_ClockConfig+0x148>
 8006742:	4b22      	ldr	r3, [pc, #136]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 8006744:	683a      	ldr	r2, [r7, #0]
 8006746:	b2d2      	uxtb	r2, r2
 8006748:	701a      	strb	r2, [r3, #0]
 800674a:	4b20      	ldr	r3, [pc, #128]	@ (80067cc <HAL_RCC_ClockConfig+0x1b8>)
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f003 0307 	and.w	r3, r3, #7
 8006752:	683a      	ldr	r2, [r7, #0]
 8006754:	429a      	cmp	r2, r3
 8006756:	d001      	beq.n	800675c <HAL_RCC_ClockConfig+0x148>
 8006758:	2301      	movs	r3, #1
 800675a:	e032      	b.n	80067c2 <HAL_RCC_ClockConfig+0x1ae>
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	f003 0304 	and.w	r3, r3, #4
 8006764:	2b00      	cmp	r3, #0
 8006766:	d008      	beq.n	800677a <HAL_RCC_ClockConfig+0x166>
 8006768:	4b19      	ldr	r3, [pc, #100]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 800676a:	689b      	ldr	r3, [r3, #8]
 800676c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	68db      	ldr	r3, [r3, #12]
 8006774:	4916      	ldr	r1, [pc, #88]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006776:	4313      	orrs	r3, r2
 8006778:	608b      	str	r3, [r1, #8]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	f003 0308 	and.w	r3, r3, #8
 8006782:	2b00      	cmp	r3, #0
 8006784:	d009      	beq.n	800679a <HAL_RCC_ClockConfig+0x186>
 8006786:	4b12      	ldr	r3, [pc, #72]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006788:	689b      	ldr	r3, [r3, #8]
 800678a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	691b      	ldr	r3, [r3, #16]
 8006792:	00db      	lsls	r3, r3, #3
 8006794:	490e      	ldr	r1, [pc, #56]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 8006796:	4313      	orrs	r3, r2
 8006798:	608b      	str	r3, [r1, #8]
 800679a:	f000 f821 	bl	80067e0 <HAL_RCC_GetSysClockFreq>
 800679e:	4602      	mov	r2, r0
 80067a0:	4b0b      	ldr	r3, [pc, #44]	@ (80067d0 <HAL_RCC_ClockConfig+0x1bc>)
 80067a2:	689b      	ldr	r3, [r3, #8]
 80067a4:	091b      	lsrs	r3, r3, #4
 80067a6:	f003 030f 	and.w	r3, r3, #15
 80067aa:	490a      	ldr	r1, [pc, #40]	@ (80067d4 <HAL_RCC_ClockConfig+0x1c0>)
 80067ac:	5ccb      	ldrb	r3, [r1, r3]
 80067ae:	fa22 f303 	lsr.w	r3, r2, r3
 80067b2:	4a09      	ldr	r2, [pc, #36]	@ (80067d8 <HAL_RCC_ClockConfig+0x1c4>)
 80067b4:	6013      	str	r3, [r2, #0]
 80067b6:	4b09      	ldr	r3, [pc, #36]	@ (80067dc <HAL_RCC_ClockConfig+0x1c8>)
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	4618      	mov	r0, r3
 80067bc:	f7fc fc54 	bl	8003068 <HAL_InitTick>
 80067c0:	2300      	movs	r3, #0
 80067c2:	4618      	mov	r0, r3
 80067c4:	3710      	adds	r7, #16
 80067c6:	46bd      	mov	sp, r7
 80067c8:	bd80      	pop	{r7, pc}
 80067ca:	bf00      	nop
 80067cc:	40023c00 	.word	0x40023c00
 80067d0:	40023800 	.word	0x40023800
 80067d4:	0800afe8 	.word	0x0800afe8
 80067d8:	20000004 	.word	0x20000004
 80067dc:	20000008 	.word	0x20000008

080067e0 <HAL_RCC_GetSysClockFreq>:
 80067e0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80067e4:	b090      	sub	sp, #64	@ 0x40
 80067e6:	af00      	add	r7, sp, #0
 80067e8:	2300      	movs	r3, #0
 80067ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80067ec:	2300      	movs	r3, #0
 80067ee:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067f0:	2300      	movs	r3, #0
 80067f2:	633b      	str	r3, [r7, #48]	@ 0x30
 80067f4:	2300      	movs	r3, #0
 80067f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80067f8:	4b59      	ldr	r3, [pc, #356]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 80067fa:	689b      	ldr	r3, [r3, #8]
 80067fc:	f003 030c 	and.w	r3, r3, #12
 8006800:	2b08      	cmp	r3, #8
 8006802:	d00d      	beq.n	8006820 <HAL_RCC_GetSysClockFreq+0x40>
 8006804:	2b08      	cmp	r3, #8
 8006806:	f200 80a1 	bhi.w	800694c <HAL_RCC_GetSysClockFreq+0x16c>
 800680a:	2b00      	cmp	r3, #0
 800680c:	d002      	beq.n	8006814 <HAL_RCC_GetSysClockFreq+0x34>
 800680e:	2b04      	cmp	r3, #4
 8006810:	d003      	beq.n	800681a <HAL_RCC_GetSysClockFreq+0x3a>
 8006812:	e09b      	b.n	800694c <HAL_RCC_GetSysClockFreq+0x16c>
 8006814:	4b53      	ldr	r3, [pc, #332]	@ (8006964 <HAL_RCC_GetSysClockFreq+0x184>)
 8006816:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006818:	e09b      	b.n	8006952 <HAL_RCC_GetSysClockFreq+0x172>
 800681a:	4b53      	ldr	r3, [pc, #332]	@ (8006968 <HAL_RCC_GetSysClockFreq+0x188>)
 800681c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800681e:	e098      	b.n	8006952 <HAL_RCC_GetSysClockFreq+0x172>
 8006820:	4b4f      	ldr	r3, [pc, #316]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 8006822:	685b      	ldr	r3, [r3, #4]
 8006824:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006828:	637b      	str	r3, [r7, #52]	@ 0x34
 800682a:	4b4d      	ldr	r3, [pc, #308]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 800682c:	685b      	ldr	r3, [r3, #4]
 800682e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006832:	2b00      	cmp	r3, #0
 8006834:	d028      	beq.n	8006888 <HAL_RCC_GetSysClockFreq+0xa8>
 8006836:	4b4a      	ldr	r3, [pc, #296]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 8006838:	685b      	ldr	r3, [r3, #4]
 800683a:	099b      	lsrs	r3, r3, #6
 800683c:	2200      	movs	r2, #0
 800683e:	623b      	str	r3, [r7, #32]
 8006840:	627a      	str	r2, [r7, #36]	@ 0x24
 8006842:	6a3b      	ldr	r3, [r7, #32]
 8006844:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8006848:	2100      	movs	r1, #0
 800684a:	4b47      	ldr	r3, [pc, #284]	@ (8006968 <HAL_RCC_GetSysClockFreq+0x188>)
 800684c:	fb03 f201 	mul.w	r2, r3, r1
 8006850:	2300      	movs	r3, #0
 8006852:	fb00 f303 	mul.w	r3, r0, r3
 8006856:	4413      	add	r3, r2
 8006858:	4a43      	ldr	r2, [pc, #268]	@ (8006968 <HAL_RCC_GetSysClockFreq+0x188>)
 800685a:	fba0 1202 	umull	r1, r2, r0, r2
 800685e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006860:	460a      	mov	r2, r1
 8006862:	62ba      	str	r2, [r7, #40]	@ 0x28
 8006864:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006866:	4413      	add	r3, r2
 8006868:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800686a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800686c:	2200      	movs	r2, #0
 800686e:	61bb      	str	r3, [r7, #24]
 8006870:	61fa      	str	r2, [r7, #28]
 8006872:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006876:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800687a:	f7fa f8e7 	bl	8000a4c <__aeabi_uldivmod>
 800687e:	4602      	mov	r2, r0
 8006880:	460b      	mov	r3, r1
 8006882:	4613      	mov	r3, r2
 8006884:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006886:	e053      	b.n	8006930 <HAL_RCC_GetSysClockFreq+0x150>
 8006888:	4b35      	ldr	r3, [pc, #212]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 800688a:	685b      	ldr	r3, [r3, #4]
 800688c:	099b      	lsrs	r3, r3, #6
 800688e:	2200      	movs	r2, #0
 8006890:	613b      	str	r3, [r7, #16]
 8006892:	617a      	str	r2, [r7, #20]
 8006894:	693b      	ldr	r3, [r7, #16]
 8006896:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800689a:	f04f 0b00 	mov.w	fp, #0
 800689e:	4652      	mov	r2, sl
 80068a0:	465b      	mov	r3, fp
 80068a2:	f04f 0000 	mov.w	r0, #0
 80068a6:	f04f 0100 	mov.w	r1, #0
 80068aa:	0159      	lsls	r1, r3, #5
 80068ac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80068b0:	0150      	lsls	r0, r2, #5
 80068b2:	4602      	mov	r2, r0
 80068b4:	460b      	mov	r3, r1
 80068b6:	ebb2 080a 	subs.w	r8, r2, sl
 80068ba:	eb63 090b 	sbc.w	r9, r3, fp
 80068be:	f04f 0200 	mov.w	r2, #0
 80068c2:	f04f 0300 	mov.w	r3, #0
 80068c6:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80068ca:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80068ce:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80068d2:	ebb2 0408 	subs.w	r4, r2, r8
 80068d6:	eb63 0509 	sbc.w	r5, r3, r9
 80068da:	f04f 0200 	mov.w	r2, #0
 80068de:	f04f 0300 	mov.w	r3, #0
 80068e2:	00eb      	lsls	r3, r5, #3
 80068e4:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80068e8:	00e2      	lsls	r2, r4, #3
 80068ea:	4614      	mov	r4, r2
 80068ec:	461d      	mov	r5, r3
 80068ee:	eb14 030a 	adds.w	r3, r4, sl
 80068f2:	603b      	str	r3, [r7, #0]
 80068f4:	eb45 030b 	adc.w	r3, r5, fp
 80068f8:	607b      	str	r3, [r7, #4]
 80068fa:	f04f 0200 	mov.w	r2, #0
 80068fe:	f04f 0300 	mov.w	r3, #0
 8006902:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006906:	4629      	mov	r1, r5
 8006908:	028b      	lsls	r3, r1, #10
 800690a:	4621      	mov	r1, r4
 800690c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006910:	4621      	mov	r1, r4
 8006912:	028a      	lsls	r2, r1, #10
 8006914:	4610      	mov	r0, r2
 8006916:	4619      	mov	r1, r3
 8006918:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800691a:	2200      	movs	r2, #0
 800691c:	60bb      	str	r3, [r7, #8]
 800691e:	60fa      	str	r2, [r7, #12]
 8006920:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006924:	f7fa f892 	bl	8000a4c <__aeabi_uldivmod>
 8006928:	4602      	mov	r2, r0
 800692a:	460b      	mov	r3, r1
 800692c:	4613      	mov	r3, r2
 800692e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006930:	4b0b      	ldr	r3, [pc, #44]	@ (8006960 <HAL_RCC_GetSysClockFreq+0x180>)
 8006932:	685b      	ldr	r3, [r3, #4]
 8006934:	0c1b      	lsrs	r3, r3, #16
 8006936:	f003 0303 	and.w	r3, r3, #3
 800693a:	3301      	adds	r3, #1
 800693c:	005b      	lsls	r3, r3, #1
 800693e:	633b      	str	r3, [r7, #48]	@ 0x30
 8006940:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8006942:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006944:	fbb2 f3f3 	udiv	r3, r2, r3
 8006948:	63bb      	str	r3, [r7, #56]	@ 0x38
 800694a:	e002      	b.n	8006952 <HAL_RCC_GetSysClockFreq+0x172>
 800694c:	4b05      	ldr	r3, [pc, #20]	@ (8006964 <HAL_RCC_GetSysClockFreq+0x184>)
 800694e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006950:	bf00      	nop
 8006952:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006954:	4618      	mov	r0, r3
 8006956:	3740      	adds	r7, #64	@ 0x40
 8006958:	46bd      	mov	sp, r7
 800695a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800695e:	bf00      	nop
 8006960:	40023800 	.word	0x40023800
 8006964:	00f42400 	.word	0x00f42400
 8006968:	017d7840 	.word	0x017d7840

0800696c <HAL_RCC_GetHCLKFreq>:
 800696c:	b480      	push	{r7}
 800696e:	af00      	add	r7, sp, #0
 8006970:	4b03      	ldr	r3, [pc, #12]	@ (8006980 <HAL_RCC_GetHCLKFreq+0x14>)
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	4618      	mov	r0, r3
 8006976:	46bd      	mov	sp, r7
 8006978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800697c:	4770      	bx	lr
 800697e:	bf00      	nop
 8006980:	20000004 	.word	0x20000004

08006984 <HAL_RCC_GetPCLK1Freq>:
 8006984:	b580      	push	{r7, lr}
 8006986:	af00      	add	r7, sp, #0
 8006988:	f7ff fff0 	bl	800696c <HAL_RCC_GetHCLKFreq>
 800698c:	4602      	mov	r2, r0
 800698e:	4b05      	ldr	r3, [pc, #20]	@ (80069a4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006990:	689b      	ldr	r3, [r3, #8]
 8006992:	0a9b      	lsrs	r3, r3, #10
 8006994:	f003 0307 	and.w	r3, r3, #7
 8006998:	4903      	ldr	r1, [pc, #12]	@ (80069a8 <HAL_RCC_GetPCLK1Freq+0x24>)
 800699a:	5ccb      	ldrb	r3, [r1, r3]
 800699c:	fa22 f303 	lsr.w	r3, r2, r3
 80069a0:	4618      	mov	r0, r3
 80069a2:	bd80      	pop	{r7, pc}
 80069a4:	40023800 	.word	0x40023800
 80069a8:	0800aff8 	.word	0x0800aff8

080069ac <HAL_RCC_GetPCLK2Freq>:
 80069ac:	b580      	push	{r7, lr}
 80069ae:	af00      	add	r7, sp, #0
 80069b0:	f7ff ffdc 	bl	800696c <HAL_RCC_GetHCLKFreq>
 80069b4:	4602      	mov	r2, r0
 80069b6:	4b05      	ldr	r3, [pc, #20]	@ (80069cc <HAL_RCC_GetPCLK2Freq+0x20>)
 80069b8:	689b      	ldr	r3, [r3, #8]
 80069ba:	0b5b      	lsrs	r3, r3, #13
 80069bc:	f003 0307 	and.w	r3, r3, #7
 80069c0:	4903      	ldr	r1, [pc, #12]	@ (80069d0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80069c2:	5ccb      	ldrb	r3, [r1, r3]
 80069c4:	fa22 f303 	lsr.w	r3, r2, r3
 80069c8:	4618      	mov	r0, r3
 80069ca:	bd80      	pop	{r7, pc}
 80069cc:	40023800 	.word	0x40023800
 80069d0:	0800aff8 	.word	0x0800aff8

080069d4 <HAL_RCC_GetClockConfig>:
 80069d4:	b480      	push	{r7}
 80069d6:	b083      	sub	sp, #12
 80069d8:	af00      	add	r7, sp, #0
 80069da:	6078      	str	r0, [r7, #4]
 80069dc:	6039      	str	r1, [r7, #0]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	220f      	movs	r2, #15
 80069e2:	601a      	str	r2, [r3, #0]
 80069e4:	4b12      	ldr	r3, [pc, #72]	@ (8006a30 <HAL_RCC_GetClockConfig+0x5c>)
 80069e6:	689b      	ldr	r3, [r3, #8]
 80069e8:	f003 0203 	and.w	r2, r3, #3
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	605a      	str	r2, [r3, #4]
 80069f0:	4b0f      	ldr	r3, [pc, #60]	@ (8006a30 <HAL_RCC_GetClockConfig+0x5c>)
 80069f2:	689b      	ldr	r3, [r3, #8]
 80069f4:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	609a      	str	r2, [r3, #8]
 80069fc:	4b0c      	ldr	r3, [pc, #48]	@ (8006a30 <HAL_RCC_GetClockConfig+0x5c>)
 80069fe:	689b      	ldr	r3, [r3, #8]
 8006a00:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	60da      	str	r2, [r3, #12]
 8006a08:	4b09      	ldr	r3, [pc, #36]	@ (8006a30 <HAL_RCC_GetClockConfig+0x5c>)
 8006a0a:	689b      	ldr	r3, [r3, #8]
 8006a0c:	08db      	lsrs	r3, r3, #3
 8006a0e:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	611a      	str	r2, [r3, #16]
 8006a16:	4b07      	ldr	r3, [pc, #28]	@ (8006a34 <HAL_RCC_GetClockConfig+0x60>)
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f003 0207 	and.w	r2, r3, #7
 8006a1e:	683b      	ldr	r3, [r7, #0]
 8006a20:	601a      	str	r2, [r3, #0]
 8006a22:	bf00      	nop
 8006a24:	370c      	adds	r7, #12
 8006a26:	46bd      	mov	sp, r7
 8006a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a2c:	4770      	bx	lr
 8006a2e:	bf00      	nop
 8006a30:	40023800 	.word	0x40023800
 8006a34:	40023c00 	.word	0x40023c00

08006a38 <HAL_RCCEx_PeriphCLKConfig>:
 8006a38:	b580      	push	{r7, lr}
 8006a3a:	b086      	sub	sp, #24
 8006a3c:	af00      	add	r7, sp, #0
 8006a3e:	6078      	str	r0, [r7, #4]
 8006a40:	2300      	movs	r3, #0
 8006a42:	617b      	str	r3, [r7, #20]
 8006a44:	2300      	movs	r3, #0
 8006a46:	613b      	str	r3, [r7, #16]
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	f003 0301 	and.w	r3, r3, #1
 8006a50:	2b00      	cmp	r3, #0
 8006a52:	d105      	bne.n	8006a60 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	f003 0304 	and.w	r3, r3, #4
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	d035      	beq.n	8006acc <HAL_RCCEx_PeriphCLKConfig+0x94>
 8006a60:	4b62      	ldr	r3, [pc, #392]	@ (8006bec <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8006a62:	2200      	movs	r2, #0
 8006a64:	601a      	str	r2, [r3, #0]
 8006a66:	f7fc fef9 	bl	800385c <HAL_GetTick>
 8006a6a:	6178      	str	r0, [r7, #20]
 8006a6c:	e008      	b.n	8006a80 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8006a6e:	f7fc fef5 	bl	800385c <HAL_GetTick>
 8006a72:	4602      	mov	r2, r0
 8006a74:	697b      	ldr	r3, [r7, #20]
 8006a76:	1ad3      	subs	r3, r2, r3
 8006a78:	2b02      	cmp	r3, #2
 8006a7a:	d901      	bls.n	8006a80 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8006a7c:	2303      	movs	r3, #3
 8006a7e:	e0b0      	b.n	8006be2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8006a80:	4b5b      	ldr	r3, [pc, #364]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006a82:	681b      	ldr	r3, [r3, #0]
 8006a84:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006a88:	2b00      	cmp	r3, #0
 8006a8a:	d1f0      	bne.n	8006a6e <HAL_RCCEx_PeriphCLKConfig+0x36>
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	685b      	ldr	r3, [r3, #4]
 8006a90:	019a      	lsls	r2, r3, #6
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	689b      	ldr	r3, [r3, #8]
 8006a96:	071b      	lsls	r3, r3, #28
 8006a98:	4955      	ldr	r1, [pc, #340]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006a9a:	4313      	orrs	r3, r2
 8006a9c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8006aa0:	4b52      	ldr	r3, [pc, #328]	@ (8006bec <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8006aa2:	2201      	movs	r2, #1
 8006aa4:	601a      	str	r2, [r3, #0]
 8006aa6:	f7fc fed9 	bl	800385c <HAL_GetTick>
 8006aaa:	6178      	str	r0, [r7, #20]
 8006aac:	e008      	b.n	8006ac0 <HAL_RCCEx_PeriphCLKConfig+0x88>
 8006aae:	f7fc fed5 	bl	800385c <HAL_GetTick>
 8006ab2:	4602      	mov	r2, r0
 8006ab4:	697b      	ldr	r3, [r7, #20]
 8006ab6:	1ad3      	subs	r3, r2, r3
 8006ab8:	2b02      	cmp	r3, #2
 8006aba:	d901      	bls.n	8006ac0 <HAL_RCCEx_PeriphCLKConfig+0x88>
 8006abc:	2303      	movs	r3, #3
 8006abe:	e090      	b.n	8006be2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8006ac0:	4b4b      	ldr	r3, [pc, #300]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	d0f0      	beq.n	8006aae <HAL_RCCEx_PeriphCLKConfig+0x76>
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	681b      	ldr	r3, [r3, #0]
 8006ad0:	f003 0302 	and.w	r3, r3, #2
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	f000 8083 	beq.w	8006be0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8006ada:	2300      	movs	r3, #0
 8006adc:	60fb      	str	r3, [r7, #12]
 8006ade:	4b44      	ldr	r3, [pc, #272]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ae0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006ae2:	4a43      	ldr	r2, [pc, #268]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ae4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006ae8:	6413      	str	r3, [r2, #64]	@ 0x40
 8006aea:	4b41      	ldr	r3, [pc, #260]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006aec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006aee:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006af2:	60fb      	str	r3, [r7, #12]
 8006af4:	68fb      	ldr	r3, [r7, #12]
 8006af6:	4b3f      	ldr	r3, [pc, #252]	@ (8006bf4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	4a3e      	ldr	r2, [pc, #248]	@ (8006bf4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006afc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006b00:	6013      	str	r3, [r2, #0]
 8006b02:	f7fc feab 	bl	800385c <HAL_GetTick>
 8006b06:	6178      	str	r0, [r7, #20]
 8006b08:	e008      	b.n	8006b1c <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8006b0a:	f7fc fea7 	bl	800385c <HAL_GetTick>
 8006b0e:	4602      	mov	r2, r0
 8006b10:	697b      	ldr	r3, [r7, #20]
 8006b12:	1ad3      	subs	r3, r2, r3
 8006b14:	2b02      	cmp	r3, #2
 8006b16:	d901      	bls.n	8006b1c <HAL_RCCEx_PeriphCLKConfig+0xe4>
 8006b18:	2303      	movs	r3, #3
 8006b1a:	e062      	b.n	8006be2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8006b1c:	4b35      	ldr	r3, [pc, #212]	@ (8006bf4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8006b1e:	681b      	ldr	r3, [r3, #0]
 8006b20:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	d0f0      	beq.n	8006b0a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8006b28:	4b31      	ldr	r3, [pc, #196]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006b2a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006b2c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006b30:	613b      	str	r3, [r7, #16]
 8006b32:	693b      	ldr	r3, [r7, #16]
 8006b34:	2b00      	cmp	r3, #0
 8006b36:	d02f      	beq.n	8006b98 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	68db      	ldr	r3, [r3, #12]
 8006b3c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006b40:	693a      	ldr	r2, [r7, #16]
 8006b42:	429a      	cmp	r2, r3
 8006b44:	d028      	beq.n	8006b98 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8006b46:	4b2a      	ldr	r3, [pc, #168]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006b48:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006b4a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006b4e:	613b      	str	r3, [r7, #16]
 8006b50:	4b29      	ldr	r3, [pc, #164]	@ (8006bf8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8006b52:	2201      	movs	r2, #1
 8006b54:	601a      	str	r2, [r3, #0]
 8006b56:	4b28      	ldr	r3, [pc, #160]	@ (8006bf8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8006b58:	2200      	movs	r2, #0
 8006b5a:	601a      	str	r2, [r3, #0]
 8006b5c:	4a24      	ldr	r2, [pc, #144]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006b5e:	693b      	ldr	r3, [r7, #16]
 8006b60:	6713      	str	r3, [r2, #112]	@ 0x70
 8006b62:	4b23      	ldr	r3, [pc, #140]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006b64:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006b66:	f003 0301 	and.w	r3, r3, #1
 8006b6a:	2b01      	cmp	r3, #1
 8006b6c:	d114      	bne.n	8006b98 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8006b6e:	f7fc fe75 	bl	800385c <HAL_GetTick>
 8006b72:	6178      	str	r0, [r7, #20]
 8006b74:	e00a      	b.n	8006b8c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8006b76:	f7fc fe71 	bl	800385c <HAL_GetTick>
 8006b7a:	4602      	mov	r2, r0
 8006b7c:	697b      	ldr	r3, [r7, #20]
 8006b7e:	1ad3      	subs	r3, r2, r3
 8006b80:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006b84:	4293      	cmp	r3, r2
 8006b86:	d901      	bls.n	8006b8c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8006b88:	2303      	movs	r3, #3
 8006b8a:	e02a      	b.n	8006be2 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8006b8c:	4b18      	ldr	r3, [pc, #96]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006b8e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006b90:	f003 0302 	and.w	r3, r3, #2
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d0ee      	beq.n	8006b76 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	68db      	ldr	r3, [r3, #12]
 8006b9c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006ba0:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8006ba4:	d10d      	bne.n	8006bc2 <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8006ba6:	4b12      	ldr	r3, [pc, #72]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006ba8:	689b      	ldr	r3, [r3, #8]
 8006baa:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	68db      	ldr	r3, [r3, #12]
 8006bb2:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8006bb6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006bba:	490d      	ldr	r1, [pc, #52]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006bbc:	4313      	orrs	r3, r2
 8006bbe:	608b      	str	r3, [r1, #8]
 8006bc0:	e005      	b.n	8006bce <HAL_RCCEx_PeriphCLKConfig+0x196>
 8006bc2:	4b0b      	ldr	r3, [pc, #44]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006bc4:	689b      	ldr	r3, [r3, #8]
 8006bc6:	4a0a      	ldr	r2, [pc, #40]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006bc8:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8006bcc:	6093      	str	r3, [r2, #8]
 8006bce:	4b08      	ldr	r3, [pc, #32]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006bd0:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	68db      	ldr	r3, [r3, #12]
 8006bd6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006bda:	4905      	ldr	r1, [pc, #20]	@ (8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	670b      	str	r3, [r1, #112]	@ 0x70
 8006be0:	2300      	movs	r3, #0
 8006be2:	4618      	mov	r0, r3
 8006be4:	3718      	adds	r7, #24
 8006be6:	46bd      	mov	sp, r7
 8006be8:	bd80      	pop	{r7, pc}
 8006bea:	bf00      	nop
 8006bec:	42470068 	.word	0x42470068
 8006bf0:	40023800 	.word	0x40023800
 8006bf4:	40007000 	.word	0x40007000
 8006bf8:	42470e40 	.word	0x42470e40

08006bfc <HAL_RTC_Init>:
 8006bfc:	b580      	push	{r7, lr}
 8006bfe:	b084      	sub	sp, #16
 8006c00:	af00      	add	r7, sp, #0
 8006c02:	6078      	str	r0, [r7, #4]
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	2b00      	cmp	r3, #0
 8006c08:	d101      	bne.n	8006c0e <HAL_RTC_Init+0x12>
 8006c0a:	2301      	movs	r3, #1
 8006c0c:	e073      	b.n	8006cf6 <HAL_RTC_Init+0xfa>
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	7f5b      	ldrb	r3, [r3, #29]
 8006c12:	b2db      	uxtb	r3, r3
 8006c14:	2b00      	cmp	r3, #0
 8006c16:	d105      	bne.n	8006c24 <HAL_RTC_Init+0x28>
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	2200      	movs	r2, #0
 8006c1c:	771a      	strb	r2, [r3, #28]
 8006c1e:	6878      	ldr	r0, [r7, #4]
 8006c20:	f7fc f990 	bl	8002f44 <HAL_RTC_MspInit>
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	2202      	movs	r2, #2
 8006c28:	775a      	strb	r2, [r3, #29]
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	681b      	ldr	r3, [r3, #0]
 8006c2e:	68db      	ldr	r3, [r3, #12]
 8006c30:	f003 0310 	and.w	r3, r3, #16
 8006c34:	2b10      	cmp	r3, #16
 8006c36:	d055      	beq.n	8006ce4 <HAL_RTC_Init+0xe8>
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	22ca      	movs	r2, #202	@ 0xca
 8006c3e:	625a      	str	r2, [r3, #36]	@ 0x24
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	2253      	movs	r2, #83	@ 0x53
 8006c46:	625a      	str	r2, [r3, #36]	@ 0x24
 8006c48:	6878      	ldr	r0, [r7, #4]
 8006c4a:	f000 fa49 	bl	80070e0 <RTC_EnterInitMode>
 8006c4e:	4603      	mov	r3, r0
 8006c50:	73fb      	strb	r3, [r7, #15]
 8006c52:	7bfb      	ldrb	r3, [r7, #15]
 8006c54:	2b00      	cmp	r3, #0
 8006c56:	d12c      	bne.n	8006cb2 <HAL_RTC_Init+0xb6>
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	689b      	ldr	r3, [r3, #8]
 8006c5e:	687a      	ldr	r2, [r7, #4]
 8006c60:	6812      	ldr	r2, [r2, #0]
 8006c62:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8006c66:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006c6a:	6093      	str	r3, [r2, #8]
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	6899      	ldr	r1, [r3, #8]
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	685a      	ldr	r2, [r3, #4]
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	691b      	ldr	r3, [r3, #16]
 8006c7a:	431a      	orrs	r2, r3
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	695b      	ldr	r3, [r3, #20]
 8006c80:	431a      	orrs	r2, r3
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	430a      	orrs	r2, r1
 8006c88:	609a      	str	r2, [r3, #8]
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	687a      	ldr	r2, [r7, #4]
 8006c90:	68d2      	ldr	r2, [r2, #12]
 8006c92:	611a      	str	r2, [r3, #16]
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	681b      	ldr	r3, [r3, #0]
 8006c98:	6919      	ldr	r1, [r3, #16]
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	689b      	ldr	r3, [r3, #8]
 8006c9e:	041a      	lsls	r2, r3, #16
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	430a      	orrs	r2, r1
 8006ca6:	611a      	str	r2, [r3, #16]
 8006ca8:	6878      	ldr	r0, [r7, #4]
 8006caa:	f000 fa50 	bl	800714e <RTC_ExitInitMode>
 8006cae:	4603      	mov	r3, r0
 8006cb0:	73fb      	strb	r3, [r7, #15]
 8006cb2:	7bfb      	ldrb	r3, [r7, #15]
 8006cb4:	2b00      	cmp	r3, #0
 8006cb6:	d110      	bne.n	8006cda <HAL_RTC_Init+0xde>
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006cc6:	641a      	str	r2, [r3, #64]	@ 0x40
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	681b      	ldr	r3, [r3, #0]
 8006ccc:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	699a      	ldr	r2, [r3, #24]
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	681b      	ldr	r3, [r3, #0]
 8006cd6:	430a      	orrs	r2, r1
 8006cd8:	641a      	str	r2, [r3, #64]	@ 0x40
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	681b      	ldr	r3, [r3, #0]
 8006cde:	22ff      	movs	r2, #255	@ 0xff
 8006ce0:	625a      	str	r2, [r3, #36]	@ 0x24
 8006ce2:	e001      	b.n	8006ce8 <HAL_RTC_Init+0xec>
 8006ce4:	2300      	movs	r3, #0
 8006ce6:	73fb      	strb	r3, [r7, #15]
 8006ce8:	7bfb      	ldrb	r3, [r7, #15]
 8006cea:	2b00      	cmp	r3, #0
 8006cec:	d102      	bne.n	8006cf4 <HAL_RTC_Init+0xf8>
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	2201      	movs	r2, #1
 8006cf2:	775a      	strb	r2, [r3, #29]
 8006cf4:	7bfb      	ldrb	r3, [r7, #15]
 8006cf6:	4618      	mov	r0, r3
 8006cf8:	3710      	adds	r7, #16
 8006cfa:	46bd      	mov	sp, r7
 8006cfc:	bd80      	pop	{r7, pc}

08006cfe <HAL_RTC_SetTime>:
 8006cfe:	b590      	push	{r4, r7, lr}
 8006d00:	b087      	sub	sp, #28
 8006d02:	af00      	add	r7, sp, #0
 8006d04:	60f8      	str	r0, [r7, #12]
 8006d06:	60b9      	str	r1, [r7, #8]
 8006d08:	607a      	str	r2, [r7, #4]
 8006d0a:	2300      	movs	r3, #0
 8006d0c:	617b      	str	r3, [r7, #20]
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	7f1b      	ldrb	r3, [r3, #28]
 8006d12:	2b01      	cmp	r3, #1
 8006d14:	d101      	bne.n	8006d1a <HAL_RTC_SetTime+0x1c>
 8006d16:	2302      	movs	r3, #2
 8006d18:	e087      	b.n	8006e2a <HAL_RTC_SetTime+0x12c>
 8006d1a:	68fb      	ldr	r3, [r7, #12]
 8006d1c:	2201      	movs	r2, #1
 8006d1e:	771a      	strb	r2, [r3, #28]
 8006d20:	68fb      	ldr	r3, [r7, #12]
 8006d22:	2202      	movs	r2, #2
 8006d24:	775a      	strb	r2, [r3, #29]
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	2b00      	cmp	r3, #0
 8006d2a:	d126      	bne.n	8006d7a <HAL_RTC_SetTime+0x7c>
 8006d2c:	68fb      	ldr	r3, [r7, #12]
 8006d2e:	681b      	ldr	r3, [r3, #0]
 8006d30:	689b      	ldr	r3, [r3, #8]
 8006d32:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006d36:	2b00      	cmp	r3, #0
 8006d38:	d102      	bne.n	8006d40 <HAL_RTC_SetTime+0x42>
 8006d3a:	68bb      	ldr	r3, [r7, #8]
 8006d3c:	2200      	movs	r2, #0
 8006d3e:	70da      	strb	r2, [r3, #3]
 8006d40:	68bb      	ldr	r3, [r7, #8]
 8006d42:	781b      	ldrb	r3, [r3, #0]
 8006d44:	4618      	mov	r0, r3
 8006d46:	f000 fa27 	bl	8007198 <RTC_ByteToBcd2>
 8006d4a:	4603      	mov	r3, r0
 8006d4c:	041c      	lsls	r4, r3, #16
 8006d4e:	68bb      	ldr	r3, [r7, #8]
 8006d50:	785b      	ldrb	r3, [r3, #1]
 8006d52:	4618      	mov	r0, r3
 8006d54:	f000 fa20 	bl	8007198 <RTC_ByteToBcd2>
 8006d58:	4603      	mov	r3, r0
 8006d5a:	021b      	lsls	r3, r3, #8
 8006d5c:	431c      	orrs	r4, r3
 8006d5e:	68bb      	ldr	r3, [r7, #8]
 8006d60:	789b      	ldrb	r3, [r3, #2]
 8006d62:	4618      	mov	r0, r3
 8006d64:	f000 fa18 	bl	8007198 <RTC_ByteToBcd2>
 8006d68:	4603      	mov	r3, r0
 8006d6a:	ea44 0203 	orr.w	r2, r4, r3
 8006d6e:	68bb      	ldr	r3, [r7, #8]
 8006d70:	78db      	ldrb	r3, [r3, #3]
 8006d72:	059b      	lsls	r3, r3, #22
 8006d74:	4313      	orrs	r3, r2
 8006d76:	617b      	str	r3, [r7, #20]
 8006d78:	e018      	b.n	8006dac <HAL_RTC_SetTime+0xae>
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	689b      	ldr	r3, [r3, #8]
 8006d80:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006d84:	2b00      	cmp	r3, #0
 8006d86:	d102      	bne.n	8006d8e <HAL_RTC_SetTime+0x90>
 8006d88:	68bb      	ldr	r3, [r7, #8]
 8006d8a:	2200      	movs	r2, #0
 8006d8c:	70da      	strb	r2, [r3, #3]
 8006d8e:	68bb      	ldr	r3, [r7, #8]
 8006d90:	781b      	ldrb	r3, [r3, #0]
 8006d92:	041a      	lsls	r2, r3, #16
 8006d94:	68bb      	ldr	r3, [r7, #8]
 8006d96:	785b      	ldrb	r3, [r3, #1]
 8006d98:	021b      	lsls	r3, r3, #8
 8006d9a:	4313      	orrs	r3, r2
 8006d9c:	68ba      	ldr	r2, [r7, #8]
 8006d9e:	7892      	ldrb	r2, [r2, #2]
 8006da0:	431a      	orrs	r2, r3
 8006da2:	68bb      	ldr	r3, [r7, #8]
 8006da4:	78db      	ldrb	r3, [r3, #3]
 8006da6:	059b      	lsls	r3, r3, #22
 8006da8:	4313      	orrs	r3, r2
 8006daa:	617b      	str	r3, [r7, #20]
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	22ca      	movs	r2, #202	@ 0xca
 8006db2:	625a      	str	r2, [r3, #36]	@ 0x24
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	2253      	movs	r2, #83	@ 0x53
 8006dba:	625a      	str	r2, [r3, #36]	@ 0x24
 8006dbc:	68f8      	ldr	r0, [r7, #12]
 8006dbe:	f000 f98f 	bl	80070e0 <RTC_EnterInitMode>
 8006dc2:	4603      	mov	r3, r0
 8006dc4:	74fb      	strb	r3, [r7, #19]
 8006dc6:	7cfb      	ldrb	r3, [r7, #19]
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d120      	bne.n	8006e0e <HAL_RTC_SetTime+0x110>
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	681a      	ldr	r2, [r3, #0]
 8006dd0:	697b      	ldr	r3, [r7, #20]
 8006dd2:	f003 337f 	and.w	r3, r3, #2139062143	@ 0x7f7f7f7f
 8006dd6:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8006dda:	6013      	str	r3, [r2, #0]
 8006ddc:	68fb      	ldr	r3, [r7, #12]
 8006dde:	681b      	ldr	r3, [r3, #0]
 8006de0:	689a      	ldr	r2, [r3, #8]
 8006de2:	68fb      	ldr	r3, [r7, #12]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006dea:	609a      	str	r2, [r3, #8]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	6899      	ldr	r1, [r3, #8]
 8006df2:	68bb      	ldr	r3, [r7, #8]
 8006df4:	68da      	ldr	r2, [r3, #12]
 8006df6:	68bb      	ldr	r3, [r7, #8]
 8006df8:	691b      	ldr	r3, [r3, #16]
 8006dfa:	431a      	orrs	r2, r3
 8006dfc:	68fb      	ldr	r3, [r7, #12]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	430a      	orrs	r2, r1
 8006e02:	609a      	str	r2, [r3, #8]
 8006e04:	68f8      	ldr	r0, [r7, #12]
 8006e06:	f000 f9a2 	bl	800714e <RTC_ExitInitMode>
 8006e0a:	4603      	mov	r3, r0
 8006e0c:	74fb      	strb	r3, [r7, #19]
 8006e0e:	7cfb      	ldrb	r3, [r7, #19]
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d102      	bne.n	8006e1a <HAL_RTC_SetTime+0x11c>
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	2201      	movs	r2, #1
 8006e18:	775a      	strb	r2, [r3, #29]
 8006e1a:	68fb      	ldr	r3, [r7, #12]
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	22ff      	movs	r2, #255	@ 0xff
 8006e20:	625a      	str	r2, [r3, #36]	@ 0x24
 8006e22:	68fb      	ldr	r3, [r7, #12]
 8006e24:	2200      	movs	r2, #0
 8006e26:	771a      	strb	r2, [r3, #28]
 8006e28:	7cfb      	ldrb	r3, [r7, #19]
 8006e2a:	4618      	mov	r0, r3
 8006e2c:	371c      	adds	r7, #28
 8006e2e:	46bd      	mov	sp, r7
 8006e30:	bd90      	pop	{r4, r7, pc}

08006e32 <HAL_RTC_GetTime>:
 8006e32:	b580      	push	{r7, lr}
 8006e34:	b086      	sub	sp, #24
 8006e36:	af00      	add	r7, sp, #0
 8006e38:	60f8      	str	r0, [r7, #12]
 8006e3a:	60b9      	str	r1, [r7, #8]
 8006e3c:	607a      	str	r2, [r7, #4]
 8006e3e:	2300      	movs	r3, #0
 8006e40:	617b      	str	r3, [r7, #20]
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006e48:	68bb      	ldr	r3, [r7, #8]
 8006e4a:	605a      	str	r2, [r3, #4]
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	691b      	ldr	r3, [r3, #16]
 8006e52:	f3c3 020e 	ubfx	r2, r3, #0, #15
 8006e56:	68bb      	ldr	r3, [r7, #8]
 8006e58:	609a      	str	r2, [r3, #8]
 8006e5a:	68fb      	ldr	r3, [r7, #12]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	f003 337f 	and.w	r3, r3, #2139062143	@ 0x7f7f7f7f
 8006e64:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
 8006e68:	617b      	str	r3, [r7, #20]
 8006e6a:	697b      	ldr	r3, [r7, #20]
 8006e6c:	0c1b      	lsrs	r3, r3, #16
 8006e6e:	b2db      	uxtb	r3, r3
 8006e70:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006e74:	b2da      	uxtb	r2, r3
 8006e76:	68bb      	ldr	r3, [r7, #8]
 8006e78:	701a      	strb	r2, [r3, #0]
 8006e7a:	697b      	ldr	r3, [r7, #20]
 8006e7c:	0a1b      	lsrs	r3, r3, #8
 8006e7e:	b2db      	uxtb	r3, r3
 8006e80:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006e84:	b2da      	uxtb	r2, r3
 8006e86:	68bb      	ldr	r3, [r7, #8]
 8006e88:	705a      	strb	r2, [r3, #1]
 8006e8a:	697b      	ldr	r3, [r7, #20]
 8006e8c:	b2db      	uxtb	r3, r3
 8006e8e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006e92:	b2da      	uxtb	r2, r3
 8006e94:	68bb      	ldr	r3, [r7, #8]
 8006e96:	709a      	strb	r2, [r3, #2]
 8006e98:	697b      	ldr	r3, [r7, #20]
 8006e9a:	0d9b      	lsrs	r3, r3, #22
 8006e9c:	b2db      	uxtb	r3, r3
 8006e9e:	f003 0301 	and.w	r3, r3, #1
 8006ea2:	b2da      	uxtb	r2, r3
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	70da      	strb	r2, [r3, #3]
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d11a      	bne.n	8006ee4 <HAL_RTC_GetTime+0xb2>
 8006eae:	68bb      	ldr	r3, [r7, #8]
 8006eb0:	781b      	ldrb	r3, [r3, #0]
 8006eb2:	4618      	mov	r0, r3
 8006eb4:	f000 f98e 	bl	80071d4 <RTC_Bcd2ToByte>
 8006eb8:	4603      	mov	r3, r0
 8006eba:	461a      	mov	r2, r3
 8006ebc:	68bb      	ldr	r3, [r7, #8]
 8006ebe:	701a      	strb	r2, [r3, #0]
 8006ec0:	68bb      	ldr	r3, [r7, #8]
 8006ec2:	785b      	ldrb	r3, [r3, #1]
 8006ec4:	4618      	mov	r0, r3
 8006ec6:	f000 f985 	bl	80071d4 <RTC_Bcd2ToByte>
 8006eca:	4603      	mov	r3, r0
 8006ecc:	461a      	mov	r2, r3
 8006ece:	68bb      	ldr	r3, [r7, #8]
 8006ed0:	705a      	strb	r2, [r3, #1]
 8006ed2:	68bb      	ldr	r3, [r7, #8]
 8006ed4:	789b      	ldrb	r3, [r3, #2]
 8006ed6:	4618      	mov	r0, r3
 8006ed8:	f000 f97c 	bl	80071d4 <RTC_Bcd2ToByte>
 8006edc:	4603      	mov	r3, r0
 8006ede:	461a      	mov	r2, r3
 8006ee0:	68bb      	ldr	r3, [r7, #8]
 8006ee2:	709a      	strb	r2, [r3, #2]
 8006ee4:	2300      	movs	r3, #0
 8006ee6:	4618      	mov	r0, r3
 8006ee8:	3718      	adds	r7, #24
 8006eea:	46bd      	mov	sp, r7
 8006eec:	bd80      	pop	{r7, pc}

08006eee <HAL_RTC_SetDate>:
 8006eee:	b590      	push	{r4, r7, lr}
 8006ef0:	b087      	sub	sp, #28
 8006ef2:	af00      	add	r7, sp, #0
 8006ef4:	60f8      	str	r0, [r7, #12]
 8006ef6:	60b9      	str	r1, [r7, #8]
 8006ef8:	607a      	str	r2, [r7, #4]
 8006efa:	2300      	movs	r3, #0
 8006efc:	617b      	str	r3, [r7, #20]
 8006efe:	68fb      	ldr	r3, [r7, #12]
 8006f00:	7f1b      	ldrb	r3, [r3, #28]
 8006f02:	2b01      	cmp	r3, #1
 8006f04:	d101      	bne.n	8006f0a <HAL_RTC_SetDate+0x1c>
 8006f06:	2302      	movs	r3, #2
 8006f08:	e071      	b.n	8006fee <HAL_RTC_SetDate+0x100>
 8006f0a:	68fb      	ldr	r3, [r7, #12]
 8006f0c:	2201      	movs	r2, #1
 8006f0e:	771a      	strb	r2, [r3, #28]
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	2202      	movs	r2, #2
 8006f14:	775a      	strb	r2, [r3, #29]
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	2b00      	cmp	r3, #0
 8006f1a:	d10e      	bne.n	8006f3a <HAL_RTC_SetDate+0x4c>
 8006f1c:	68bb      	ldr	r3, [r7, #8]
 8006f1e:	785b      	ldrb	r3, [r3, #1]
 8006f20:	f003 0310 	and.w	r3, r3, #16
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	d008      	beq.n	8006f3a <HAL_RTC_SetDate+0x4c>
 8006f28:	68bb      	ldr	r3, [r7, #8]
 8006f2a:	785b      	ldrb	r3, [r3, #1]
 8006f2c:	f023 0310 	bic.w	r3, r3, #16
 8006f30:	b2db      	uxtb	r3, r3
 8006f32:	330a      	adds	r3, #10
 8006f34:	b2da      	uxtb	r2, r3
 8006f36:	68bb      	ldr	r3, [r7, #8]
 8006f38:	705a      	strb	r2, [r3, #1]
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	d11c      	bne.n	8006f7a <HAL_RTC_SetDate+0x8c>
 8006f40:	68bb      	ldr	r3, [r7, #8]
 8006f42:	78db      	ldrb	r3, [r3, #3]
 8006f44:	4618      	mov	r0, r3
 8006f46:	f000 f927 	bl	8007198 <RTC_ByteToBcd2>
 8006f4a:	4603      	mov	r3, r0
 8006f4c:	041c      	lsls	r4, r3, #16
 8006f4e:	68bb      	ldr	r3, [r7, #8]
 8006f50:	785b      	ldrb	r3, [r3, #1]
 8006f52:	4618      	mov	r0, r3
 8006f54:	f000 f920 	bl	8007198 <RTC_ByteToBcd2>
 8006f58:	4603      	mov	r3, r0
 8006f5a:	021b      	lsls	r3, r3, #8
 8006f5c:	431c      	orrs	r4, r3
 8006f5e:	68bb      	ldr	r3, [r7, #8]
 8006f60:	789b      	ldrb	r3, [r3, #2]
 8006f62:	4618      	mov	r0, r3
 8006f64:	f000 f918 	bl	8007198 <RTC_ByteToBcd2>
 8006f68:	4603      	mov	r3, r0
 8006f6a:	ea44 0203 	orr.w	r2, r4, r3
 8006f6e:	68bb      	ldr	r3, [r7, #8]
 8006f70:	781b      	ldrb	r3, [r3, #0]
 8006f72:	035b      	lsls	r3, r3, #13
 8006f74:	4313      	orrs	r3, r2
 8006f76:	617b      	str	r3, [r7, #20]
 8006f78:	e00e      	b.n	8006f98 <HAL_RTC_SetDate+0xaa>
 8006f7a:	68bb      	ldr	r3, [r7, #8]
 8006f7c:	78db      	ldrb	r3, [r3, #3]
 8006f7e:	041a      	lsls	r2, r3, #16
 8006f80:	68bb      	ldr	r3, [r7, #8]
 8006f82:	785b      	ldrb	r3, [r3, #1]
 8006f84:	021b      	lsls	r3, r3, #8
 8006f86:	4313      	orrs	r3, r2
 8006f88:	68ba      	ldr	r2, [r7, #8]
 8006f8a:	7892      	ldrb	r2, [r2, #2]
 8006f8c:	431a      	orrs	r2, r3
 8006f8e:	68bb      	ldr	r3, [r7, #8]
 8006f90:	781b      	ldrb	r3, [r3, #0]
 8006f92:	035b      	lsls	r3, r3, #13
 8006f94:	4313      	orrs	r3, r2
 8006f96:	617b      	str	r3, [r7, #20]
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	22ca      	movs	r2, #202	@ 0xca
 8006f9e:	625a      	str	r2, [r3, #36]	@ 0x24
 8006fa0:	68fb      	ldr	r3, [r7, #12]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	2253      	movs	r2, #83	@ 0x53
 8006fa6:	625a      	str	r2, [r3, #36]	@ 0x24
 8006fa8:	68f8      	ldr	r0, [r7, #12]
 8006faa:	f000 f899 	bl	80070e0 <RTC_EnterInitMode>
 8006fae:	4603      	mov	r3, r0
 8006fb0:	74fb      	strb	r3, [r7, #19]
 8006fb2:	7cfb      	ldrb	r3, [r7, #19]
 8006fb4:	2b00      	cmp	r3, #0
 8006fb6:	d10c      	bne.n	8006fd2 <HAL_RTC_SetDate+0xe4>
 8006fb8:	68fb      	ldr	r3, [r7, #12]
 8006fba:	681a      	ldr	r2, [r3, #0]
 8006fbc:	697b      	ldr	r3, [r7, #20]
 8006fbe:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8006fc2:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8006fc6:	6053      	str	r3, [r2, #4]
 8006fc8:	68f8      	ldr	r0, [r7, #12]
 8006fca:	f000 f8c0 	bl	800714e <RTC_ExitInitMode>
 8006fce:	4603      	mov	r3, r0
 8006fd0:	74fb      	strb	r3, [r7, #19]
 8006fd2:	7cfb      	ldrb	r3, [r7, #19]
 8006fd4:	2b00      	cmp	r3, #0
 8006fd6:	d102      	bne.n	8006fde <HAL_RTC_SetDate+0xf0>
 8006fd8:	68fb      	ldr	r3, [r7, #12]
 8006fda:	2201      	movs	r2, #1
 8006fdc:	775a      	strb	r2, [r3, #29]
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	681b      	ldr	r3, [r3, #0]
 8006fe2:	22ff      	movs	r2, #255	@ 0xff
 8006fe4:	625a      	str	r2, [r3, #36]	@ 0x24
 8006fe6:	68fb      	ldr	r3, [r7, #12]
 8006fe8:	2200      	movs	r2, #0
 8006fea:	771a      	strb	r2, [r3, #28]
 8006fec:	7cfb      	ldrb	r3, [r7, #19]
 8006fee:	4618      	mov	r0, r3
 8006ff0:	371c      	adds	r7, #28
 8006ff2:	46bd      	mov	sp, r7
 8006ff4:	bd90      	pop	{r4, r7, pc}

08006ff6 <HAL_RTC_GetDate>:
 8006ff6:	b580      	push	{r7, lr}
 8006ff8:	b086      	sub	sp, #24
 8006ffa:	af00      	add	r7, sp, #0
 8006ffc:	60f8      	str	r0, [r7, #12]
 8006ffe:	60b9      	str	r1, [r7, #8]
 8007000:	607a      	str	r2, [r7, #4]
 8007002:	2300      	movs	r3, #0
 8007004:	617b      	str	r3, [r7, #20]
 8007006:	68fb      	ldr	r3, [r7, #12]
 8007008:	681b      	ldr	r3, [r3, #0]
 800700a:	685b      	ldr	r3, [r3, #4]
 800700c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8007010:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8007014:	617b      	str	r3, [r7, #20]
 8007016:	697b      	ldr	r3, [r7, #20]
 8007018:	0c1b      	lsrs	r3, r3, #16
 800701a:	b2da      	uxtb	r2, r3
 800701c:	68bb      	ldr	r3, [r7, #8]
 800701e:	70da      	strb	r2, [r3, #3]
 8007020:	697b      	ldr	r3, [r7, #20]
 8007022:	0a1b      	lsrs	r3, r3, #8
 8007024:	b2db      	uxtb	r3, r3
 8007026:	f003 031f 	and.w	r3, r3, #31
 800702a:	b2da      	uxtb	r2, r3
 800702c:	68bb      	ldr	r3, [r7, #8]
 800702e:	705a      	strb	r2, [r3, #1]
 8007030:	697b      	ldr	r3, [r7, #20]
 8007032:	b2db      	uxtb	r3, r3
 8007034:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007038:	b2da      	uxtb	r2, r3
 800703a:	68bb      	ldr	r3, [r7, #8]
 800703c:	709a      	strb	r2, [r3, #2]
 800703e:	697b      	ldr	r3, [r7, #20]
 8007040:	0b5b      	lsrs	r3, r3, #13
 8007042:	b2db      	uxtb	r3, r3
 8007044:	f003 0307 	and.w	r3, r3, #7
 8007048:	b2da      	uxtb	r2, r3
 800704a:	68bb      	ldr	r3, [r7, #8]
 800704c:	701a      	strb	r2, [r3, #0]
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	2b00      	cmp	r3, #0
 8007052:	d11a      	bne.n	800708a <HAL_RTC_GetDate+0x94>
 8007054:	68bb      	ldr	r3, [r7, #8]
 8007056:	78db      	ldrb	r3, [r3, #3]
 8007058:	4618      	mov	r0, r3
 800705a:	f000 f8bb 	bl	80071d4 <RTC_Bcd2ToByte>
 800705e:	4603      	mov	r3, r0
 8007060:	461a      	mov	r2, r3
 8007062:	68bb      	ldr	r3, [r7, #8]
 8007064:	70da      	strb	r2, [r3, #3]
 8007066:	68bb      	ldr	r3, [r7, #8]
 8007068:	785b      	ldrb	r3, [r3, #1]
 800706a:	4618      	mov	r0, r3
 800706c:	f000 f8b2 	bl	80071d4 <RTC_Bcd2ToByte>
 8007070:	4603      	mov	r3, r0
 8007072:	461a      	mov	r2, r3
 8007074:	68bb      	ldr	r3, [r7, #8]
 8007076:	705a      	strb	r2, [r3, #1]
 8007078:	68bb      	ldr	r3, [r7, #8]
 800707a:	789b      	ldrb	r3, [r3, #2]
 800707c:	4618      	mov	r0, r3
 800707e:	f000 f8a9 	bl	80071d4 <RTC_Bcd2ToByte>
 8007082:	4603      	mov	r3, r0
 8007084:	461a      	mov	r2, r3
 8007086:	68bb      	ldr	r3, [r7, #8]
 8007088:	709a      	strb	r2, [r3, #2]
 800708a:	2300      	movs	r3, #0
 800708c:	4618      	mov	r0, r3
 800708e:	3718      	adds	r7, #24
 8007090:	46bd      	mov	sp, r7
 8007092:	bd80      	pop	{r7, pc}

08007094 <HAL_RTC_WaitForSynchro>:
 8007094:	b580      	push	{r7, lr}
 8007096:	b084      	sub	sp, #16
 8007098:	af00      	add	r7, sp, #0
 800709a:	6078      	str	r0, [r7, #4]
 800709c:	2300      	movs	r3, #0
 800709e:	60fb      	str	r3, [r7, #12]
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	681b      	ldr	r3, [r3, #0]
 80070a4:	4a0d      	ldr	r2, [pc, #52]	@ (80070dc <HAL_RTC_WaitForSynchro+0x48>)
 80070a6:	60da      	str	r2, [r3, #12]
 80070a8:	f7fc fbd8 	bl	800385c <HAL_GetTick>
 80070ac:	60f8      	str	r0, [r7, #12]
 80070ae:	e009      	b.n	80070c4 <HAL_RTC_WaitForSynchro+0x30>
 80070b0:	f7fc fbd4 	bl	800385c <HAL_GetTick>
 80070b4:	4602      	mov	r2, r0
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	1ad3      	subs	r3, r2, r3
 80070ba:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80070be:	d901      	bls.n	80070c4 <HAL_RTC_WaitForSynchro+0x30>
 80070c0:	2303      	movs	r3, #3
 80070c2:	e007      	b.n	80070d4 <HAL_RTC_WaitForSynchro+0x40>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	68db      	ldr	r3, [r3, #12]
 80070ca:	f003 0320 	and.w	r3, r3, #32
 80070ce:	2b00      	cmp	r3, #0
 80070d0:	d0ee      	beq.n	80070b0 <HAL_RTC_WaitForSynchro+0x1c>
 80070d2:	2300      	movs	r3, #0
 80070d4:	4618      	mov	r0, r3
 80070d6:	3710      	adds	r7, #16
 80070d8:	46bd      	mov	sp, r7
 80070da:	bd80      	pop	{r7, pc}
 80070dc:	00017f5f 	.word	0x00017f5f

080070e0 <RTC_EnterInitMode>:
 80070e0:	b580      	push	{r7, lr}
 80070e2:	b084      	sub	sp, #16
 80070e4:	af00      	add	r7, sp, #0
 80070e6:	6078      	str	r0, [r7, #4]
 80070e8:	2300      	movs	r3, #0
 80070ea:	60bb      	str	r3, [r7, #8]
 80070ec:	2300      	movs	r3, #0
 80070ee:	73fb      	strb	r3, [r7, #15]
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	68db      	ldr	r3, [r3, #12]
 80070f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d122      	bne.n	8007144 <RTC_EnterInitMode+0x64>
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	68da      	ldr	r2, [r3, #12]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800710c:	60da      	str	r2, [r3, #12]
 800710e:	f7fc fba5 	bl	800385c <HAL_GetTick>
 8007112:	60b8      	str	r0, [r7, #8]
 8007114:	e00c      	b.n	8007130 <RTC_EnterInitMode+0x50>
 8007116:	f7fc fba1 	bl	800385c <HAL_GetTick>
 800711a:	4602      	mov	r2, r0
 800711c:	68bb      	ldr	r3, [r7, #8]
 800711e:	1ad3      	subs	r3, r2, r3
 8007120:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8007124:	d904      	bls.n	8007130 <RTC_EnterInitMode+0x50>
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	2204      	movs	r2, #4
 800712a:	775a      	strb	r2, [r3, #29]
 800712c:	2301      	movs	r3, #1
 800712e:	73fb      	strb	r3, [r7, #15]
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	68db      	ldr	r3, [r3, #12]
 8007136:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800713a:	2b00      	cmp	r3, #0
 800713c:	d102      	bne.n	8007144 <RTC_EnterInitMode+0x64>
 800713e:	7bfb      	ldrb	r3, [r7, #15]
 8007140:	2b01      	cmp	r3, #1
 8007142:	d1e8      	bne.n	8007116 <RTC_EnterInitMode+0x36>
 8007144:	7bfb      	ldrb	r3, [r7, #15]
 8007146:	4618      	mov	r0, r3
 8007148:	3710      	adds	r7, #16
 800714a:	46bd      	mov	sp, r7
 800714c:	bd80      	pop	{r7, pc}

0800714e <RTC_ExitInitMode>:
 800714e:	b580      	push	{r7, lr}
 8007150:	b084      	sub	sp, #16
 8007152:	af00      	add	r7, sp, #0
 8007154:	6078      	str	r0, [r7, #4]
 8007156:	2300      	movs	r3, #0
 8007158:	73fb      	strb	r3, [r7, #15]
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	68da      	ldr	r2, [r3, #12]
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8007168:	60da      	str	r2, [r3, #12]
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	689b      	ldr	r3, [r3, #8]
 8007170:	f003 0320 	and.w	r3, r3, #32
 8007174:	2b00      	cmp	r3, #0
 8007176:	d10a      	bne.n	800718e <RTC_ExitInitMode+0x40>
 8007178:	6878      	ldr	r0, [r7, #4]
 800717a:	f7ff ff8b 	bl	8007094 <HAL_RTC_WaitForSynchro>
 800717e:	4603      	mov	r3, r0
 8007180:	2b00      	cmp	r3, #0
 8007182:	d004      	beq.n	800718e <RTC_ExitInitMode+0x40>
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	2204      	movs	r2, #4
 8007188:	775a      	strb	r2, [r3, #29]
 800718a:	2301      	movs	r3, #1
 800718c:	73fb      	strb	r3, [r7, #15]
 800718e:	7bfb      	ldrb	r3, [r7, #15]
 8007190:	4618      	mov	r0, r3
 8007192:	3710      	adds	r7, #16
 8007194:	46bd      	mov	sp, r7
 8007196:	bd80      	pop	{r7, pc}

08007198 <RTC_ByteToBcd2>:
 8007198:	b480      	push	{r7}
 800719a:	b085      	sub	sp, #20
 800719c:	af00      	add	r7, sp, #0
 800719e:	4603      	mov	r3, r0
 80071a0:	71fb      	strb	r3, [r7, #7]
 80071a2:	2300      	movs	r3, #0
 80071a4:	60fb      	str	r3, [r7, #12]
 80071a6:	e005      	b.n	80071b4 <RTC_ByteToBcd2+0x1c>
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	3301      	adds	r3, #1
 80071ac:	60fb      	str	r3, [r7, #12]
 80071ae:	79fb      	ldrb	r3, [r7, #7]
 80071b0:	3b0a      	subs	r3, #10
 80071b2:	71fb      	strb	r3, [r7, #7]
 80071b4:	79fb      	ldrb	r3, [r7, #7]
 80071b6:	2b09      	cmp	r3, #9
 80071b8:	d8f6      	bhi.n	80071a8 <RTC_ByteToBcd2+0x10>
 80071ba:	68fb      	ldr	r3, [r7, #12]
 80071bc:	b2db      	uxtb	r3, r3
 80071be:	011b      	lsls	r3, r3, #4
 80071c0:	b2da      	uxtb	r2, r3
 80071c2:	79fb      	ldrb	r3, [r7, #7]
 80071c4:	4313      	orrs	r3, r2
 80071c6:	b2db      	uxtb	r3, r3
 80071c8:	4618      	mov	r0, r3
 80071ca:	3714      	adds	r7, #20
 80071cc:	46bd      	mov	sp, r7
 80071ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071d2:	4770      	bx	lr

080071d4 <RTC_Bcd2ToByte>:
 80071d4:	b480      	push	{r7}
 80071d6:	b085      	sub	sp, #20
 80071d8:	af00      	add	r7, sp, #0
 80071da:	4603      	mov	r3, r0
 80071dc:	71fb      	strb	r3, [r7, #7]
 80071de:	2300      	movs	r3, #0
 80071e0:	60fb      	str	r3, [r7, #12]
 80071e2:	79fb      	ldrb	r3, [r7, #7]
 80071e4:	091b      	lsrs	r3, r3, #4
 80071e6:	b2db      	uxtb	r3, r3
 80071e8:	461a      	mov	r2, r3
 80071ea:	4613      	mov	r3, r2
 80071ec:	009b      	lsls	r3, r3, #2
 80071ee:	4413      	add	r3, r2
 80071f0:	005b      	lsls	r3, r3, #1
 80071f2:	60fb      	str	r3, [r7, #12]
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	b2da      	uxtb	r2, r3
 80071f8:	79fb      	ldrb	r3, [r7, #7]
 80071fa:	f003 030f 	and.w	r3, r3, #15
 80071fe:	b2db      	uxtb	r3, r3
 8007200:	4413      	add	r3, r2
 8007202:	b2db      	uxtb	r3, r3
 8007204:	4618      	mov	r0, r3
 8007206:	3714      	adds	r7, #20
 8007208:	46bd      	mov	sp, r7
 800720a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800720e:	4770      	bx	lr

08007210 <HAL_SPI_Init>:
 8007210:	b580      	push	{r7, lr}
 8007212:	b082      	sub	sp, #8
 8007214:	af00      	add	r7, sp, #0
 8007216:	6078      	str	r0, [r7, #4]
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	2b00      	cmp	r3, #0
 800721c:	d101      	bne.n	8007222 <HAL_SPI_Init+0x12>
 800721e:	2301      	movs	r3, #1
 8007220:	e07b      	b.n	800731a <HAL_SPI_Init+0x10a>
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007226:	2b00      	cmp	r3, #0
 8007228:	d108      	bne.n	800723c <HAL_SPI_Init+0x2c>
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	685b      	ldr	r3, [r3, #4]
 800722e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007232:	d009      	beq.n	8007248 <HAL_SPI_Init+0x38>
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	2200      	movs	r2, #0
 8007238:	61da      	str	r2, [r3, #28]
 800723a:	e005      	b.n	8007248 <HAL_SPI_Init+0x38>
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	2200      	movs	r2, #0
 8007240:	611a      	str	r2, [r3, #16]
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	2200      	movs	r2, #0
 8007246:	615a      	str	r2, [r3, #20]
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	2200      	movs	r2, #0
 800724c:	629a      	str	r2, [r3, #40]	@ 0x28
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007254:	b2db      	uxtb	r3, r3
 8007256:	2b00      	cmp	r3, #0
 8007258:	d106      	bne.n	8007268 <HAL_SPI_Init+0x58>
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	2200      	movs	r2, #0
 800725e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007262:	6878      	ldr	r0, [r7, #4]
 8007264:	f7fb fe98 	bl	8002f98 <HAL_SPI_MspInit>
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	2202      	movs	r2, #2
 800726c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	681a      	ldr	r2, [r3, #0]
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	681b      	ldr	r3, [r3, #0]
 800727a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800727e:	601a      	str	r2, [r3, #0]
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	685b      	ldr	r3, [r3, #4]
 8007284:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	689b      	ldr	r3, [r3, #8]
 800728c:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8007290:	431a      	orrs	r2, r3
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	68db      	ldr	r3, [r3, #12]
 8007296:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800729a:	431a      	orrs	r2, r3
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	691b      	ldr	r3, [r3, #16]
 80072a0:	f003 0302 	and.w	r3, r3, #2
 80072a4:	431a      	orrs	r2, r3
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	695b      	ldr	r3, [r3, #20]
 80072aa:	f003 0301 	and.w	r3, r3, #1
 80072ae:	431a      	orrs	r2, r3
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	699b      	ldr	r3, [r3, #24]
 80072b4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80072b8:	431a      	orrs	r2, r3
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	69db      	ldr	r3, [r3, #28]
 80072be:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80072c2:	431a      	orrs	r2, r3
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	6a1b      	ldr	r3, [r3, #32]
 80072c8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80072cc:	ea42 0103 	orr.w	r1, r2, r3
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80072d4:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	430a      	orrs	r2, r1
 80072de:	601a      	str	r2, [r3, #0]
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	699b      	ldr	r3, [r3, #24]
 80072e4:	0c1b      	lsrs	r3, r3, #16
 80072e6:	f003 0104 	and.w	r1, r3, #4
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072ee:	f003 0210 	and.w	r2, r3, #16
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	430a      	orrs	r2, r1
 80072f8:	605a      	str	r2, [r3, #4]
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	69da      	ldr	r2, [r3, #28]
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	681b      	ldr	r3, [r3, #0]
 8007304:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007308:	61da      	str	r2, [r3, #28]
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	2200      	movs	r2, #0
 800730e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	2201      	movs	r2, #1
 8007314:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007318:	2300      	movs	r3, #0
 800731a:	4618      	mov	r0, r3
 800731c:	3708      	adds	r7, #8
 800731e:	46bd      	mov	sp, r7
 8007320:	bd80      	pop	{r7, pc}

08007322 <HAL_SPI_Transmit>:
 8007322:	b580      	push	{r7, lr}
 8007324:	b088      	sub	sp, #32
 8007326:	af00      	add	r7, sp, #0
 8007328:	60f8      	str	r0, [r7, #12]
 800732a:	60b9      	str	r1, [r7, #8]
 800732c:	603b      	str	r3, [r7, #0]
 800732e:	4613      	mov	r3, r2
 8007330:	80fb      	strh	r3, [r7, #6]
 8007332:	f7fc fa93 	bl	800385c <HAL_GetTick>
 8007336:	61f8      	str	r0, [r7, #28]
 8007338:	88fb      	ldrh	r3, [r7, #6]
 800733a:	837b      	strh	r3, [r7, #26]
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007342:	b2db      	uxtb	r3, r3
 8007344:	2b01      	cmp	r3, #1
 8007346:	d001      	beq.n	800734c <HAL_SPI_Transmit+0x2a>
 8007348:	2302      	movs	r3, #2
 800734a:	e12a      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 800734c:	68bb      	ldr	r3, [r7, #8]
 800734e:	2b00      	cmp	r3, #0
 8007350:	d002      	beq.n	8007358 <HAL_SPI_Transmit+0x36>
 8007352:	88fb      	ldrh	r3, [r7, #6]
 8007354:	2b00      	cmp	r3, #0
 8007356:	d101      	bne.n	800735c <HAL_SPI_Transmit+0x3a>
 8007358:	2301      	movs	r3, #1
 800735a:	e122      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 800735c:	68fb      	ldr	r3, [r7, #12]
 800735e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8007362:	2b01      	cmp	r3, #1
 8007364:	d101      	bne.n	800736a <HAL_SPI_Transmit+0x48>
 8007366:	2302      	movs	r3, #2
 8007368:	e11b      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	2201      	movs	r2, #1
 800736e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007372:	68fb      	ldr	r3, [r7, #12]
 8007374:	2203      	movs	r2, #3
 8007376:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800737a:	68fb      	ldr	r3, [r7, #12]
 800737c:	2200      	movs	r2, #0
 800737e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007380:	68fb      	ldr	r3, [r7, #12]
 8007382:	68ba      	ldr	r2, [r7, #8]
 8007384:	631a      	str	r2, [r3, #48]	@ 0x30
 8007386:	68fb      	ldr	r3, [r7, #12]
 8007388:	88fa      	ldrh	r2, [r7, #6]
 800738a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800738c:	68fb      	ldr	r3, [r7, #12]
 800738e:	88fa      	ldrh	r2, [r7, #6]
 8007390:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007392:	68fb      	ldr	r3, [r7, #12]
 8007394:	2200      	movs	r2, #0
 8007396:	639a      	str	r2, [r3, #56]	@ 0x38
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	2200      	movs	r2, #0
 800739c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800739e:	68fb      	ldr	r3, [r7, #12]
 80073a0:	2200      	movs	r2, #0
 80073a2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80073a4:	68fb      	ldr	r3, [r7, #12]
 80073a6:	2200      	movs	r2, #0
 80073a8:	645a      	str	r2, [r3, #68]	@ 0x44
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	2200      	movs	r2, #0
 80073ae:	641a      	str	r2, [r3, #64]	@ 0x40
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	689b      	ldr	r3, [r3, #8]
 80073b4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80073b8:	d10f      	bne.n	80073da <HAL_SPI_Transmit+0xb8>
 80073ba:	68fb      	ldr	r3, [r7, #12]
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	681a      	ldr	r2, [r3, #0]
 80073c0:	68fb      	ldr	r3, [r7, #12]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80073c8:	601a      	str	r2, [r3, #0]
 80073ca:	68fb      	ldr	r3, [r7, #12]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	681a      	ldr	r2, [r3, #0]
 80073d0:	68fb      	ldr	r3, [r7, #12]
 80073d2:	681b      	ldr	r3, [r3, #0]
 80073d4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80073d8:	601a      	str	r2, [r3, #0]
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	681b      	ldr	r3, [r3, #0]
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80073e4:	2b40      	cmp	r3, #64	@ 0x40
 80073e6:	d007      	beq.n	80073f8 <HAL_SPI_Transmit+0xd6>
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	681a      	ldr	r2, [r3, #0]
 80073ee:	68fb      	ldr	r3, [r7, #12]
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80073f6:	601a      	str	r2, [r3, #0]
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	68db      	ldr	r3, [r3, #12]
 80073fc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007400:	d152      	bne.n	80074a8 <HAL_SPI_Transmit+0x186>
 8007402:	68fb      	ldr	r3, [r7, #12]
 8007404:	685b      	ldr	r3, [r3, #4]
 8007406:	2b00      	cmp	r3, #0
 8007408:	d002      	beq.n	8007410 <HAL_SPI_Transmit+0xee>
 800740a:	8b7b      	ldrh	r3, [r7, #26]
 800740c:	2b01      	cmp	r3, #1
 800740e:	d145      	bne.n	800749c <HAL_SPI_Transmit+0x17a>
 8007410:	68fb      	ldr	r3, [r7, #12]
 8007412:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007414:	881a      	ldrh	r2, [r3, #0]
 8007416:	68fb      	ldr	r3, [r7, #12]
 8007418:	681b      	ldr	r3, [r3, #0]
 800741a:	60da      	str	r2, [r3, #12]
 800741c:	68fb      	ldr	r3, [r7, #12]
 800741e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007420:	1c9a      	adds	r2, r3, #2
 8007422:	68fb      	ldr	r3, [r7, #12]
 8007424:	631a      	str	r2, [r3, #48]	@ 0x30
 8007426:	68fb      	ldr	r3, [r7, #12]
 8007428:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800742a:	b29b      	uxth	r3, r3
 800742c:	3b01      	subs	r3, #1
 800742e:	b29a      	uxth	r2, r3
 8007430:	68fb      	ldr	r3, [r7, #12]
 8007432:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007434:	e032      	b.n	800749c <HAL_SPI_Transmit+0x17a>
 8007436:	68fb      	ldr	r3, [r7, #12]
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	689b      	ldr	r3, [r3, #8]
 800743c:	f003 0302 	and.w	r3, r3, #2
 8007440:	2b02      	cmp	r3, #2
 8007442:	d112      	bne.n	800746a <HAL_SPI_Transmit+0x148>
 8007444:	68fb      	ldr	r3, [r7, #12]
 8007446:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007448:	881a      	ldrh	r2, [r3, #0]
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	681b      	ldr	r3, [r3, #0]
 800744e:	60da      	str	r2, [r3, #12]
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007454:	1c9a      	adds	r2, r3, #2
 8007456:	68fb      	ldr	r3, [r7, #12]
 8007458:	631a      	str	r2, [r3, #48]	@ 0x30
 800745a:	68fb      	ldr	r3, [r7, #12]
 800745c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800745e:	b29b      	uxth	r3, r3
 8007460:	3b01      	subs	r3, #1
 8007462:	b29a      	uxth	r2, r3
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007468:	e018      	b.n	800749c <HAL_SPI_Transmit+0x17a>
 800746a:	f7fc f9f7 	bl	800385c <HAL_GetTick>
 800746e:	4602      	mov	r2, r0
 8007470:	69fb      	ldr	r3, [r7, #28]
 8007472:	1ad3      	subs	r3, r2, r3
 8007474:	683a      	ldr	r2, [r7, #0]
 8007476:	429a      	cmp	r2, r3
 8007478:	d803      	bhi.n	8007482 <HAL_SPI_Transmit+0x160>
 800747a:	683b      	ldr	r3, [r7, #0]
 800747c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007480:	d102      	bne.n	8007488 <HAL_SPI_Transmit+0x166>
 8007482:	683b      	ldr	r3, [r7, #0]
 8007484:	2b00      	cmp	r3, #0
 8007486:	d109      	bne.n	800749c <HAL_SPI_Transmit+0x17a>
 8007488:	68fb      	ldr	r3, [r7, #12]
 800748a:	2201      	movs	r2, #1
 800748c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	2200      	movs	r2, #0
 8007494:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007498:	2303      	movs	r3, #3
 800749a:	e082      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80074a0:	b29b      	uxth	r3, r3
 80074a2:	2b00      	cmp	r3, #0
 80074a4:	d1c7      	bne.n	8007436 <HAL_SPI_Transmit+0x114>
 80074a6:	e053      	b.n	8007550 <HAL_SPI_Transmit+0x22e>
 80074a8:	68fb      	ldr	r3, [r7, #12]
 80074aa:	685b      	ldr	r3, [r3, #4]
 80074ac:	2b00      	cmp	r3, #0
 80074ae:	d002      	beq.n	80074b6 <HAL_SPI_Transmit+0x194>
 80074b0:	8b7b      	ldrh	r3, [r7, #26]
 80074b2:	2b01      	cmp	r3, #1
 80074b4:	d147      	bne.n	8007546 <HAL_SPI_Transmit+0x224>
 80074b6:	68fb      	ldr	r3, [r7, #12]
 80074b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80074ba:	68fb      	ldr	r3, [r7, #12]
 80074bc:	681b      	ldr	r3, [r3, #0]
 80074be:	330c      	adds	r3, #12
 80074c0:	7812      	ldrb	r2, [r2, #0]
 80074c2:	701a      	strb	r2, [r3, #0]
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80074c8:	1c5a      	adds	r2, r3, #1
 80074ca:	68fb      	ldr	r3, [r7, #12]
 80074cc:	631a      	str	r2, [r3, #48]	@ 0x30
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80074d2:	b29b      	uxth	r3, r3
 80074d4:	3b01      	subs	r3, #1
 80074d6:	b29a      	uxth	r2, r3
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	86da      	strh	r2, [r3, #54]	@ 0x36
 80074dc:	e033      	b.n	8007546 <HAL_SPI_Transmit+0x224>
 80074de:	68fb      	ldr	r3, [r7, #12]
 80074e0:	681b      	ldr	r3, [r3, #0]
 80074e2:	689b      	ldr	r3, [r3, #8]
 80074e4:	f003 0302 	and.w	r3, r3, #2
 80074e8:	2b02      	cmp	r3, #2
 80074ea:	d113      	bne.n	8007514 <HAL_SPI_Transmit+0x1f2>
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	330c      	adds	r3, #12
 80074f6:	7812      	ldrb	r2, [r2, #0]
 80074f8:	701a      	strb	r2, [r3, #0]
 80074fa:	68fb      	ldr	r3, [r7, #12]
 80074fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80074fe:	1c5a      	adds	r2, r3, #1
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	631a      	str	r2, [r3, #48]	@ 0x30
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007508:	b29b      	uxth	r3, r3
 800750a:	3b01      	subs	r3, #1
 800750c:	b29a      	uxth	r2, r3
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007512:	e018      	b.n	8007546 <HAL_SPI_Transmit+0x224>
 8007514:	f7fc f9a2 	bl	800385c <HAL_GetTick>
 8007518:	4602      	mov	r2, r0
 800751a:	69fb      	ldr	r3, [r7, #28]
 800751c:	1ad3      	subs	r3, r2, r3
 800751e:	683a      	ldr	r2, [r7, #0]
 8007520:	429a      	cmp	r2, r3
 8007522:	d803      	bhi.n	800752c <HAL_SPI_Transmit+0x20a>
 8007524:	683b      	ldr	r3, [r7, #0]
 8007526:	f1b3 3fff 	cmp.w	r3, #4294967295
 800752a:	d102      	bne.n	8007532 <HAL_SPI_Transmit+0x210>
 800752c:	683b      	ldr	r3, [r7, #0]
 800752e:	2b00      	cmp	r3, #0
 8007530:	d109      	bne.n	8007546 <HAL_SPI_Transmit+0x224>
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	2201      	movs	r2, #1
 8007536:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800753a:	68fb      	ldr	r3, [r7, #12]
 800753c:	2200      	movs	r2, #0
 800753e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007542:	2303      	movs	r3, #3
 8007544:	e02d      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800754a:	b29b      	uxth	r3, r3
 800754c:	2b00      	cmp	r3, #0
 800754e:	d1c6      	bne.n	80074de <HAL_SPI_Transmit+0x1bc>
 8007550:	69fa      	ldr	r2, [r7, #28]
 8007552:	6839      	ldr	r1, [r7, #0]
 8007554:	68f8      	ldr	r0, [r7, #12]
 8007556:	f000 fa59 	bl	8007a0c <SPI_EndRxTxTransaction>
 800755a:	4603      	mov	r3, r0
 800755c:	2b00      	cmp	r3, #0
 800755e:	d002      	beq.n	8007566 <HAL_SPI_Transmit+0x244>
 8007560:	68fb      	ldr	r3, [r7, #12]
 8007562:	2220      	movs	r2, #32
 8007564:	655a      	str	r2, [r3, #84]	@ 0x54
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	689b      	ldr	r3, [r3, #8]
 800756a:	2b00      	cmp	r3, #0
 800756c:	d10a      	bne.n	8007584 <HAL_SPI_Transmit+0x262>
 800756e:	2300      	movs	r3, #0
 8007570:	617b      	str	r3, [r7, #20]
 8007572:	68fb      	ldr	r3, [r7, #12]
 8007574:	681b      	ldr	r3, [r3, #0]
 8007576:	68db      	ldr	r3, [r3, #12]
 8007578:	617b      	str	r3, [r7, #20]
 800757a:	68fb      	ldr	r3, [r7, #12]
 800757c:	681b      	ldr	r3, [r3, #0]
 800757e:	689b      	ldr	r3, [r3, #8]
 8007580:	617b      	str	r3, [r7, #20]
 8007582:	697b      	ldr	r3, [r7, #20]
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	2201      	movs	r2, #1
 8007588:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	2200      	movs	r2, #0
 8007590:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007594:	68fb      	ldr	r3, [r7, #12]
 8007596:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007598:	2b00      	cmp	r3, #0
 800759a:	d001      	beq.n	80075a0 <HAL_SPI_Transmit+0x27e>
 800759c:	2301      	movs	r3, #1
 800759e:	e000      	b.n	80075a2 <HAL_SPI_Transmit+0x280>
 80075a0:	2300      	movs	r3, #0
 80075a2:	4618      	mov	r0, r3
 80075a4:	3720      	adds	r7, #32
 80075a6:	46bd      	mov	sp, r7
 80075a8:	bd80      	pop	{r7, pc}

080075aa <HAL_SPI_TransmitReceive>:
 80075aa:	b580      	push	{r7, lr}
 80075ac:	b08a      	sub	sp, #40	@ 0x28
 80075ae:	af00      	add	r7, sp, #0
 80075b0:	60f8      	str	r0, [r7, #12]
 80075b2:	60b9      	str	r1, [r7, #8]
 80075b4:	607a      	str	r2, [r7, #4]
 80075b6:	807b      	strh	r3, [r7, #2]
 80075b8:	2301      	movs	r3, #1
 80075ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80075bc:	f7fc f94e 	bl	800385c <HAL_GetTick>
 80075c0:	6238      	str	r0, [r7, #32]
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80075c8:	77fb      	strb	r3, [r7, #31]
 80075ca:	68fb      	ldr	r3, [r7, #12]
 80075cc:	685b      	ldr	r3, [r3, #4]
 80075ce:	61bb      	str	r3, [r7, #24]
 80075d0:	887b      	ldrh	r3, [r7, #2]
 80075d2:	82fb      	strh	r3, [r7, #22]
 80075d4:	7ffb      	ldrb	r3, [r7, #31]
 80075d6:	2b01      	cmp	r3, #1
 80075d8:	d00c      	beq.n	80075f4 <HAL_SPI_TransmitReceive+0x4a>
 80075da:	69bb      	ldr	r3, [r7, #24]
 80075dc:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80075e0:	d106      	bne.n	80075f0 <HAL_SPI_TransmitReceive+0x46>
 80075e2:	68fb      	ldr	r3, [r7, #12]
 80075e4:	689b      	ldr	r3, [r3, #8]
 80075e6:	2b00      	cmp	r3, #0
 80075e8:	d102      	bne.n	80075f0 <HAL_SPI_TransmitReceive+0x46>
 80075ea:	7ffb      	ldrb	r3, [r7, #31]
 80075ec:	2b04      	cmp	r3, #4
 80075ee:	d001      	beq.n	80075f4 <HAL_SPI_TransmitReceive+0x4a>
 80075f0:	2302      	movs	r3, #2
 80075f2:	e17f      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 80075f4:	68bb      	ldr	r3, [r7, #8]
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d005      	beq.n	8007606 <HAL_SPI_TransmitReceive+0x5c>
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	2b00      	cmp	r3, #0
 80075fe:	d002      	beq.n	8007606 <HAL_SPI_TransmitReceive+0x5c>
 8007600:	887b      	ldrh	r3, [r7, #2]
 8007602:	2b00      	cmp	r3, #0
 8007604:	d101      	bne.n	800760a <HAL_SPI_TransmitReceive+0x60>
 8007606:	2301      	movs	r3, #1
 8007608:	e174      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 800760a:	68fb      	ldr	r3, [r7, #12]
 800760c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8007610:	2b01      	cmp	r3, #1
 8007612:	d101      	bne.n	8007618 <HAL_SPI_TransmitReceive+0x6e>
 8007614:	2302      	movs	r3, #2
 8007616:	e16d      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	2201      	movs	r2, #1
 800761c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007620:	68fb      	ldr	r3, [r7, #12]
 8007622:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007626:	b2db      	uxtb	r3, r3
 8007628:	2b04      	cmp	r3, #4
 800762a:	d003      	beq.n	8007634 <HAL_SPI_TransmitReceive+0x8a>
 800762c:	68fb      	ldr	r3, [r7, #12]
 800762e:	2205      	movs	r2, #5
 8007630:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007634:	68fb      	ldr	r3, [r7, #12]
 8007636:	2200      	movs	r2, #0
 8007638:	655a      	str	r2, [r3, #84]	@ 0x54
 800763a:	68fb      	ldr	r3, [r7, #12]
 800763c:	687a      	ldr	r2, [r7, #4]
 800763e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	887a      	ldrh	r2, [r7, #2]
 8007644:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007646:	68fb      	ldr	r3, [r7, #12]
 8007648:	887a      	ldrh	r2, [r7, #2]
 800764a:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	68ba      	ldr	r2, [r7, #8]
 8007650:	631a      	str	r2, [r3, #48]	@ 0x30
 8007652:	68fb      	ldr	r3, [r7, #12]
 8007654:	887a      	ldrh	r2, [r7, #2]
 8007656:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	887a      	ldrh	r2, [r7, #2]
 800765c:	869a      	strh	r2, [r3, #52]	@ 0x34
 800765e:	68fb      	ldr	r3, [r7, #12]
 8007660:	2200      	movs	r2, #0
 8007662:	641a      	str	r2, [r3, #64]	@ 0x40
 8007664:	68fb      	ldr	r3, [r7, #12]
 8007666:	2200      	movs	r2, #0
 8007668:	645a      	str	r2, [r3, #68]	@ 0x44
 800766a:	68fb      	ldr	r3, [r7, #12]
 800766c:	681b      	ldr	r3, [r3, #0]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007674:	2b40      	cmp	r3, #64	@ 0x40
 8007676:	d007      	beq.n	8007688 <HAL_SPI_TransmitReceive+0xde>
 8007678:	68fb      	ldr	r3, [r7, #12]
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	681a      	ldr	r2, [r3, #0]
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007686:	601a      	str	r2, [r3, #0]
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	68db      	ldr	r3, [r3, #12]
 800768c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007690:	d17e      	bne.n	8007790 <HAL_SPI_TransmitReceive+0x1e6>
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	685b      	ldr	r3, [r3, #4]
 8007696:	2b00      	cmp	r3, #0
 8007698:	d002      	beq.n	80076a0 <HAL_SPI_TransmitReceive+0xf6>
 800769a:	8afb      	ldrh	r3, [r7, #22]
 800769c:	2b01      	cmp	r3, #1
 800769e:	d16c      	bne.n	800777a <HAL_SPI_TransmitReceive+0x1d0>
 80076a0:	68fb      	ldr	r3, [r7, #12]
 80076a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80076a4:	881a      	ldrh	r2, [r3, #0]
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	60da      	str	r2, [r3, #12]
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80076b0:	1c9a      	adds	r2, r3, #2
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80076ba:	b29b      	uxth	r3, r3
 80076bc:	3b01      	subs	r3, #1
 80076be:	b29a      	uxth	r2, r3
 80076c0:	68fb      	ldr	r3, [r7, #12]
 80076c2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80076c4:	e059      	b.n	800777a <HAL_SPI_TransmitReceive+0x1d0>
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	689b      	ldr	r3, [r3, #8]
 80076cc:	f003 0302 	and.w	r3, r3, #2
 80076d0:	2b02      	cmp	r3, #2
 80076d2:	d11b      	bne.n	800770c <HAL_SPI_TransmitReceive+0x162>
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80076d8:	b29b      	uxth	r3, r3
 80076da:	2b00      	cmp	r3, #0
 80076dc:	d016      	beq.n	800770c <HAL_SPI_TransmitReceive+0x162>
 80076de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80076e0:	2b01      	cmp	r3, #1
 80076e2:	d113      	bne.n	800770c <HAL_SPI_TransmitReceive+0x162>
 80076e4:	68fb      	ldr	r3, [r7, #12]
 80076e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80076e8:	881a      	ldrh	r2, [r3, #0]
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	60da      	str	r2, [r3, #12]
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80076f4:	1c9a      	adds	r2, r3, #2
 80076f6:	68fb      	ldr	r3, [r7, #12]
 80076f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80076fe:	b29b      	uxth	r3, r3
 8007700:	3b01      	subs	r3, #1
 8007702:	b29a      	uxth	r2, r3
 8007704:	68fb      	ldr	r3, [r7, #12]
 8007706:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007708:	2300      	movs	r3, #0
 800770a:	627b      	str	r3, [r7, #36]	@ 0x24
 800770c:	68fb      	ldr	r3, [r7, #12]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	689b      	ldr	r3, [r3, #8]
 8007712:	f003 0301 	and.w	r3, r3, #1
 8007716:	2b01      	cmp	r3, #1
 8007718:	d119      	bne.n	800774e <HAL_SPI_TransmitReceive+0x1a4>
 800771a:	68fb      	ldr	r3, [r7, #12]
 800771c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800771e:	b29b      	uxth	r3, r3
 8007720:	2b00      	cmp	r3, #0
 8007722:	d014      	beq.n	800774e <HAL_SPI_TransmitReceive+0x1a4>
 8007724:	68fb      	ldr	r3, [r7, #12]
 8007726:	681b      	ldr	r3, [r3, #0]
 8007728:	68da      	ldr	r2, [r3, #12]
 800772a:	68fb      	ldr	r3, [r7, #12]
 800772c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800772e:	b292      	uxth	r2, r2
 8007730:	801a      	strh	r2, [r3, #0]
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007736:	1c9a      	adds	r2, r3, #2
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	639a      	str	r2, [r3, #56]	@ 0x38
 800773c:	68fb      	ldr	r3, [r7, #12]
 800773e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007740:	b29b      	uxth	r3, r3
 8007742:	3b01      	subs	r3, #1
 8007744:	b29a      	uxth	r2, r3
 8007746:	68fb      	ldr	r3, [r7, #12]
 8007748:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800774a:	2301      	movs	r3, #1
 800774c:	627b      	str	r3, [r7, #36]	@ 0x24
 800774e:	f7fc f885 	bl	800385c <HAL_GetTick>
 8007752:	4602      	mov	r2, r0
 8007754:	6a3b      	ldr	r3, [r7, #32]
 8007756:	1ad3      	subs	r3, r2, r3
 8007758:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800775a:	429a      	cmp	r2, r3
 800775c:	d80d      	bhi.n	800777a <HAL_SPI_TransmitReceive+0x1d0>
 800775e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007760:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007764:	d009      	beq.n	800777a <HAL_SPI_TransmitReceive+0x1d0>
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	2201      	movs	r2, #1
 800776a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800776e:	68fb      	ldr	r3, [r7, #12]
 8007770:	2200      	movs	r2, #0
 8007772:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007776:	2303      	movs	r3, #3
 8007778:	e0bc      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800777e:	b29b      	uxth	r3, r3
 8007780:	2b00      	cmp	r3, #0
 8007782:	d1a0      	bne.n	80076c6 <HAL_SPI_TransmitReceive+0x11c>
 8007784:	68fb      	ldr	r3, [r7, #12]
 8007786:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007788:	b29b      	uxth	r3, r3
 800778a:	2b00      	cmp	r3, #0
 800778c:	d19b      	bne.n	80076c6 <HAL_SPI_TransmitReceive+0x11c>
 800778e:	e082      	b.n	8007896 <HAL_SPI_TransmitReceive+0x2ec>
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	685b      	ldr	r3, [r3, #4]
 8007794:	2b00      	cmp	r3, #0
 8007796:	d002      	beq.n	800779e <HAL_SPI_TransmitReceive+0x1f4>
 8007798:	8afb      	ldrh	r3, [r7, #22]
 800779a:	2b01      	cmp	r3, #1
 800779c:	d171      	bne.n	8007882 <HAL_SPI_TransmitReceive+0x2d8>
 800779e:	68fb      	ldr	r3, [r7, #12]
 80077a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80077a2:	68fb      	ldr	r3, [r7, #12]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	330c      	adds	r3, #12
 80077a8:	7812      	ldrb	r2, [r2, #0]
 80077aa:	701a      	strb	r2, [r3, #0]
 80077ac:	68fb      	ldr	r3, [r7, #12]
 80077ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80077b0:	1c5a      	adds	r2, r3, #1
 80077b2:	68fb      	ldr	r3, [r7, #12]
 80077b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80077b6:	68fb      	ldr	r3, [r7, #12]
 80077b8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80077ba:	b29b      	uxth	r3, r3
 80077bc:	3b01      	subs	r3, #1
 80077be:	b29a      	uxth	r2, r3
 80077c0:	68fb      	ldr	r3, [r7, #12]
 80077c2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80077c4:	e05d      	b.n	8007882 <HAL_SPI_TransmitReceive+0x2d8>
 80077c6:	68fb      	ldr	r3, [r7, #12]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	689b      	ldr	r3, [r3, #8]
 80077cc:	f003 0302 	and.w	r3, r3, #2
 80077d0:	2b02      	cmp	r3, #2
 80077d2:	d11c      	bne.n	800780e <HAL_SPI_TransmitReceive+0x264>
 80077d4:	68fb      	ldr	r3, [r7, #12]
 80077d6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80077d8:	b29b      	uxth	r3, r3
 80077da:	2b00      	cmp	r3, #0
 80077dc:	d017      	beq.n	800780e <HAL_SPI_TransmitReceive+0x264>
 80077de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80077e0:	2b01      	cmp	r3, #1
 80077e2:	d114      	bne.n	800780e <HAL_SPI_TransmitReceive+0x264>
 80077e4:	68fb      	ldr	r3, [r7, #12]
 80077e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80077e8:	68fb      	ldr	r3, [r7, #12]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	330c      	adds	r3, #12
 80077ee:	7812      	ldrb	r2, [r2, #0]
 80077f0:	701a      	strb	r2, [r3, #0]
 80077f2:	68fb      	ldr	r3, [r7, #12]
 80077f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80077f6:	1c5a      	adds	r2, r3, #1
 80077f8:	68fb      	ldr	r3, [r7, #12]
 80077fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80077fc:	68fb      	ldr	r3, [r7, #12]
 80077fe:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007800:	b29b      	uxth	r3, r3
 8007802:	3b01      	subs	r3, #1
 8007804:	b29a      	uxth	r2, r3
 8007806:	68fb      	ldr	r3, [r7, #12]
 8007808:	86da      	strh	r2, [r3, #54]	@ 0x36
 800780a:	2300      	movs	r3, #0
 800780c:	627b      	str	r3, [r7, #36]	@ 0x24
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	689b      	ldr	r3, [r3, #8]
 8007814:	f003 0301 	and.w	r3, r3, #1
 8007818:	2b01      	cmp	r3, #1
 800781a:	d119      	bne.n	8007850 <HAL_SPI_TransmitReceive+0x2a6>
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007820:	b29b      	uxth	r3, r3
 8007822:	2b00      	cmp	r3, #0
 8007824:	d014      	beq.n	8007850 <HAL_SPI_TransmitReceive+0x2a6>
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	68da      	ldr	r2, [r3, #12]
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007830:	b2d2      	uxtb	r2, r2
 8007832:	701a      	strb	r2, [r3, #0]
 8007834:	68fb      	ldr	r3, [r7, #12]
 8007836:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007838:	1c5a      	adds	r2, r3, #1
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	639a      	str	r2, [r3, #56]	@ 0x38
 800783e:	68fb      	ldr	r3, [r7, #12]
 8007840:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007842:	b29b      	uxth	r3, r3
 8007844:	3b01      	subs	r3, #1
 8007846:	b29a      	uxth	r2, r3
 8007848:	68fb      	ldr	r3, [r7, #12]
 800784a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800784c:	2301      	movs	r3, #1
 800784e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007850:	f7fc f804 	bl	800385c <HAL_GetTick>
 8007854:	4602      	mov	r2, r0
 8007856:	6a3b      	ldr	r3, [r7, #32]
 8007858:	1ad3      	subs	r3, r2, r3
 800785a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800785c:	429a      	cmp	r2, r3
 800785e:	d803      	bhi.n	8007868 <HAL_SPI_TransmitReceive+0x2be>
 8007860:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007862:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007866:	d102      	bne.n	800786e <HAL_SPI_TransmitReceive+0x2c4>
 8007868:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800786a:	2b00      	cmp	r3, #0
 800786c:	d109      	bne.n	8007882 <HAL_SPI_TransmitReceive+0x2d8>
 800786e:	68fb      	ldr	r3, [r7, #12]
 8007870:	2201      	movs	r2, #1
 8007872:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007876:	68fb      	ldr	r3, [r7, #12]
 8007878:	2200      	movs	r2, #0
 800787a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800787e:	2303      	movs	r3, #3
 8007880:	e038      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 8007882:	68fb      	ldr	r3, [r7, #12]
 8007884:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007886:	b29b      	uxth	r3, r3
 8007888:	2b00      	cmp	r3, #0
 800788a:	d19c      	bne.n	80077c6 <HAL_SPI_TransmitReceive+0x21c>
 800788c:	68fb      	ldr	r3, [r7, #12]
 800788e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007890:	b29b      	uxth	r3, r3
 8007892:	2b00      	cmp	r3, #0
 8007894:	d197      	bne.n	80077c6 <HAL_SPI_TransmitReceive+0x21c>
 8007896:	6a3a      	ldr	r2, [r7, #32]
 8007898:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800789a:	68f8      	ldr	r0, [r7, #12]
 800789c:	f000 f8b6 	bl	8007a0c <SPI_EndRxTxTransaction>
 80078a0:	4603      	mov	r3, r0
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	d008      	beq.n	80078b8 <HAL_SPI_TransmitReceive+0x30e>
 80078a6:	68fb      	ldr	r3, [r7, #12]
 80078a8:	2220      	movs	r2, #32
 80078aa:	655a      	str	r2, [r3, #84]	@ 0x54
 80078ac:	68fb      	ldr	r3, [r7, #12]
 80078ae:	2200      	movs	r2, #0
 80078b0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80078b4:	2301      	movs	r3, #1
 80078b6:	e01d      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 80078b8:	68fb      	ldr	r3, [r7, #12]
 80078ba:	689b      	ldr	r3, [r3, #8]
 80078bc:	2b00      	cmp	r3, #0
 80078be:	d10a      	bne.n	80078d6 <HAL_SPI_TransmitReceive+0x32c>
 80078c0:	2300      	movs	r3, #0
 80078c2:	613b      	str	r3, [r7, #16]
 80078c4:	68fb      	ldr	r3, [r7, #12]
 80078c6:	681b      	ldr	r3, [r3, #0]
 80078c8:	68db      	ldr	r3, [r3, #12]
 80078ca:	613b      	str	r3, [r7, #16]
 80078cc:	68fb      	ldr	r3, [r7, #12]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	689b      	ldr	r3, [r3, #8]
 80078d2:	613b      	str	r3, [r7, #16]
 80078d4:	693b      	ldr	r3, [r7, #16]
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	2201      	movs	r2, #1
 80078da:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80078de:	68fb      	ldr	r3, [r7, #12]
 80078e0:	2200      	movs	r2, #0
 80078e2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80078e6:	68fb      	ldr	r3, [r7, #12]
 80078e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80078ea:	2b00      	cmp	r3, #0
 80078ec:	d001      	beq.n	80078f2 <HAL_SPI_TransmitReceive+0x348>
 80078ee:	2301      	movs	r3, #1
 80078f0:	e000      	b.n	80078f4 <HAL_SPI_TransmitReceive+0x34a>
 80078f2:	2300      	movs	r3, #0
 80078f4:	4618      	mov	r0, r3
 80078f6:	3728      	adds	r7, #40	@ 0x28
 80078f8:	46bd      	mov	sp, r7
 80078fa:	bd80      	pop	{r7, pc}

080078fc <SPI_WaitFlagStateUntilTimeout>:
 80078fc:	b580      	push	{r7, lr}
 80078fe:	b088      	sub	sp, #32
 8007900:	af00      	add	r7, sp, #0
 8007902:	60f8      	str	r0, [r7, #12]
 8007904:	60b9      	str	r1, [r7, #8]
 8007906:	603b      	str	r3, [r7, #0]
 8007908:	4613      	mov	r3, r2
 800790a:	71fb      	strb	r3, [r7, #7]
 800790c:	f7fb ffa6 	bl	800385c <HAL_GetTick>
 8007910:	4602      	mov	r2, r0
 8007912:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007914:	1a9b      	subs	r3, r3, r2
 8007916:	683a      	ldr	r2, [r7, #0]
 8007918:	4413      	add	r3, r2
 800791a:	61fb      	str	r3, [r7, #28]
 800791c:	f7fb ff9e 	bl	800385c <HAL_GetTick>
 8007920:	61b8      	str	r0, [r7, #24]
 8007922:	4b39      	ldr	r3, [pc, #228]	@ (8007a08 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	015b      	lsls	r3, r3, #5
 8007928:	0d1b      	lsrs	r3, r3, #20
 800792a:	69fa      	ldr	r2, [r7, #28]
 800792c:	fb02 f303 	mul.w	r3, r2, r3
 8007930:	617b      	str	r3, [r7, #20]
 8007932:	e055      	b.n	80079e0 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8007934:	683b      	ldr	r3, [r7, #0]
 8007936:	f1b3 3fff 	cmp.w	r3, #4294967295
 800793a:	d051      	beq.n	80079e0 <SPI_WaitFlagStateUntilTimeout+0xe4>
 800793c:	f7fb ff8e 	bl	800385c <HAL_GetTick>
 8007940:	4602      	mov	r2, r0
 8007942:	69bb      	ldr	r3, [r7, #24]
 8007944:	1ad3      	subs	r3, r2, r3
 8007946:	69fa      	ldr	r2, [r7, #28]
 8007948:	429a      	cmp	r2, r3
 800794a:	d902      	bls.n	8007952 <SPI_WaitFlagStateUntilTimeout+0x56>
 800794c:	69fb      	ldr	r3, [r7, #28]
 800794e:	2b00      	cmp	r3, #0
 8007950:	d13d      	bne.n	80079ce <SPI_WaitFlagStateUntilTimeout+0xd2>
 8007952:	68fb      	ldr	r3, [r7, #12]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	685a      	ldr	r2, [r3, #4]
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	681b      	ldr	r3, [r3, #0]
 800795c:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8007960:	605a      	str	r2, [r3, #4]
 8007962:	68fb      	ldr	r3, [r7, #12]
 8007964:	685b      	ldr	r3, [r3, #4]
 8007966:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800796a:	d111      	bne.n	8007990 <SPI_WaitFlagStateUntilTimeout+0x94>
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	689b      	ldr	r3, [r3, #8]
 8007970:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007974:	d004      	beq.n	8007980 <SPI_WaitFlagStateUntilTimeout+0x84>
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	689b      	ldr	r3, [r3, #8]
 800797a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800797e:	d107      	bne.n	8007990 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	681a      	ldr	r2, [r3, #0]
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800798e:	601a      	str	r2, [r3, #0]
 8007990:	68fb      	ldr	r3, [r7, #12]
 8007992:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007994:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007998:	d10f      	bne.n	80079ba <SPI_WaitFlagStateUntilTimeout+0xbe>
 800799a:	68fb      	ldr	r3, [r7, #12]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	681a      	ldr	r2, [r3, #0]
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80079a8:	601a      	str	r2, [r3, #0]
 80079aa:	68fb      	ldr	r3, [r7, #12]
 80079ac:	681b      	ldr	r3, [r3, #0]
 80079ae:	681a      	ldr	r2, [r3, #0]
 80079b0:	68fb      	ldr	r3, [r7, #12]
 80079b2:	681b      	ldr	r3, [r3, #0]
 80079b4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80079b8:	601a      	str	r2, [r3, #0]
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	2201      	movs	r2, #1
 80079be:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80079c2:	68fb      	ldr	r3, [r7, #12]
 80079c4:	2200      	movs	r2, #0
 80079c6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80079ca:	2303      	movs	r3, #3
 80079cc:	e018      	b.n	8007a00 <SPI_WaitFlagStateUntilTimeout+0x104>
 80079ce:	697b      	ldr	r3, [r7, #20]
 80079d0:	2b00      	cmp	r3, #0
 80079d2:	d102      	bne.n	80079da <SPI_WaitFlagStateUntilTimeout+0xde>
 80079d4:	2300      	movs	r3, #0
 80079d6:	61fb      	str	r3, [r7, #28]
 80079d8:	e002      	b.n	80079e0 <SPI_WaitFlagStateUntilTimeout+0xe4>
 80079da:	697b      	ldr	r3, [r7, #20]
 80079dc:	3b01      	subs	r3, #1
 80079de:	617b      	str	r3, [r7, #20]
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	689a      	ldr	r2, [r3, #8]
 80079e6:	68bb      	ldr	r3, [r7, #8]
 80079e8:	4013      	ands	r3, r2
 80079ea:	68ba      	ldr	r2, [r7, #8]
 80079ec:	429a      	cmp	r2, r3
 80079ee:	bf0c      	ite	eq
 80079f0:	2301      	moveq	r3, #1
 80079f2:	2300      	movne	r3, #0
 80079f4:	b2db      	uxtb	r3, r3
 80079f6:	461a      	mov	r2, r3
 80079f8:	79fb      	ldrb	r3, [r7, #7]
 80079fa:	429a      	cmp	r2, r3
 80079fc:	d19a      	bne.n	8007934 <SPI_WaitFlagStateUntilTimeout+0x38>
 80079fe:	2300      	movs	r3, #0
 8007a00:	4618      	mov	r0, r3
 8007a02:	3720      	adds	r7, #32
 8007a04:	46bd      	mov	sp, r7
 8007a06:	bd80      	pop	{r7, pc}
 8007a08:	20000004 	.word	0x20000004

08007a0c <SPI_EndRxTxTransaction>:
 8007a0c:	b580      	push	{r7, lr}
 8007a0e:	b088      	sub	sp, #32
 8007a10:	af02      	add	r7, sp, #8
 8007a12:	60f8      	str	r0, [r7, #12]
 8007a14:	60b9      	str	r1, [r7, #8]
 8007a16:	607a      	str	r2, [r7, #4]
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	9300      	str	r3, [sp, #0]
 8007a1c:	68bb      	ldr	r3, [r7, #8]
 8007a1e:	2201      	movs	r2, #1
 8007a20:	2102      	movs	r1, #2
 8007a22:	68f8      	ldr	r0, [r7, #12]
 8007a24:	f7ff ff6a 	bl	80078fc <SPI_WaitFlagStateUntilTimeout>
 8007a28:	4603      	mov	r3, r0
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	d007      	beq.n	8007a3e <SPI_EndRxTxTransaction+0x32>
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007a32:	f043 0220 	orr.w	r2, r3, #32
 8007a36:	68fb      	ldr	r3, [r7, #12]
 8007a38:	655a      	str	r2, [r3, #84]	@ 0x54
 8007a3a:	2303      	movs	r3, #3
 8007a3c:	e032      	b.n	8007aa4 <SPI_EndRxTxTransaction+0x98>
 8007a3e:	4b1b      	ldr	r3, [pc, #108]	@ (8007aac <SPI_EndRxTxTransaction+0xa0>)
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	4a1b      	ldr	r2, [pc, #108]	@ (8007ab0 <SPI_EndRxTxTransaction+0xa4>)
 8007a44:	fba2 2303 	umull	r2, r3, r2, r3
 8007a48:	0d5b      	lsrs	r3, r3, #21
 8007a4a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8007a4e:	fb02 f303 	mul.w	r3, r2, r3
 8007a52:	617b      	str	r3, [r7, #20]
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	685b      	ldr	r3, [r3, #4]
 8007a58:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007a5c:	d112      	bne.n	8007a84 <SPI_EndRxTxTransaction+0x78>
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	9300      	str	r3, [sp, #0]
 8007a62:	68bb      	ldr	r3, [r7, #8]
 8007a64:	2200      	movs	r2, #0
 8007a66:	2180      	movs	r1, #128	@ 0x80
 8007a68:	68f8      	ldr	r0, [r7, #12]
 8007a6a:	f7ff ff47 	bl	80078fc <SPI_WaitFlagStateUntilTimeout>
 8007a6e:	4603      	mov	r3, r0
 8007a70:	2b00      	cmp	r3, #0
 8007a72:	d016      	beq.n	8007aa2 <SPI_EndRxTxTransaction+0x96>
 8007a74:	68fb      	ldr	r3, [r7, #12]
 8007a76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007a78:	f043 0220 	orr.w	r2, r3, #32
 8007a7c:	68fb      	ldr	r3, [r7, #12]
 8007a7e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007a80:	2303      	movs	r3, #3
 8007a82:	e00f      	b.n	8007aa4 <SPI_EndRxTxTransaction+0x98>
 8007a84:	697b      	ldr	r3, [r7, #20]
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d00a      	beq.n	8007aa0 <SPI_EndRxTxTransaction+0x94>
 8007a8a:	697b      	ldr	r3, [r7, #20]
 8007a8c:	3b01      	subs	r3, #1
 8007a8e:	617b      	str	r3, [r7, #20]
 8007a90:	68fb      	ldr	r3, [r7, #12]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	689b      	ldr	r3, [r3, #8]
 8007a96:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007a9a:	2b80      	cmp	r3, #128	@ 0x80
 8007a9c:	d0f2      	beq.n	8007a84 <SPI_EndRxTxTransaction+0x78>
 8007a9e:	e000      	b.n	8007aa2 <SPI_EndRxTxTransaction+0x96>
 8007aa0:	bf00      	nop
 8007aa2:	2300      	movs	r3, #0
 8007aa4:	4618      	mov	r0, r3
 8007aa6:	3718      	adds	r7, #24
 8007aa8:	46bd      	mov	sp, r7
 8007aaa:	bd80      	pop	{r7, pc}
 8007aac:	20000004 	.word	0x20000004
 8007ab0:	165e9f81 	.word	0x165e9f81

08007ab4 <HAL_TIM_Base_Init>:
 8007ab4:	b580      	push	{r7, lr}
 8007ab6:	b082      	sub	sp, #8
 8007ab8:	af00      	add	r7, sp, #0
 8007aba:	6078      	str	r0, [r7, #4]
 8007abc:	687b      	ldr	r3, [r7, #4]
 8007abe:	2b00      	cmp	r3, #0
 8007ac0:	d101      	bne.n	8007ac6 <HAL_TIM_Base_Init+0x12>
 8007ac2:	2301      	movs	r3, #1
 8007ac4:	e041      	b.n	8007b4a <HAL_TIM_Base_Init+0x96>
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007acc:	b2db      	uxtb	r3, r3
 8007ace:	2b00      	cmp	r3, #0
 8007ad0:	d106      	bne.n	8007ae0 <HAL_TIM_Base_Init+0x2c>
 8007ad2:	687b      	ldr	r3, [r7, #4]
 8007ad4:	2200      	movs	r2, #0
 8007ad6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007ada:	6878      	ldr	r0, [r7, #4]
 8007adc:	f000 f839 	bl	8007b52 <HAL_TIM_Base_MspInit>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	2202      	movs	r2, #2
 8007ae4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	681a      	ldr	r2, [r3, #0]
 8007aec:	687b      	ldr	r3, [r7, #4]
 8007aee:	3304      	adds	r3, #4
 8007af0:	4619      	mov	r1, r3
 8007af2:	4610      	mov	r0, r2
 8007af4:	f000 f9c0 	bl	8007e78 <TIM_Base_SetConfig>
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	2201      	movs	r2, #1
 8007afc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	2201      	movs	r2, #1
 8007b04:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	2201      	movs	r2, #1
 8007b0c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	2201      	movs	r2, #1
 8007b14:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	2201      	movs	r2, #1
 8007b1c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	2201      	movs	r2, #1
 8007b24:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	2201      	movs	r2, #1
 8007b2c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	2201      	movs	r2, #1
 8007b34:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	2201      	movs	r2, #1
 8007b3c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	2201      	movs	r2, #1
 8007b44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007b48:	2300      	movs	r3, #0
 8007b4a:	4618      	mov	r0, r3
 8007b4c:	3708      	adds	r7, #8
 8007b4e:	46bd      	mov	sp, r7
 8007b50:	bd80      	pop	{r7, pc}

08007b52 <HAL_TIM_Base_MspInit>:
 8007b52:	b480      	push	{r7}
 8007b54:	b083      	sub	sp, #12
 8007b56:	af00      	add	r7, sp, #0
 8007b58:	6078      	str	r0, [r7, #4]
 8007b5a:	bf00      	nop
 8007b5c:	370c      	adds	r7, #12
 8007b5e:	46bd      	mov	sp, r7
 8007b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b64:	4770      	bx	lr
	...

08007b68 <HAL_TIM_Base_Start_IT>:
 8007b68:	b480      	push	{r7}
 8007b6a:	b085      	sub	sp, #20
 8007b6c:	af00      	add	r7, sp, #0
 8007b6e:	6078      	str	r0, [r7, #4]
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007b76:	b2db      	uxtb	r3, r3
 8007b78:	2b01      	cmp	r3, #1
 8007b7a:	d001      	beq.n	8007b80 <HAL_TIM_Base_Start_IT+0x18>
 8007b7c:	2301      	movs	r3, #1
 8007b7e:	e04e      	b.n	8007c1e <HAL_TIM_Base_Start_IT+0xb6>
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	2202      	movs	r2, #2
 8007b84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	681b      	ldr	r3, [r3, #0]
 8007b8c:	68da      	ldr	r2, [r3, #12]
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	f042 0201 	orr.w	r2, r2, #1
 8007b96:	60da      	str	r2, [r3, #12]
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	681b      	ldr	r3, [r3, #0]
 8007b9c:	4a23      	ldr	r2, [pc, #140]	@ (8007c2c <HAL_TIM_Base_Start_IT+0xc4>)
 8007b9e:	4293      	cmp	r3, r2
 8007ba0:	d022      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007baa:	d01d      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	4a1f      	ldr	r2, [pc, #124]	@ (8007c30 <HAL_TIM_Base_Start_IT+0xc8>)
 8007bb2:	4293      	cmp	r3, r2
 8007bb4:	d018      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	4a1e      	ldr	r2, [pc, #120]	@ (8007c34 <HAL_TIM_Base_Start_IT+0xcc>)
 8007bbc:	4293      	cmp	r3, r2
 8007bbe:	d013      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	681b      	ldr	r3, [r3, #0]
 8007bc4:	4a1c      	ldr	r2, [pc, #112]	@ (8007c38 <HAL_TIM_Base_Start_IT+0xd0>)
 8007bc6:	4293      	cmp	r3, r2
 8007bc8:	d00e      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	4a1b      	ldr	r2, [pc, #108]	@ (8007c3c <HAL_TIM_Base_Start_IT+0xd4>)
 8007bd0:	4293      	cmp	r3, r2
 8007bd2:	d009      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	4a19      	ldr	r2, [pc, #100]	@ (8007c40 <HAL_TIM_Base_Start_IT+0xd8>)
 8007bda:	4293      	cmp	r3, r2
 8007bdc:	d004      	beq.n	8007be8 <HAL_TIM_Base_Start_IT+0x80>
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	4a18      	ldr	r2, [pc, #96]	@ (8007c44 <HAL_TIM_Base_Start_IT+0xdc>)
 8007be4:	4293      	cmp	r3, r2
 8007be6:	d111      	bne.n	8007c0c <HAL_TIM_Base_Start_IT+0xa4>
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	689b      	ldr	r3, [r3, #8]
 8007bee:	f003 0307 	and.w	r3, r3, #7
 8007bf2:	60fb      	str	r3, [r7, #12]
 8007bf4:	68fb      	ldr	r3, [r7, #12]
 8007bf6:	2b06      	cmp	r3, #6
 8007bf8:	d010      	beq.n	8007c1c <HAL_TIM_Base_Start_IT+0xb4>
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	681a      	ldr	r2, [r3, #0]
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	f042 0201 	orr.w	r2, r2, #1
 8007c08:	601a      	str	r2, [r3, #0]
 8007c0a:	e007      	b.n	8007c1c <HAL_TIM_Base_Start_IT+0xb4>
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	681a      	ldr	r2, [r3, #0]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	681b      	ldr	r3, [r3, #0]
 8007c16:	f042 0201 	orr.w	r2, r2, #1
 8007c1a:	601a      	str	r2, [r3, #0]
 8007c1c:	2300      	movs	r3, #0
 8007c1e:	4618      	mov	r0, r3
 8007c20:	3714      	adds	r7, #20
 8007c22:	46bd      	mov	sp, r7
 8007c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c28:	4770      	bx	lr
 8007c2a:	bf00      	nop
 8007c2c:	40010000 	.word	0x40010000
 8007c30:	40000400 	.word	0x40000400
 8007c34:	40000800 	.word	0x40000800
 8007c38:	40000c00 	.word	0x40000c00
 8007c3c:	40010400 	.word	0x40010400
 8007c40:	40014000 	.word	0x40014000
 8007c44:	40001800 	.word	0x40001800

08007c48 <HAL_TIM_IRQHandler>:
 8007c48:	b580      	push	{r7, lr}
 8007c4a:	b084      	sub	sp, #16
 8007c4c:	af00      	add	r7, sp, #0
 8007c4e:	6078      	str	r0, [r7, #4]
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	68db      	ldr	r3, [r3, #12]
 8007c56:	60fb      	str	r3, [r7, #12]
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	691b      	ldr	r3, [r3, #16]
 8007c5e:	60bb      	str	r3, [r7, #8]
 8007c60:	68bb      	ldr	r3, [r7, #8]
 8007c62:	f003 0302 	and.w	r3, r3, #2
 8007c66:	2b00      	cmp	r3, #0
 8007c68:	d020      	beq.n	8007cac <HAL_TIM_IRQHandler+0x64>
 8007c6a:	68fb      	ldr	r3, [r7, #12]
 8007c6c:	f003 0302 	and.w	r3, r3, #2
 8007c70:	2b00      	cmp	r3, #0
 8007c72:	d01b      	beq.n	8007cac <HAL_TIM_IRQHandler+0x64>
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	f06f 0202 	mvn.w	r2, #2
 8007c7c:	611a      	str	r2, [r3, #16]
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	2201      	movs	r2, #1
 8007c82:	771a      	strb	r2, [r3, #28]
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	699b      	ldr	r3, [r3, #24]
 8007c8a:	f003 0303 	and.w	r3, r3, #3
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d003      	beq.n	8007c9a <HAL_TIM_IRQHandler+0x52>
 8007c92:	6878      	ldr	r0, [r7, #4]
 8007c94:	f000 f8d2 	bl	8007e3c <HAL_TIM_IC_CaptureCallback>
 8007c98:	e005      	b.n	8007ca6 <HAL_TIM_IRQHandler+0x5e>
 8007c9a:	6878      	ldr	r0, [r7, #4]
 8007c9c:	f000 f8c4 	bl	8007e28 <HAL_TIM_OC_DelayElapsedCallback>
 8007ca0:	6878      	ldr	r0, [r7, #4]
 8007ca2:	f000 f8d5 	bl	8007e50 <HAL_TIM_PWM_PulseFinishedCallback>
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	2200      	movs	r2, #0
 8007caa:	771a      	strb	r2, [r3, #28]
 8007cac:	68bb      	ldr	r3, [r7, #8]
 8007cae:	f003 0304 	and.w	r3, r3, #4
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d020      	beq.n	8007cf8 <HAL_TIM_IRQHandler+0xb0>
 8007cb6:	68fb      	ldr	r3, [r7, #12]
 8007cb8:	f003 0304 	and.w	r3, r3, #4
 8007cbc:	2b00      	cmp	r3, #0
 8007cbe:	d01b      	beq.n	8007cf8 <HAL_TIM_IRQHandler+0xb0>
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	f06f 0204 	mvn.w	r2, #4
 8007cc8:	611a      	str	r2, [r3, #16]
 8007cca:	687b      	ldr	r3, [r7, #4]
 8007ccc:	2202      	movs	r2, #2
 8007cce:	771a      	strb	r2, [r3, #28]
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	699b      	ldr	r3, [r3, #24]
 8007cd6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007cda:	2b00      	cmp	r3, #0
 8007cdc:	d003      	beq.n	8007ce6 <HAL_TIM_IRQHandler+0x9e>
 8007cde:	6878      	ldr	r0, [r7, #4]
 8007ce0:	f000 f8ac 	bl	8007e3c <HAL_TIM_IC_CaptureCallback>
 8007ce4:	e005      	b.n	8007cf2 <HAL_TIM_IRQHandler+0xaa>
 8007ce6:	6878      	ldr	r0, [r7, #4]
 8007ce8:	f000 f89e 	bl	8007e28 <HAL_TIM_OC_DelayElapsedCallback>
 8007cec:	6878      	ldr	r0, [r7, #4]
 8007cee:	f000 f8af 	bl	8007e50 <HAL_TIM_PWM_PulseFinishedCallback>
 8007cf2:	687b      	ldr	r3, [r7, #4]
 8007cf4:	2200      	movs	r2, #0
 8007cf6:	771a      	strb	r2, [r3, #28]
 8007cf8:	68bb      	ldr	r3, [r7, #8]
 8007cfa:	f003 0308 	and.w	r3, r3, #8
 8007cfe:	2b00      	cmp	r3, #0
 8007d00:	d020      	beq.n	8007d44 <HAL_TIM_IRQHandler+0xfc>
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	f003 0308 	and.w	r3, r3, #8
 8007d08:	2b00      	cmp	r3, #0
 8007d0a:	d01b      	beq.n	8007d44 <HAL_TIM_IRQHandler+0xfc>
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	f06f 0208 	mvn.w	r2, #8
 8007d14:	611a      	str	r2, [r3, #16]
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	2204      	movs	r2, #4
 8007d1a:	771a      	strb	r2, [r3, #28]
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	681b      	ldr	r3, [r3, #0]
 8007d20:	69db      	ldr	r3, [r3, #28]
 8007d22:	f003 0303 	and.w	r3, r3, #3
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d003      	beq.n	8007d32 <HAL_TIM_IRQHandler+0xea>
 8007d2a:	6878      	ldr	r0, [r7, #4]
 8007d2c:	f000 f886 	bl	8007e3c <HAL_TIM_IC_CaptureCallback>
 8007d30:	e005      	b.n	8007d3e <HAL_TIM_IRQHandler+0xf6>
 8007d32:	6878      	ldr	r0, [r7, #4]
 8007d34:	f000 f878 	bl	8007e28 <HAL_TIM_OC_DelayElapsedCallback>
 8007d38:	6878      	ldr	r0, [r7, #4]
 8007d3a:	f000 f889 	bl	8007e50 <HAL_TIM_PWM_PulseFinishedCallback>
 8007d3e:	687b      	ldr	r3, [r7, #4]
 8007d40:	2200      	movs	r2, #0
 8007d42:	771a      	strb	r2, [r3, #28]
 8007d44:	68bb      	ldr	r3, [r7, #8]
 8007d46:	f003 0310 	and.w	r3, r3, #16
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d020      	beq.n	8007d90 <HAL_TIM_IRQHandler+0x148>
 8007d4e:	68fb      	ldr	r3, [r7, #12]
 8007d50:	f003 0310 	and.w	r3, r3, #16
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	d01b      	beq.n	8007d90 <HAL_TIM_IRQHandler+0x148>
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	681b      	ldr	r3, [r3, #0]
 8007d5c:	f06f 0210 	mvn.w	r2, #16
 8007d60:	611a      	str	r2, [r3, #16]
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	2208      	movs	r2, #8
 8007d66:	771a      	strb	r2, [r3, #28]
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	681b      	ldr	r3, [r3, #0]
 8007d6c:	69db      	ldr	r3, [r3, #28]
 8007d6e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007d72:	2b00      	cmp	r3, #0
 8007d74:	d003      	beq.n	8007d7e <HAL_TIM_IRQHandler+0x136>
 8007d76:	6878      	ldr	r0, [r7, #4]
 8007d78:	f000 f860 	bl	8007e3c <HAL_TIM_IC_CaptureCallback>
 8007d7c:	e005      	b.n	8007d8a <HAL_TIM_IRQHandler+0x142>
 8007d7e:	6878      	ldr	r0, [r7, #4]
 8007d80:	f000 f852 	bl	8007e28 <HAL_TIM_OC_DelayElapsedCallback>
 8007d84:	6878      	ldr	r0, [r7, #4]
 8007d86:	f000 f863 	bl	8007e50 <HAL_TIM_PWM_PulseFinishedCallback>
 8007d8a:	687b      	ldr	r3, [r7, #4]
 8007d8c:	2200      	movs	r2, #0
 8007d8e:	771a      	strb	r2, [r3, #28]
 8007d90:	68bb      	ldr	r3, [r7, #8]
 8007d92:	f003 0301 	and.w	r3, r3, #1
 8007d96:	2b00      	cmp	r3, #0
 8007d98:	d00c      	beq.n	8007db4 <HAL_TIM_IRQHandler+0x16c>
 8007d9a:	68fb      	ldr	r3, [r7, #12]
 8007d9c:	f003 0301 	and.w	r3, r3, #1
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	d007      	beq.n	8007db4 <HAL_TIM_IRQHandler+0x16c>
 8007da4:	687b      	ldr	r3, [r7, #4]
 8007da6:	681b      	ldr	r3, [r3, #0]
 8007da8:	f06f 0201 	mvn.w	r2, #1
 8007dac:	611a      	str	r2, [r3, #16]
 8007dae:	6878      	ldr	r0, [r7, #4]
 8007db0:	f7fa ff4a 	bl	8002c48 <HAL_TIM_PeriodElapsedCallback>
 8007db4:	68bb      	ldr	r3, [r7, #8]
 8007db6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007dba:	2b00      	cmp	r3, #0
 8007dbc:	d00c      	beq.n	8007dd8 <HAL_TIM_IRQHandler+0x190>
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007dc4:	2b00      	cmp	r3, #0
 8007dc6:	d007      	beq.n	8007dd8 <HAL_TIM_IRQHandler+0x190>
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	681b      	ldr	r3, [r3, #0]
 8007dcc:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007dd0:	611a      	str	r2, [r3, #16]
 8007dd2:	6878      	ldr	r0, [r7, #4]
 8007dd4:	f000 f900 	bl	8007fd8 <HAL_TIMEx_BreakCallback>
 8007dd8:	68bb      	ldr	r3, [r7, #8]
 8007dda:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007dde:	2b00      	cmp	r3, #0
 8007de0:	d00c      	beq.n	8007dfc <HAL_TIM_IRQHandler+0x1b4>
 8007de2:	68fb      	ldr	r3, [r7, #12]
 8007de4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d007      	beq.n	8007dfc <HAL_TIM_IRQHandler+0x1b4>
 8007dec:	687b      	ldr	r3, [r7, #4]
 8007dee:	681b      	ldr	r3, [r3, #0]
 8007df0:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007df4:	611a      	str	r2, [r3, #16]
 8007df6:	6878      	ldr	r0, [r7, #4]
 8007df8:	f000 f834 	bl	8007e64 <HAL_TIM_TriggerCallback>
 8007dfc:	68bb      	ldr	r3, [r7, #8]
 8007dfe:	f003 0320 	and.w	r3, r3, #32
 8007e02:	2b00      	cmp	r3, #0
 8007e04:	d00c      	beq.n	8007e20 <HAL_TIM_IRQHandler+0x1d8>
 8007e06:	68fb      	ldr	r3, [r7, #12]
 8007e08:	f003 0320 	and.w	r3, r3, #32
 8007e0c:	2b00      	cmp	r3, #0
 8007e0e:	d007      	beq.n	8007e20 <HAL_TIM_IRQHandler+0x1d8>
 8007e10:	687b      	ldr	r3, [r7, #4]
 8007e12:	681b      	ldr	r3, [r3, #0]
 8007e14:	f06f 0220 	mvn.w	r2, #32
 8007e18:	611a      	str	r2, [r3, #16]
 8007e1a:	6878      	ldr	r0, [r7, #4]
 8007e1c:	f000 f8d2 	bl	8007fc4 <HAL_TIMEx_CommutCallback>
 8007e20:	bf00      	nop
 8007e22:	3710      	adds	r7, #16
 8007e24:	46bd      	mov	sp, r7
 8007e26:	bd80      	pop	{r7, pc}

08007e28 <HAL_TIM_OC_DelayElapsedCallback>:
 8007e28:	b480      	push	{r7}
 8007e2a:	b083      	sub	sp, #12
 8007e2c:	af00      	add	r7, sp, #0
 8007e2e:	6078      	str	r0, [r7, #4]
 8007e30:	bf00      	nop
 8007e32:	370c      	adds	r7, #12
 8007e34:	46bd      	mov	sp, r7
 8007e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e3a:	4770      	bx	lr

08007e3c <HAL_TIM_IC_CaptureCallback>:
 8007e3c:	b480      	push	{r7}
 8007e3e:	b083      	sub	sp, #12
 8007e40:	af00      	add	r7, sp, #0
 8007e42:	6078      	str	r0, [r7, #4]
 8007e44:	bf00      	nop
 8007e46:	370c      	adds	r7, #12
 8007e48:	46bd      	mov	sp, r7
 8007e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e4e:	4770      	bx	lr

08007e50 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007e50:	b480      	push	{r7}
 8007e52:	b083      	sub	sp, #12
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
 8007e58:	bf00      	nop
 8007e5a:	370c      	adds	r7, #12
 8007e5c:	46bd      	mov	sp, r7
 8007e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e62:	4770      	bx	lr

08007e64 <HAL_TIM_TriggerCallback>:
 8007e64:	b480      	push	{r7}
 8007e66:	b083      	sub	sp, #12
 8007e68:	af00      	add	r7, sp, #0
 8007e6a:	6078      	str	r0, [r7, #4]
 8007e6c:	bf00      	nop
 8007e6e:	370c      	adds	r7, #12
 8007e70:	46bd      	mov	sp, r7
 8007e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e76:	4770      	bx	lr

08007e78 <TIM_Base_SetConfig>:
 8007e78:	b480      	push	{r7}
 8007e7a:	b085      	sub	sp, #20
 8007e7c:	af00      	add	r7, sp, #0
 8007e7e:	6078      	str	r0, [r7, #4]
 8007e80:	6039      	str	r1, [r7, #0]
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	60fb      	str	r3, [r7, #12]
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	4a43      	ldr	r2, [pc, #268]	@ (8007f98 <TIM_Base_SetConfig+0x120>)
 8007e8c:	4293      	cmp	r3, r2
 8007e8e:	d013      	beq.n	8007eb8 <TIM_Base_SetConfig+0x40>
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007e96:	d00f      	beq.n	8007eb8 <TIM_Base_SetConfig+0x40>
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	4a40      	ldr	r2, [pc, #256]	@ (8007f9c <TIM_Base_SetConfig+0x124>)
 8007e9c:	4293      	cmp	r3, r2
 8007e9e:	d00b      	beq.n	8007eb8 <TIM_Base_SetConfig+0x40>
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	4a3f      	ldr	r2, [pc, #252]	@ (8007fa0 <TIM_Base_SetConfig+0x128>)
 8007ea4:	4293      	cmp	r3, r2
 8007ea6:	d007      	beq.n	8007eb8 <TIM_Base_SetConfig+0x40>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	4a3e      	ldr	r2, [pc, #248]	@ (8007fa4 <TIM_Base_SetConfig+0x12c>)
 8007eac:	4293      	cmp	r3, r2
 8007eae:	d003      	beq.n	8007eb8 <TIM_Base_SetConfig+0x40>
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	4a3d      	ldr	r2, [pc, #244]	@ (8007fa8 <TIM_Base_SetConfig+0x130>)
 8007eb4:	4293      	cmp	r3, r2
 8007eb6:	d108      	bne.n	8007eca <TIM_Base_SetConfig+0x52>
 8007eb8:	68fb      	ldr	r3, [r7, #12]
 8007eba:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007ebe:	60fb      	str	r3, [r7, #12]
 8007ec0:	683b      	ldr	r3, [r7, #0]
 8007ec2:	685b      	ldr	r3, [r3, #4]
 8007ec4:	68fa      	ldr	r2, [r7, #12]
 8007ec6:	4313      	orrs	r3, r2
 8007ec8:	60fb      	str	r3, [r7, #12]
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	4a32      	ldr	r2, [pc, #200]	@ (8007f98 <TIM_Base_SetConfig+0x120>)
 8007ece:	4293      	cmp	r3, r2
 8007ed0:	d02b      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007ed8:	d027      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	4a2f      	ldr	r2, [pc, #188]	@ (8007f9c <TIM_Base_SetConfig+0x124>)
 8007ede:	4293      	cmp	r3, r2
 8007ee0:	d023      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	4a2e      	ldr	r2, [pc, #184]	@ (8007fa0 <TIM_Base_SetConfig+0x128>)
 8007ee6:	4293      	cmp	r3, r2
 8007ee8:	d01f      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007eea:	687b      	ldr	r3, [r7, #4]
 8007eec:	4a2d      	ldr	r2, [pc, #180]	@ (8007fa4 <TIM_Base_SetConfig+0x12c>)
 8007eee:	4293      	cmp	r3, r2
 8007ef0:	d01b      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	4a2c      	ldr	r2, [pc, #176]	@ (8007fa8 <TIM_Base_SetConfig+0x130>)
 8007ef6:	4293      	cmp	r3, r2
 8007ef8:	d017      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	4a2b      	ldr	r2, [pc, #172]	@ (8007fac <TIM_Base_SetConfig+0x134>)
 8007efe:	4293      	cmp	r3, r2
 8007f00:	d013      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	4a2a      	ldr	r2, [pc, #168]	@ (8007fb0 <TIM_Base_SetConfig+0x138>)
 8007f06:	4293      	cmp	r3, r2
 8007f08:	d00f      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	4a29      	ldr	r2, [pc, #164]	@ (8007fb4 <TIM_Base_SetConfig+0x13c>)
 8007f0e:	4293      	cmp	r3, r2
 8007f10:	d00b      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007f12:	687b      	ldr	r3, [r7, #4]
 8007f14:	4a28      	ldr	r2, [pc, #160]	@ (8007fb8 <TIM_Base_SetConfig+0x140>)
 8007f16:	4293      	cmp	r3, r2
 8007f18:	d007      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	4a27      	ldr	r2, [pc, #156]	@ (8007fbc <TIM_Base_SetConfig+0x144>)
 8007f1e:	4293      	cmp	r3, r2
 8007f20:	d003      	beq.n	8007f2a <TIM_Base_SetConfig+0xb2>
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	4a26      	ldr	r2, [pc, #152]	@ (8007fc0 <TIM_Base_SetConfig+0x148>)
 8007f26:	4293      	cmp	r3, r2
 8007f28:	d108      	bne.n	8007f3c <TIM_Base_SetConfig+0xc4>
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007f30:	60fb      	str	r3, [r7, #12]
 8007f32:	683b      	ldr	r3, [r7, #0]
 8007f34:	68db      	ldr	r3, [r3, #12]
 8007f36:	68fa      	ldr	r2, [r7, #12]
 8007f38:	4313      	orrs	r3, r2
 8007f3a:	60fb      	str	r3, [r7, #12]
 8007f3c:	68fb      	ldr	r3, [r7, #12]
 8007f3e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007f42:	683b      	ldr	r3, [r7, #0]
 8007f44:	695b      	ldr	r3, [r3, #20]
 8007f46:	4313      	orrs	r3, r2
 8007f48:	60fb      	str	r3, [r7, #12]
 8007f4a:	683b      	ldr	r3, [r7, #0]
 8007f4c:	689a      	ldr	r2, [r3, #8]
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007f52:	683b      	ldr	r3, [r7, #0]
 8007f54:	681a      	ldr	r2, [r3, #0]
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	629a      	str	r2, [r3, #40]	@ 0x28
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	4a0e      	ldr	r2, [pc, #56]	@ (8007f98 <TIM_Base_SetConfig+0x120>)
 8007f5e:	4293      	cmp	r3, r2
 8007f60:	d003      	beq.n	8007f6a <TIM_Base_SetConfig+0xf2>
 8007f62:	687b      	ldr	r3, [r7, #4]
 8007f64:	4a10      	ldr	r2, [pc, #64]	@ (8007fa8 <TIM_Base_SetConfig+0x130>)
 8007f66:	4293      	cmp	r3, r2
 8007f68:	d103      	bne.n	8007f72 <TIM_Base_SetConfig+0xfa>
 8007f6a:	683b      	ldr	r3, [r7, #0]
 8007f6c:	691a      	ldr	r2, [r3, #16]
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	631a      	str	r2, [r3, #48]	@ 0x30
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	681b      	ldr	r3, [r3, #0]
 8007f76:	f043 0204 	orr.w	r2, r3, #4
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	601a      	str	r2, [r3, #0]
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	2201      	movs	r2, #1
 8007f82:	615a      	str	r2, [r3, #20]
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	68fa      	ldr	r2, [r7, #12]
 8007f88:	601a      	str	r2, [r3, #0]
 8007f8a:	bf00      	nop
 8007f8c:	3714      	adds	r7, #20
 8007f8e:	46bd      	mov	sp, r7
 8007f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f94:	4770      	bx	lr
 8007f96:	bf00      	nop
 8007f98:	40010000 	.word	0x40010000
 8007f9c:	40000400 	.word	0x40000400
 8007fa0:	40000800 	.word	0x40000800
 8007fa4:	40000c00 	.word	0x40000c00
 8007fa8:	40010400 	.word	0x40010400
 8007fac:	40014000 	.word	0x40014000
 8007fb0:	40014400 	.word	0x40014400
 8007fb4:	40014800 	.word	0x40014800
 8007fb8:	40001800 	.word	0x40001800
 8007fbc:	40001c00 	.word	0x40001c00
 8007fc0:	40002000 	.word	0x40002000

08007fc4 <HAL_TIMEx_CommutCallback>:
 8007fc4:	b480      	push	{r7}
 8007fc6:	b083      	sub	sp, #12
 8007fc8:	af00      	add	r7, sp, #0
 8007fca:	6078      	str	r0, [r7, #4]
 8007fcc:	bf00      	nop
 8007fce:	370c      	adds	r7, #12
 8007fd0:	46bd      	mov	sp, r7
 8007fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fd6:	4770      	bx	lr

08007fd8 <HAL_TIMEx_BreakCallback>:
 8007fd8:	b480      	push	{r7}
 8007fda:	b083      	sub	sp, #12
 8007fdc:	af00      	add	r7, sp, #0
 8007fde:	6078      	str	r0, [r7, #4]
 8007fe0:	bf00      	nop
 8007fe2:	370c      	adds	r7, #12
 8007fe4:	46bd      	mov	sp, r7
 8007fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fea:	4770      	bx	lr

08007fec <makeFreeRtosPriority>:
 8007fec:	b480      	push	{r7}
 8007fee:	b085      	sub	sp, #20
 8007ff0:	af00      	add	r7, sp, #0
 8007ff2:	4603      	mov	r3, r0
 8007ff4:	80fb      	strh	r3, [r7, #6]
 8007ff6:	2300      	movs	r3, #0
 8007ff8:	60fb      	str	r3, [r7, #12]
 8007ffa:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007ffe:	2b84      	cmp	r3, #132	@ 0x84
 8008000:	d005      	beq.n	800800e <makeFreeRtosPriority+0x22>
 8008002:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008006:	68fb      	ldr	r3, [r7, #12]
 8008008:	4413      	add	r3, r2
 800800a:	3303      	adds	r3, #3
 800800c:	60fb      	str	r3, [r7, #12]
 800800e:	68fb      	ldr	r3, [r7, #12]
 8008010:	4618      	mov	r0, r3
 8008012:	3714      	adds	r7, #20
 8008014:	46bd      	mov	sp, r7
 8008016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800801a:	4770      	bx	lr

0800801c <inHandlerMode>:
 800801c:	b480      	push	{r7}
 800801e:	b083      	sub	sp, #12
 8008020:	af00      	add	r7, sp, #0
 8008022:	f3ef 8305 	mrs	r3, IPSR
 8008026:	607b      	str	r3, [r7, #4]
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	2b00      	cmp	r3, #0
 800802c:	bf14      	ite	ne
 800802e:	2301      	movne	r3, #1
 8008030:	2300      	moveq	r3, #0
 8008032:	b2db      	uxtb	r3, r3
 8008034:	4618      	mov	r0, r3
 8008036:	370c      	adds	r7, #12
 8008038:	46bd      	mov	sp, r7
 800803a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800803e:	4770      	bx	lr

08008040 <osKernelStart>:
 8008040:	b580      	push	{r7, lr}
 8008042:	af00      	add	r7, sp, #0
 8008044:	f000 fcaa 	bl	800899c <vTaskStartScheduler>
 8008048:	2300      	movs	r3, #0
 800804a:	4618      	mov	r0, r3
 800804c:	bd80      	pop	{r7, pc}

0800804e <osThreadCreate>:
 800804e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008050:	b089      	sub	sp, #36	@ 0x24
 8008052:	af04      	add	r7, sp, #16
 8008054:	6078      	str	r0, [r7, #4]
 8008056:	6039      	str	r1, [r7, #0]
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	695b      	ldr	r3, [r3, #20]
 800805c:	2b00      	cmp	r3, #0
 800805e:	d020      	beq.n	80080a2 <osThreadCreate+0x54>
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	699b      	ldr	r3, [r3, #24]
 8008064:	2b00      	cmp	r3, #0
 8008066:	d01c      	beq.n	80080a2 <osThreadCreate+0x54>
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	685c      	ldr	r4, [r3, #4]
 800806c:	687b      	ldr	r3, [r7, #4]
 800806e:	681d      	ldr	r5, [r3, #0]
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	691e      	ldr	r6, [r3, #16]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800807a:	4618      	mov	r0, r3
 800807c:	f7ff ffb6 	bl	8007fec <makeFreeRtosPriority>
 8008080:	4601      	mov	r1, r0
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	695b      	ldr	r3, [r3, #20]
 8008086:	687a      	ldr	r2, [r7, #4]
 8008088:	6992      	ldr	r2, [r2, #24]
 800808a:	9202      	str	r2, [sp, #8]
 800808c:	9301      	str	r3, [sp, #4]
 800808e:	9100      	str	r1, [sp, #0]
 8008090:	683b      	ldr	r3, [r7, #0]
 8008092:	4632      	mov	r2, r6
 8008094:	4629      	mov	r1, r5
 8008096:	4620      	mov	r0, r4
 8008098:	f000 f91c 	bl	80082d4 <xTaskCreateStatic>
 800809c:	4603      	mov	r3, r0
 800809e:	60fb      	str	r3, [r7, #12]
 80080a0:	e01c      	b.n	80080dc <osThreadCreate+0x8e>
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	685c      	ldr	r4, [r3, #4]
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	681d      	ldr	r5, [r3, #0]
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	691b      	ldr	r3, [r3, #16]
 80080ae:	b29e      	uxth	r6, r3
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80080b6:	4618      	mov	r0, r3
 80080b8:	f7ff ff98 	bl	8007fec <makeFreeRtosPriority>
 80080bc:	4602      	mov	r2, r0
 80080be:	f107 030c 	add.w	r3, r7, #12
 80080c2:	9301      	str	r3, [sp, #4]
 80080c4:	9200      	str	r2, [sp, #0]
 80080c6:	683b      	ldr	r3, [r7, #0]
 80080c8:	4632      	mov	r2, r6
 80080ca:	4629      	mov	r1, r5
 80080cc:	4620      	mov	r0, r4
 80080ce:	f000 f961 	bl	8008394 <xTaskCreate>
 80080d2:	4603      	mov	r3, r0
 80080d4:	2b01      	cmp	r3, #1
 80080d6:	d001      	beq.n	80080dc <osThreadCreate+0x8e>
 80080d8:	2300      	movs	r3, #0
 80080da:	e000      	b.n	80080de <osThreadCreate+0x90>
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	4618      	mov	r0, r3
 80080e0:	3714      	adds	r7, #20
 80080e2:	46bd      	mov	sp, r7
 80080e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080080e6 <osDelay>:
 80080e6:	b580      	push	{r7, lr}
 80080e8:	b084      	sub	sp, #16
 80080ea:	af00      	add	r7, sp, #0
 80080ec:	6078      	str	r0, [r7, #4]
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	60fb      	str	r3, [r7, #12]
 80080f2:	68fb      	ldr	r3, [r7, #12]
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d001      	beq.n	80080fc <osDelay+0x16>
 80080f8:	68fb      	ldr	r3, [r7, #12]
 80080fa:	e000      	b.n	80080fe <osDelay+0x18>
 80080fc:	2301      	movs	r3, #1
 80080fe:	4618      	mov	r0, r3
 8008100:	f000 fa80 	bl	8008604 <vTaskDelay>
 8008104:	2300      	movs	r3, #0
 8008106:	4618      	mov	r0, r3
 8008108:	3710      	adds	r7, #16
 800810a:	46bd      	mov	sp, r7
 800810c:	bd80      	pop	{r7, pc}

0800810e <osThreadSuspend>:
 800810e:	b580      	push	{r7, lr}
 8008110:	b082      	sub	sp, #8
 8008112:	af00      	add	r7, sp, #0
 8008114:	6078      	str	r0, [r7, #4]
 8008116:	6878      	ldr	r0, [r7, #4]
 8008118:	f000 faaa 	bl	8008670 <vTaskSuspend>
 800811c:	2300      	movs	r3, #0
 800811e:	4618      	mov	r0, r3
 8008120:	3708      	adds	r7, #8
 8008122:	46bd      	mov	sp, r7
 8008124:	bd80      	pop	{r7, pc}
	...

08008128 <osThreadResume>:
 8008128:	b580      	push	{r7, lr}
 800812a:	b082      	sub	sp, #8
 800812c:	af00      	add	r7, sp, #0
 800812e:	6078      	str	r0, [r7, #4]
 8008130:	f7ff ff74 	bl	800801c <inHandlerMode>
 8008134:	4603      	mov	r3, r0
 8008136:	2b00      	cmp	r3, #0
 8008138:	d00e      	beq.n	8008158 <osThreadResume+0x30>
 800813a:	6878      	ldr	r0, [r7, #4]
 800813c:	f000 fbbc 	bl	80088b8 <xTaskResumeFromISR>
 8008140:	4603      	mov	r3, r0
 8008142:	2b01      	cmp	r3, #1
 8008144:	d10b      	bne.n	800815e <osThreadResume+0x36>
 8008146:	4b08      	ldr	r3, [pc, #32]	@ (8008168 <osThreadResume+0x40>)
 8008148:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800814c:	601a      	str	r2, [r3, #0]
 800814e:	f3bf 8f4f 	dsb	sy
 8008152:	f3bf 8f6f 	isb	sy
 8008156:	e002      	b.n	800815e <osThreadResume+0x36>
 8008158:	6878      	ldr	r0, [r7, #4]
 800815a:	f000 fb4f 	bl	80087fc <vTaskResume>
 800815e:	2300      	movs	r3, #0
 8008160:	4618      	mov	r0, r3
 8008162:	3708      	adds	r7, #8
 8008164:	46bd      	mov	sp, r7
 8008166:	bd80      	pop	{r7, pc}
 8008168:	e000ed04 	.word	0xe000ed04

0800816c <vListInitialise>:
 800816c:	b480      	push	{r7}
 800816e:	b083      	sub	sp, #12
 8008170:	af00      	add	r7, sp, #0
 8008172:	6078      	str	r0, [r7, #4]
 8008174:	687b      	ldr	r3, [r7, #4]
 8008176:	f103 0208 	add.w	r2, r3, #8
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	605a      	str	r2, [r3, #4]
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	f04f 32ff 	mov.w	r2, #4294967295
 8008184:	609a      	str	r2, [r3, #8]
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	f103 0208 	add.w	r2, r3, #8
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	60da      	str	r2, [r3, #12]
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	f103 0208 	add.w	r2, r3, #8
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	611a      	str	r2, [r3, #16]
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	2200      	movs	r2, #0
 800819e:	601a      	str	r2, [r3, #0]
 80081a0:	bf00      	nop
 80081a2:	370c      	adds	r7, #12
 80081a4:	46bd      	mov	sp, r7
 80081a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081aa:	4770      	bx	lr

080081ac <vListInitialiseItem>:
 80081ac:	b480      	push	{r7}
 80081ae:	b083      	sub	sp, #12
 80081b0:	af00      	add	r7, sp, #0
 80081b2:	6078      	str	r0, [r7, #4]
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	2200      	movs	r2, #0
 80081b8:	611a      	str	r2, [r3, #16]
 80081ba:	bf00      	nop
 80081bc:	370c      	adds	r7, #12
 80081be:	46bd      	mov	sp, r7
 80081c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081c4:	4770      	bx	lr

080081c6 <vListInsertEnd>:
 80081c6:	b480      	push	{r7}
 80081c8:	b085      	sub	sp, #20
 80081ca:	af00      	add	r7, sp, #0
 80081cc:	6078      	str	r0, [r7, #4]
 80081ce:	6039      	str	r1, [r7, #0]
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	685b      	ldr	r3, [r3, #4]
 80081d4:	60fb      	str	r3, [r7, #12]
 80081d6:	683b      	ldr	r3, [r7, #0]
 80081d8:	68fa      	ldr	r2, [r7, #12]
 80081da:	605a      	str	r2, [r3, #4]
 80081dc:	68fb      	ldr	r3, [r7, #12]
 80081de:	689a      	ldr	r2, [r3, #8]
 80081e0:	683b      	ldr	r3, [r7, #0]
 80081e2:	609a      	str	r2, [r3, #8]
 80081e4:	68fb      	ldr	r3, [r7, #12]
 80081e6:	689b      	ldr	r3, [r3, #8]
 80081e8:	683a      	ldr	r2, [r7, #0]
 80081ea:	605a      	str	r2, [r3, #4]
 80081ec:	68fb      	ldr	r3, [r7, #12]
 80081ee:	683a      	ldr	r2, [r7, #0]
 80081f0:	609a      	str	r2, [r3, #8]
 80081f2:	683b      	ldr	r3, [r7, #0]
 80081f4:	687a      	ldr	r2, [r7, #4]
 80081f6:	611a      	str	r2, [r3, #16]
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	681b      	ldr	r3, [r3, #0]
 80081fc:	1c5a      	adds	r2, r3, #1
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	601a      	str	r2, [r3, #0]
 8008202:	bf00      	nop
 8008204:	3714      	adds	r7, #20
 8008206:	46bd      	mov	sp, r7
 8008208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800820c:	4770      	bx	lr

0800820e <vListInsert>:
 800820e:	b480      	push	{r7}
 8008210:	b085      	sub	sp, #20
 8008212:	af00      	add	r7, sp, #0
 8008214:	6078      	str	r0, [r7, #4]
 8008216:	6039      	str	r1, [r7, #0]
 8008218:	683b      	ldr	r3, [r7, #0]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	60bb      	str	r3, [r7, #8]
 800821e:	68bb      	ldr	r3, [r7, #8]
 8008220:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008224:	d103      	bne.n	800822e <vListInsert+0x20>
 8008226:	687b      	ldr	r3, [r7, #4]
 8008228:	691b      	ldr	r3, [r3, #16]
 800822a:	60fb      	str	r3, [r7, #12]
 800822c:	e00c      	b.n	8008248 <vListInsert+0x3a>
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	3308      	adds	r3, #8
 8008232:	60fb      	str	r3, [r7, #12]
 8008234:	e002      	b.n	800823c <vListInsert+0x2e>
 8008236:	68fb      	ldr	r3, [r7, #12]
 8008238:	685b      	ldr	r3, [r3, #4]
 800823a:	60fb      	str	r3, [r7, #12]
 800823c:	68fb      	ldr	r3, [r7, #12]
 800823e:	685b      	ldr	r3, [r3, #4]
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	68ba      	ldr	r2, [r7, #8]
 8008244:	429a      	cmp	r2, r3
 8008246:	d2f6      	bcs.n	8008236 <vListInsert+0x28>
 8008248:	68fb      	ldr	r3, [r7, #12]
 800824a:	685a      	ldr	r2, [r3, #4]
 800824c:	683b      	ldr	r3, [r7, #0]
 800824e:	605a      	str	r2, [r3, #4]
 8008250:	683b      	ldr	r3, [r7, #0]
 8008252:	685b      	ldr	r3, [r3, #4]
 8008254:	683a      	ldr	r2, [r7, #0]
 8008256:	609a      	str	r2, [r3, #8]
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	68fa      	ldr	r2, [r7, #12]
 800825c:	609a      	str	r2, [r3, #8]
 800825e:	68fb      	ldr	r3, [r7, #12]
 8008260:	683a      	ldr	r2, [r7, #0]
 8008262:	605a      	str	r2, [r3, #4]
 8008264:	683b      	ldr	r3, [r7, #0]
 8008266:	687a      	ldr	r2, [r7, #4]
 8008268:	611a      	str	r2, [r3, #16]
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	681b      	ldr	r3, [r3, #0]
 800826e:	1c5a      	adds	r2, r3, #1
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	601a      	str	r2, [r3, #0]
 8008274:	bf00      	nop
 8008276:	3714      	adds	r7, #20
 8008278:	46bd      	mov	sp, r7
 800827a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800827e:	4770      	bx	lr

08008280 <uxListRemove>:
 8008280:	b480      	push	{r7}
 8008282:	b085      	sub	sp, #20
 8008284:	af00      	add	r7, sp, #0
 8008286:	6078      	str	r0, [r7, #4]
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	691b      	ldr	r3, [r3, #16]
 800828c:	60fb      	str	r3, [r7, #12]
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	685b      	ldr	r3, [r3, #4]
 8008292:	687a      	ldr	r2, [r7, #4]
 8008294:	6892      	ldr	r2, [r2, #8]
 8008296:	609a      	str	r2, [r3, #8]
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	689b      	ldr	r3, [r3, #8]
 800829c:	687a      	ldr	r2, [r7, #4]
 800829e:	6852      	ldr	r2, [r2, #4]
 80082a0:	605a      	str	r2, [r3, #4]
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	685b      	ldr	r3, [r3, #4]
 80082a6:	687a      	ldr	r2, [r7, #4]
 80082a8:	429a      	cmp	r2, r3
 80082aa:	d103      	bne.n	80082b4 <uxListRemove+0x34>
 80082ac:	687b      	ldr	r3, [r7, #4]
 80082ae:	689a      	ldr	r2, [r3, #8]
 80082b0:	68fb      	ldr	r3, [r7, #12]
 80082b2:	605a      	str	r2, [r3, #4]
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	2200      	movs	r2, #0
 80082b8:	611a      	str	r2, [r3, #16]
 80082ba:	68fb      	ldr	r3, [r7, #12]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	1e5a      	subs	r2, r3, #1
 80082c0:	68fb      	ldr	r3, [r7, #12]
 80082c2:	601a      	str	r2, [r3, #0]
 80082c4:	68fb      	ldr	r3, [r7, #12]
 80082c6:	681b      	ldr	r3, [r3, #0]
 80082c8:	4618      	mov	r0, r3
 80082ca:	3714      	adds	r7, #20
 80082cc:	46bd      	mov	sp, r7
 80082ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082d2:	4770      	bx	lr

080082d4 <xTaskCreateStatic>:
 80082d4:	b580      	push	{r7, lr}
 80082d6:	b08e      	sub	sp, #56	@ 0x38
 80082d8:	af04      	add	r7, sp, #16
 80082da:	60f8      	str	r0, [r7, #12]
 80082dc:	60b9      	str	r1, [r7, #8]
 80082de:	607a      	str	r2, [r7, #4]
 80082e0:	603b      	str	r3, [r7, #0]
 80082e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80082e4:	2b00      	cmp	r3, #0
 80082e6:	d10b      	bne.n	8008300 <xTaskCreateStatic+0x2c>
 80082e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082ec:	f383 8811 	msr	BASEPRI, r3
 80082f0:	f3bf 8f6f 	isb	sy
 80082f4:	f3bf 8f4f 	dsb	sy
 80082f8:	623b      	str	r3, [r7, #32]
 80082fa:	bf00      	nop
 80082fc:	bf00      	nop
 80082fe:	e7fd      	b.n	80082fc <xTaskCreateStatic+0x28>
 8008300:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008302:	2b00      	cmp	r3, #0
 8008304:	d10b      	bne.n	800831e <xTaskCreateStatic+0x4a>
 8008306:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800830a:	f383 8811 	msr	BASEPRI, r3
 800830e:	f3bf 8f6f 	isb	sy
 8008312:	f3bf 8f4f 	dsb	sy
 8008316:	61fb      	str	r3, [r7, #28]
 8008318:	bf00      	nop
 800831a:	bf00      	nop
 800831c:	e7fd      	b.n	800831a <xTaskCreateStatic+0x46>
 800831e:	2354      	movs	r3, #84	@ 0x54
 8008320:	613b      	str	r3, [r7, #16]
 8008322:	693b      	ldr	r3, [r7, #16]
 8008324:	2b54      	cmp	r3, #84	@ 0x54
 8008326:	d00b      	beq.n	8008340 <xTaskCreateStatic+0x6c>
 8008328:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800832c:	f383 8811 	msr	BASEPRI, r3
 8008330:	f3bf 8f6f 	isb	sy
 8008334:	f3bf 8f4f 	dsb	sy
 8008338:	61bb      	str	r3, [r7, #24]
 800833a:	bf00      	nop
 800833c:	bf00      	nop
 800833e:	e7fd      	b.n	800833c <xTaskCreateStatic+0x68>
 8008340:	693b      	ldr	r3, [r7, #16]
 8008342:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008344:	2b00      	cmp	r3, #0
 8008346:	d01e      	beq.n	8008386 <xTaskCreateStatic+0xb2>
 8008348:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800834a:	2b00      	cmp	r3, #0
 800834c:	d01b      	beq.n	8008386 <xTaskCreateStatic+0xb2>
 800834e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008350:	627b      	str	r3, [r7, #36]	@ 0x24
 8008352:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008354:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008356:	631a      	str	r2, [r3, #48]	@ 0x30
 8008358:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800835a:	2202      	movs	r2, #2
 800835c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008360:	2300      	movs	r3, #0
 8008362:	9303      	str	r3, [sp, #12]
 8008364:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008366:	9302      	str	r3, [sp, #8]
 8008368:	f107 0314 	add.w	r3, r7, #20
 800836c:	9301      	str	r3, [sp, #4]
 800836e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008370:	9300      	str	r3, [sp, #0]
 8008372:	683b      	ldr	r3, [r7, #0]
 8008374:	687a      	ldr	r2, [r7, #4]
 8008376:	68b9      	ldr	r1, [r7, #8]
 8008378:	68f8      	ldr	r0, [r7, #12]
 800837a:	f000 f850 	bl	800841e <prvInitialiseNewTask>
 800837e:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8008380:	f000 f8d6 	bl	8008530 <prvAddNewTaskToReadyList>
 8008384:	e001      	b.n	800838a <xTaskCreateStatic+0xb6>
 8008386:	2300      	movs	r3, #0
 8008388:	617b      	str	r3, [r7, #20]
 800838a:	697b      	ldr	r3, [r7, #20]
 800838c:	4618      	mov	r0, r3
 800838e:	3728      	adds	r7, #40	@ 0x28
 8008390:	46bd      	mov	sp, r7
 8008392:	bd80      	pop	{r7, pc}

08008394 <xTaskCreate>:
 8008394:	b580      	push	{r7, lr}
 8008396:	b08c      	sub	sp, #48	@ 0x30
 8008398:	af04      	add	r7, sp, #16
 800839a:	60f8      	str	r0, [r7, #12]
 800839c:	60b9      	str	r1, [r7, #8]
 800839e:	603b      	str	r3, [r7, #0]
 80083a0:	4613      	mov	r3, r2
 80083a2:	80fb      	strh	r3, [r7, #6]
 80083a4:	88fb      	ldrh	r3, [r7, #6]
 80083a6:	009b      	lsls	r3, r3, #2
 80083a8:	4618      	mov	r0, r3
 80083aa:	f001 f8a7 	bl	80094fc <pvPortMalloc>
 80083ae:	6178      	str	r0, [r7, #20]
 80083b0:	697b      	ldr	r3, [r7, #20]
 80083b2:	2b00      	cmp	r3, #0
 80083b4:	d00e      	beq.n	80083d4 <xTaskCreate+0x40>
 80083b6:	2054      	movs	r0, #84	@ 0x54
 80083b8:	f001 f8a0 	bl	80094fc <pvPortMalloc>
 80083bc:	61f8      	str	r0, [r7, #28]
 80083be:	69fb      	ldr	r3, [r7, #28]
 80083c0:	2b00      	cmp	r3, #0
 80083c2:	d003      	beq.n	80083cc <xTaskCreate+0x38>
 80083c4:	69fb      	ldr	r3, [r7, #28]
 80083c6:	697a      	ldr	r2, [r7, #20]
 80083c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80083ca:	e005      	b.n	80083d8 <xTaskCreate+0x44>
 80083cc:	6978      	ldr	r0, [r7, #20]
 80083ce:	f001 f963 	bl	8009698 <vPortFree>
 80083d2:	e001      	b.n	80083d8 <xTaskCreate+0x44>
 80083d4:	2300      	movs	r3, #0
 80083d6:	61fb      	str	r3, [r7, #28]
 80083d8:	69fb      	ldr	r3, [r7, #28]
 80083da:	2b00      	cmp	r3, #0
 80083dc:	d017      	beq.n	800840e <xTaskCreate+0x7a>
 80083de:	69fb      	ldr	r3, [r7, #28]
 80083e0:	2200      	movs	r2, #0
 80083e2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80083e6:	88fa      	ldrh	r2, [r7, #6]
 80083e8:	2300      	movs	r3, #0
 80083ea:	9303      	str	r3, [sp, #12]
 80083ec:	69fb      	ldr	r3, [r7, #28]
 80083ee:	9302      	str	r3, [sp, #8]
 80083f0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80083f2:	9301      	str	r3, [sp, #4]
 80083f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80083f6:	9300      	str	r3, [sp, #0]
 80083f8:	683b      	ldr	r3, [r7, #0]
 80083fa:	68b9      	ldr	r1, [r7, #8]
 80083fc:	68f8      	ldr	r0, [r7, #12]
 80083fe:	f000 f80e 	bl	800841e <prvInitialiseNewTask>
 8008402:	69f8      	ldr	r0, [r7, #28]
 8008404:	f000 f894 	bl	8008530 <prvAddNewTaskToReadyList>
 8008408:	2301      	movs	r3, #1
 800840a:	61bb      	str	r3, [r7, #24]
 800840c:	e002      	b.n	8008414 <xTaskCreate+0x80>
 800840e:	f04f 33ff 	mov.w	r3, #4294967295
 8008412:	61bb      	str	r3, [r7, #24]
 8008414:	69bb      	ldr	r3, [r7, #24]
 8008416:	4618      	mov	r0, r3
 8008418:	3720      	adds	r7, #32
 800841a:	46bd      	mov	sp, r7
 800841c:	bd80      	pop	{r7, pc}

0800841e <prvInitialiseNewTask>:
 800841e:	b580      	push	{r7, lr}
 8008420:	b088      	sub	sp, #32
 8008422:	af00      	add	r7, sp, #0
 8008424:	60f8      	str	r0, [r7, #12]
 8008426:	60b9      	str	r1, [r7, #8]
 8008428:	607a      	str	r2, [r7, #4]
 800842a:	603b      	str	r3, [r7, #0]
 800842c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800842e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008430:	687b      	ldr	r3, [r7, #4]
 8008432:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8008436:	3b01      	subs	r3, #1
 8008438:	009b      	lsls	r3, r3, #2
 800843a:	4413      	add	r3, r2
 800843c:	61bb      	str	r3, [r7, #24]
 800843e:	69bb      	ldr	r3, [r7, #24]
 8008440:	f023 0307 	bic.w	r3, r3, #7
 8008444:	61bb      	str	r3, [r7, #24]
 8008446:	69bb      	ldr	r3, [r7, #24]
 8008448:	f003 0307 	and.w	r3, r3, #7
 800844c:	2b00      	cmp	r3, #0
 800844e:	d00b      	beq.n	8008468 <prvInitialiseNewTask+0x4a>
 8008450:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008454:	f383 8811 	msr	BASEPRI, r3
 8008458:	f3bf 8f6f 	isb	sy
 800845c:	f3bf 8f4f 	dsb	sy
 8008460:	617b      	str	r3, [r7, #20]
 8008462:	bf00      	nop
 8008464:	bf00      	nop
 8008466:	e7fd      	b.n	8008464 <prvInitialiseNewTask+0x46>
 8008468:	68bb      	ldr	r3, [r7, #8]
 800846a:	2b00      	cmp	r3, #0
 800846c:	d01f      	beq.n	80084ae <prvInitialiseNewTask+0x90>
 800846e:	2300      	movs	r3, #0
 8008470:	61fb      	str	r3, [r7, #28]
 8008472:	e012      	b.n	800849a <prvInitialiseNewTask+0x7c>
 8008474:	68ba      	ldr	r2, [r7, #8]
 8008476:	69fb      	ldr	r3, [r7, #28]
 8008478:	4413      	add	r3, r2
 800847a:	7819      	ldrb	r1, [r3, #0]
 800847c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800847e:	69fb      	ldr	r3, [r7, #28]
 8008480:	4413      	add	r3, r2
 8008482:	3334      	adds	r3, #52	@ 0x34
 8008484:	460a      	mov	r2, r1
 8008486:	701a      	strb	r2, [r3, #0]
 8008488:	68ba      	ldr	r2, [r7, #8]
 800848a:	69fb      	ldr	r3, [r7, #28]
 800848c:	4413      	add	r3, r2
 800848e:	781b      	ldrb	r3, [r3, #0]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d006      	beq.n	80084a2 <prvInitialiseNewTask+0x84>
 8008494:	69fb      	ldr	r3, [r7, #28]
 8008496:	3301      	adds	r3, #1
 8008498:	61fb      	str	r3, [r7, #28]
 800849a:	69fb      	ldr	r3, [r7, #28]
 800849c:	2b0f      	cmp	r3, #15
 800849e:	d9e9      	bls.n	8008474 <prvInitialiseNewTask+0x56>
 80084a0:	e000      	b.n	80084a4 <prvInitialiseNewTask+0x86>
 80084a2:	bf00      	nop
 80084a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084a6:	2200      	movs	r2, #0
 80084a8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80084ac:	e003      	b.n	80084b6 <prvInitialiseNewTask+0x98>
 80084ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084b0:	2200      	movs	r2, #0
 80084b2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80084b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80084b8:	2b06      	cmp	r3, #6
 80084ba:	d901      	bls.n	80084c0 <prvInitialiseNewTask+0xa2>
 80084bc:	2306      	movs	r3, #6
 80084be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80084c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084c2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80084c4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80084c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084c8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80084ca:	645a      	str	r2, [r3, #68]	@ 0x44
 80084cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084ce:	2200      	movs	r2, #0
 80084d0:	649a      	str	r2, [r3, #72]	@ 0x48
 80084d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084d4:	3304      	adds	r3, #4
 80084d6:	4618      	mov	r0, r3
 80084d8:	f7ff fe68 	bl	80081ac <vListInitialiseItem>
 80084dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084de:	3318      	adds	r3, #24
 80084e0:	4618      	mov	r0, r3
 80084e2:	f7ff fe63 	bl	80081ac <vListInitialiseItem>
 80084e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084e8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80084ea:	611a      	str	r2, [r3, #16]
 80084ec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80084ee:	f1c3 0207 	rsb	r2, r3, #7
 80084f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084f4:	619a      	str	r2, [r3, #24]
 80084f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084f8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80084fa:	625a      	str	r2, [r3, #36]	@ 0x24
 80084fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80084fe:	2200      	movs	r2, #0
 8008500:	64da      	str	r2, [r3, #76]	@ 0x4c
 8008502:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008504:	2200      	movs	r2, #0
 8008506:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800850a:	683a      	ldr	r2, [r7, #0]
 800850c:	68f9      	ldr	r1, [r7, #12]
 800850e:	69b8      	ldr	r0, [r7, #24]
 8008510:	f000 fda4 	bl	800905c <pxPortInitialiseStack>
 8008514:	4602      	mov	r2, r0
 8008516:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008518:	601a      	str	r2, [r3, #0]
 800851a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800851c:	2b00      	cmp	r3, #0
 800851e:	d002      	beq.n	8008526 <prvInitialiseNewTask+0x108>
 8008520:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008522:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008524:	601a      	str	r2, [r3, #0]
 8008526:	bf00      	nop
 8008528:	3720      	adds	r7, #32
 800852a:	46bd      	mov	sp, r7
 800852c:	bd80      	pop	{r7, pc}
	...

08008530 <prvAddNewTaskToReadyList>:
 8008530:	b580      	push	{r7, lr}
 8008532:	b082      	sub	sp, #8
 8008534:	af00      	add	r7, sp, #0
 8008536:	6078      	str	r0, [r7, #4]
 8008538:	f000 febe 	bl	80092b8 <vPortEnterCritical>
 800853c:	4b2a      	ldr	r3, [pc, #168]	@ (80085e8 <prvAddNewTaskToReadyList+0xb8>)
 800853e:	681b      	ldr	r3, [r3, #0]
 8008540:	3301      	adds	r3, #1
 8008542:	4a29      	ldr	r2, [pc, #164]	@ (80085e8 <prvAddNewTaskToReadyList+0xb8>)
 8008544:	6013      	str	r3, [r2, #0]
 8008546:	4b29      	ldr	r3, [pc, #164]	@ (80085ec <prvAddNewTaskToReadyList+0xbc>)
 8008548:	681b      	ldr	r3, [r3, #0]
 800854a:	2b00      	cmp	r3, #0
 800854c:	d109      	bne.n	8008562 <prvAddNewTaskToReadyList+0x32>
 800854e:	4a27      	ldr	r2, [pc, #156]	@ (80085ec <prvAddNewTaskToReadyList+0xbc>)
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	6013      	str	r3, [r2, #0]
 8008554:	4b24      	ldr	r3, [pc, #144]	@ (80085e8 <prvAddNewTaskToReadyList+0xb8>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	2b01      	cmp	r3, #1
 800855a:	d110      	bne.n	800857e <prvAddNewTaskToReadyList+0x4e>
 800855c:	f000 fc5a 	bl	8008e14 <prvInitialiseTaskLists>
 8008560:	e00d      	b.n	800857e <prvAddNewTaskToReadyList+0x4e>
 8008562:	4b23      	ldr	r3, [pc, #140]	@ (80085f0 <prvAddNewTaskToReadyList+0xc0>)
 8008564:	681b      	ldr	r3, [r3, #0]
 8008566:	2b00      	cmp	r3, #0
 8008568:	d109      	bne.n	800857e <prvAddNewTaskToReadyList+0x4e>
 800856a:	4b20      	ldr	r3, [pc, #128]	@ (80085ec <prvAddNewTaskToReadyList+0xbc>)
 800856c:	681b      	ldr	r3, [r3, #0]
 800856e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008574:	429a      	cmp	r2, r3
 8008576:	d802      	bhi.n	800857e <prvAddNewTaskToReadyList+0x4e>
 8008578:	4a1c      	ldr	r2, [pc, #112]	@ (80085ec <prvAddNewTaskToReadyList+0xbc>)
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	6013      	str	r3, [r2, #0]
 800857e:	4b1d      	ldr	r3, [pc, #116]	@ (80085f4 <prvAddNewTaskToReadyList+0xc4>)
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	3301      	adds	r3, #1
 8008584:	4a1b      	ldr	r2, [pc, #108]	@ (80085f4 <prvAddNewTaskToReadyList+0xc4>)
 8008586:	6013      	str	r3, [r2, #0]
 8008588:	687b      	ldr	r3, [r7, #4]
 800858a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800858c:	2201      	movs	r2, #1
 800858e:	409a      	lsls	r2, r3
 8008590:	4b19      	ldr	r3, [pc, #100]	@ (80085f8 <prvAddNewTaskToReadyList+0xc8>)
 8008592:	681b      	ldr	r3, [r3, #0]
 8008594:	4313      	orrs	r3, r2
 8008596:	4a18      	ldr	r2, [pc, #96]	@ (80085f8 <prvAddNewTaskToReadyList+0xc8>)
 8008598:	6013      	str	r3, [r2, #0]
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800859e:	4613      	mov	r3, r2
 80085a0:	009b      	lsls	r3, r3, #2
 80085a2:	4413      	add	r3, r2
 80085a4:	009b      	lsls	r3, r3, #2
 80085a6:	4a15      	ldr	r2, [pc, #84]	@ (80085fc <prvAddNewTaskToReadyList+0xcc>)
 80085a8:	441a      	add	r2, r3
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	3304      	adds	r3, #4
 80085ae:	4619      	mov	r1, r3
 80085b0:	4610      	mov	r0, r2
 80085b2:	f7ff fe08 	bl	80081c6 <vListInsertEnd>
 80085b6:	f000 feb1 	bl	800931c <vPortExitCritical>
 80085ba:	4b0d      	ldr	r3, [pc, #52]	@ (80085f0 <prvAddNewTaskToReadyList+0xc0>)
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d00e      	beq.n	80085e0 <prvAddNewTaskToReadyList+0xb0>
 80085c2:	4b0a      	ldr	r3, [pc, #40]	@ (80085ec <prvAddNewTaskToReadyList+0xbc>)
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80085c8:	687b      	ldr	r3, [r7, #4]
 80085ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80085cc:	429a      	cmp	r2, r3
 80085ce:	d207      	bcs.n	80085e0 <prvAddNewTaskToReadyList+0xb0>
 80085d0:	4b0b      	ldr	r3, [pc, #44]	@ (8008600 <prvAddNewTaskToReadyList+0xd0>)
 80085d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085d6:	601a      	str	r2, [r3, #0]
 80085d8:	f3bf 8f4f 	dsb	sy
 80085dc:	f3bf 8f6f 	isb	sy
 80085e0:	bf00      	nop
 80085e2:	3708      	adds	r7, #8
 80085e4:	46bd      	mov	sp, r7
 80085e6:	bd80      	pop	{r7, pc}
 80085e8:	200006b0 	.word	0x200006b0
 80085ec:	200005b0 	.word	0x200005b0
 80085f0:	200006bc 	.word	0x200006bc
 80085f4:	200006cc 	.word	0x200006cc
 80085f8:	200006b8 	.word	0x200006b8
 80085fc:	200005b4 	.word	0x200005b4
 8008600:	e000ed04 	.word	0xe000ed04

08008604 <vTaskDelay>:
 8008604:	b580      	push	{r7, lr}
 8008606:	b084      	sub	sp, #16
 8008608:	af00      	add	r7, sp, #0
 800860a:	6078      	str	r0, [r7, #4]
 800860c:	2300      	movs	r3, #0
 800860e:	60fb      	str	r3, [r7, #12]
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	2b00      	cmp	r3, #0
 8008614:	d018      	beq.n	8008648 <vTaskDelay+0x44>
 8008616:	4b14      	ldr	r3, [pc, #80]	@ (8008668 <vTaskDelay+0x64>)
 8008618:	681b      	ldr	r3, [r3, #0]
 800861a:	2b00      	cmp	r3, #0
 800861c:	d00b      	beq.n	8008636 <vTaskDelay+0x32>
 800861e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008622:	f383 8811 	msr	BASEPRI, r3
 8008626:	f3bf 8f6f 	isb	sy
 800862a:	f3bf 8f4f 	dsb	sy
 800862e:	60bb      	str	r3, [r7, #8]
 8008630:	bf00      	nop
 8008632:	bf00      	nop
 8008634:	e7fd      	b.n	8008632 <vTaskDelay+0x2e>
 8008636:	f000 fa13 	bl	8008a60 <vTaskSuspendAll>
 800863a:	2100      	movs	r1, #0
 800863c:	6878      	ldr	r0, [r7, #4]
 800863e:	f000 fca7 	bl	8008f90 <prvAddCurrentTaskToDelayedList>
 8008642:	f000 fa1b 	bl	8008a7c <xTaskResumeAll>
 8008646:	60f8      	str	r0, [r7, #12]
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	2b00      	cmp	r3, #0
 800864c:	d107      	bne.n	800865e <vTaskDelay+0x5a>
 800864e:	4b07      	ldr	r3, [pc, #28]	@ (800866c <vTaskDelay+0x68>)
 8008650:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008654:	601a      	str	r2, [r3, #0]
 8008656:	f3bf 8f4f 	dsb	sy
 800865a:	f3bf 8f6f 	isb	sy
 800865e:	bf00      	nop
 8008660:	3710      	adds	r7, #16
 8008662:	46bd      	mov	sp, r7
 8008664:	bd80      	pop	{r7, pc}
 8008666:	bf00      	nop
 8008668:	200006d8 	.word	0x200006d8
 800866c:	e000ed04 	.word	0xe000ed04

08008670 <vTaskSuspend>:
 8008670:	b580      	push	{r7, lr}
 8008672:	b084      	sub	sp, #16
 8008674:	af00      	add	r7, sp, #0
 8008676:	6078      	str	r0, [r7, #4]
 8008678:	f000 fe1e 	bl	80092b8 <vPortEnterCritical>
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	2b00      	cmp	r3, #0
 8008680:	d102      	bne.n	8008688 <vTaskSuspend+0x18>
 8008682:	4b3d      	ldr	r3, [pc, #244]	@ (8008778 <vTaskSuspend+0x108>)
 8008684:	681b      	ldr	r3, [r3, #0]
 8008686:	e000      	b.n	800868a <vTaskSuspend+0x1a>
 8008688:	687b      	ldr	r3, [r7, #4]
 800868a:	60fb      	str	r3, [r7, #12]
 800868c:	68fb      	ldr	r3, [r7, #12]
 800868e:	3304      	adds	r3, #4
 8008690:	4618      	mov	r0, r3
 8008692:	f7ff fdf5 	bl	8008280 <uxListRemove>
 8008696:	4603      	mov	r3, r0
 8008698:	2b00      	cmp	r3, #0
 800869a:	d115      	bne.n	80086c8 <vTaskSuspend+0x58>
 800869c:	68fb      	ldr	r3, [r7, #12]
 800869e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80086a0:	4936      	ldr	r1, [pc, #216]	@ (800877c <vTaskSuspend+0x10c>)
 80086a2:	4613      	mov	r3, r2
 80086a4:	009b      	lsls	r3, r3, #2
 80086a6:	4413      	add	r3, r2
 80086a8:	009b      	lsls	r3, r3, #2
 80086aa:	440b      	add	r3, r1
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	d10a      	bne.n	80086c8 <vTaskSuspend+0x58>
 80086b2:	68fb      	ldr	r3, [r7, #12]
 80086b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80086b6:	2201      	movs	r2, #1
 80086b8:	fa02 f303 	lsl.w	r3, r2, r3
 80086bc:	43da      	mvns	r2, r3
 80086be:	4b30      	ldr	r3, [pc, #192]	@ (8008780 <vTaskSuspend+0x110>)
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	4013      	ands	r3, r2
 80086c4:	4a2e      	ldr	r2, [pc, #184]	@ (8008780 <vTaskSuspend+0x110>)
 80086c6:	6013      	str	r3, [r2, #0]
 80086c8:	68fb      	ldr	r3, [r7, #12]
 80086ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80086cc:	2b00      	cmp	r3, #0
 80086ce:	d004      	beq.n	80086da <vTaskSuspend+0x6a>
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	3318      	adds	r3, #24
 80086d4:	4618      	mov	r0, r3
 80086d6:	f7ff fdd3 	bl	8008280 <uxListRemove>
 80086da:	68fb      	ldr	r3, [r7, #12]
 80086dc:	3304      	adds	r3, #4
 80086de:	4619      	mov	r1, r3
 80086e0:	4828      	ldr	r0, [pc, #160]	@ (8008784 <vTaskSuspend+0x114>)
 80086e2:	f7ff fd70 	bl	80081c6 <vListInsertEnd>
 80086e6:	68fb      	ldr	r3, [r7, #12]
 80086e8:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80086ec:	b2db      	uxtb	r3, r3
 80086ee:	2b01      	cmp	r3, #1
 80086f0:	d103      	bne.n	80086fa <vTaskSuspend+0x8a>
 80086f2:	68fb      	ldr	r3, [r7, #12]
 80086f4:	2200      	movs	r2, #0
 80086f6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80086fa:	f000 fe0f 	bl	800931c <vPortExitCritical>
 80086fe:	4b22      	ldr	r3, [pc, #136]	@ (8008788 <vTaskSuspend+0x118>)
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	2b00      	cmp	r3, #0
 8008704:	d005      	beq.n	8008712 <vTaskSuspend+0xa2>
 8008706:	f000 fdd7 	bl	80092b8 <vPortEnterCritical>
 800870a:	f000 fc21 	bl	8008f50 <prvResetNextTaskUnblockTime>
 800870e:	f000 fe05 	bl	800931c <vPortExitCritical>
 8008712:	4b19      	ldr	r3, [pc, #100]	@ (8008778 <vTaskSuspend+0x108>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	68fa      	ldr	r2, [r7, #12]
 8008718:	429a      	cmp	r2, r3
 800871a:	d128      	bne.n	800876e <vTaskSuspend+0xfe>
 800871c:	4b1a      	ldr	r3, [pc, #104]	@ (8008788 <vTaskSuspend+0x118>)
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	2b00      	cmp	r3, #0
 8008722:	d018      	beq.n	8008756 <vTaskSuspend+0xe6>
 8008724:	4b19      	ldr	r3, [pc, #100]	@ (800878c <vTaskSuspend+0x11c>)
 8008726:	681b      	ldr	r3, [r3, #0]
 8008728:	2b00      	cmp	r3, #0
 800872a:	d00b      	beq.n	8008744 <vTaskSuspend+0xd4>
 800872c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008730:	f383 8811 	msr	BASEPRI, r3
 8008734:	f3bf 8f6f 	isb	sy
 8008738:	f3bf 8f4f 	dsb	sy
 800873c:	60bb      	str	r3, [r7, #8]
 800873e:	bf00      	nop
 8008740:	bf00      	nop
 8008742:	e7fd      	b.n	8008740 <vTaskSuspend+0xd0>
 8008744:	4b12      	ldr	r3, [pc, #72]	@ (8008790 <vTaskSuspend+0x120>)
 8008746:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800874a:	601a      	str	r2, [r3, #0]
 800874c:	f3bf 8f4f 	dsb	sy
 8008750:	f3bf 8f6f 	isb	sy
 8008754:	e00b      	b.n	800876e <vTaskSuspend+0xfe>
 8008756:	4b0b      	ldr	r3, [pc, #44]	@ (8008784 <vTaskSuspend+0x114>)
 8008758:	681a      	ldr	r2, [r3, #0]
 800875a:	4b0e      	ldr	r3, [pc, #56]	@ (8008794 <vTaskSuspend+0x124>)
 800875c:	681b      	ldr	r3, [r3, #0]
 800875e:	429a      	cmp	r2, r3
 8008760:	d103      	bne.n	800876a <vTaskSuspend+0xfa>
 8008762:	4b05      	ldr	r3, [pc, #20]	@ (8008778 <vTaskSuspend+0x108>)
 8008764:	2200      	movs	r2, #0
 8008766:	601a      	str	r2, [r3, #0]
 8008768:	e001      	b.n	800876e <vTaskSuspend+0xfe>
 800876a:	f000 fadf 	bl	8008d2c <vTaskSwitchContext>
 800876e:	bf00      	nop
 8008770:	3710      	adds	r7, #16
 8008772:	46bd      	mov	sp, r7
 8008774:	bd80      	pop	{r7, pc}
 8008776:	bf00      	nop
 8008778:	200005b0 	.word	0x200005b0
 800877c:	200005b4 	.word	0x200005b4
 8008780:	200006b8 	.word	0x200006b8
 8008784:	2000069c 	.word	0x2000069c
 8008788:	200006bc 	.word	0x200006bc
 800878c:	200006d8 	.word	0x200006d8
 8008790:	e000ed04 	.word	0xe000ed04
 8008794:	200006b0 	.word	0x200006b0

08008798 <prvTaskIsTaskSuspended>:
 8008798:	b480      	push	{r7}
 800879a:	b087      	sub	sp, #28
 800879c:	af00      	add	r7, sp, #0
 800879e:	6078      	str	r0, [r7, #4]
 80087a0:	2300      	movs	r3, #0
 80087a2:	617b      	str	r3, [r7, #20]
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	613b      	str	r3, [r7, #16]
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	2b00      	cmp	r3, #0
 80087ac:	d10b      	bne.n	80087c6 <prvTaskIsTaskSuspended+0x2e>
 80087ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087b2:	f383 8811 	msr	BASEPRI, r3
 80087b6:	f3bf 8f6f 	isb	sy
 80087ba:	f3bf 8f4f 	dsb	sy
 80087be:	60fb      	str	r3, [r7, #12]
 80087c0:	bf00      	nop
 80087c2:	bf00      	nop
 80087c4:	e7fd      	b.n	80087c2 <prvTaskIsTaskSuspended+0x2a>
 80087c6:	693b      	ldr	r3, [r7, #16]
 80087c8:	695b      	ldr	r3, [r3, #20]
 80087ca:	4a0a      	ldr	r2, [pc, #40]	@ (80087f4 <prvTaskIsTaskSuspended+0x5c>)
 80087cc:	4293      	cmp	r3, r2
 80087ce:	d10a      	bne.n	80087e6 <prvTaskIsTaskSuspended+0x4e>
 80087d0:	693b      	ldr	r3, [r7, #16]
 80087d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80087d4:	4a08      	ldr	r2, [pc, #32]	@ (80087f8 <prvTaskIsTaskSuspended+0x60>)
 80087d6:	4293      	cmp	r3, r2
 80087d8:	d005      	beq.n	80087e6 <prvTaskIsTaskSuspended+0x4e>
 80087da:	693b      	ldr	r3, [r7, #16]
 80087dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80087de:	2b00      	cmp	r3, #0
 80087e0:	d101      	bne.n	80087e6 <prvTaskIsTaskSuspended+0x4e>
 80087e2:	2301      	movs	r3, #1
 80087e4:	617b      	str	r3, [r7, #20]
 80087e6:	697b      	ldr	r3, [r7, #20]
 80087e8:	4618      	mov	r0, r3
 80087ea:	371c      	adds	r7, #28
 80087ec:	46bd      	mov	sp, r7
 80087ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f2:	4770      	bx	lr
 80087f4:	2000069c 	.word	0x2000069c
 80087f8:	20000670 	.word	0x20000670

080087fc <vTaskResume>:
 80087fc:	b580      	push	{r7, lr}
 80087fe:	b084      	sub	sp, #16
 8008800:	af00      	add	r7, sp, #0
 8008802:	6078      	str	r0, [r7, #4]
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	60fb      	str	r3, [r7, #12]
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	2b00      	cmp	r3, #0
 800880c:	d10b      	bne.n	8008826 <vTaskResume+0x2a>
 800880e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008812:	f383 8811 	msr	BASEPRI, r3
 8008816:	f3bf 8f6f 	isb	sy
 800881a:	f3bf 8f4f 	dsb	sy
 800881e:	60bb      	str	r3, [r7, #8]
 8008820:	bf00      	nop
 8008822:	bf00      	nop
 8008824:	e7fd      	b.n	8008822 <vTaskResume+0x26>
 8008826:	4b20      	ldr	r3, [pc, #128]	@ (80088a8 <vTaskResume+0xac>)
 8008828:	681b      	ldr	r3, [r3, #0]
 800882a:	68fa      	ldr	r2, [r7, #12]
 800882c:	429a      	cmp	r2, r3
 800882e:	d037      	beq.n	80088a0 <vTaskResume+0xa4>
 8008830:	68fb      	ldr	r3, [r7, #12]
 8008832:	2b00      	cmp	r3, #0
 8008834:	d034      	beq.n	80088a0 <vTaskResume+0xa4>
 8008836:	f000 fd3f 	bl	80092b8 <vPortEnterCritical>
 800883a:	68f8      	ldr	r0, [r7, #12]
 800883c:	f7ff ffac 	bl	8008798 <prvTaskIsTaskSuspended>
 8008840:	4603      	mov	r3, r0
 8008842:	2b00      	cmp	r3, #0
 8008844:	d02a      	beq.n	800889c <vTaskResume+0xa0>
 8008846:	68fb      	ldr	r3, [r7, #12]
 8008848:	3304      	adds	r3, #4
 800884a:	4618      	mov	r0, r3
 800884c:	f7ff fd18 	bl	8008280 <uxListRemove>
 8008850:	68fb      	ldr	r3, [r7, #12]
 8008852:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008854:	2201      	movs	r2, #1
 8008856:	409a      	lsls	r2, r3
 8008858:	4b14      	ldr	r3, [pc, #80]	@ (80088ac <vTaskResume+0xb0>)
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	4313      	orrs	r3, r2
 800885e:	4a13      	ldr	r2, [pc, #76]	@ (80088ac <vTaskResume+0xb0>)
 8008860:	6013      	str	r3, [r2, #0]
 8008862:	68fb      	ldr	r3, [r7, #12]
 8008864:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008866:	4613      	mov	r3, r2
 8008868:	009b      	lsls	r3, r3, #2
 800886a:	4413      	add	r3, r2
 800886c:	009b      	lsls	r3, r3, #2
 800886e:	4a10      	ldr	r2, [pc, #64]	@ (80088b0 <vTaskResume+0xb4>)
 8008870:	441a      	add	r2, r3
 8008872:	68fb      	ldr	r3, [r7, #12]
 8008874:	3304      	adds	r3, #4
 8008876:	4619      	mov	r1, r3
 8008878:	4610      	mov	r0, r2
 800887a:	f7ff fca4 	bl	80081c6 <vListInsertEnd>
 800887e:	68fb      	ldr	r3, [r7, #12]
 8008880:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008882:	4b09      	ldr	r3, [pc, #36]	@ (80088a8 <vTaskResume+0xac>)
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008888:	429a      	cmp	r2, r3
 800888a:	d307      	bcc.n	800889c <vTaskResume+0xa0>
 800888c:	4b09      	ldr	r3, [pc, #36]	@ (80088b4 <vTaskResume+0xb8>)
 800888e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008892:	601a      	str	r2, [r3, #0]
 8008894:	f3bf 8f4f 	dsb	sy
 8008898:	f3bf 8f6f 	isb	sy
 800889c:	f000 fd3e 	bl	800931c <vPortExitCritical>
 80088a0:	bf00      	nop
 80088a2:	3710      	adds	r7, #16
 80088a4:	46bd      	mov	sp, r7
 80088a6:	bd80      	pop	{r7, pc}
 80088a8:	200005b0 	.word	0x200005b0
 80088ac:	200006b8 	.word	0x200006b8
 80088b0:	200005b4 	.word	0x200005b4
 80088b4:	e000ed04 	.word	0xe000ed04

080088b8 <xTaskResumeFromISR>:
 80088b8:	b580      	push	{r7, lr}
 80088ba:	b08a      	sub	sp, #40	@ 0x28
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	2300      	movs	r3, #0
 80088c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80088c4:	687b      	ldr	r3, [r7, #4]
 80088c6:	623b      	str	r3, [r7, #32]
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	2b00      	cmp	r3, #0
 80088cc:	d10b      	bne.n	80088e6 <xTaskResumeFromISR+0x2e>
 80088ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088d2:	f383 8811 	msr	BASEPRI, r3
 80088d6:	f3bf 8f6f 	isb	sy
 80088da:	f3bf 8f4f 	dsb	sy
 80088de:	61bb      	str	r3, [r7, #24]
 80088e0:	bf00      	nop
 80088e2:	bf00      	nop
 80088e4:	e7fd      	b.n	80088e2 <xTaskResumeFromISR+0x2a>
 80088e6:	f000 fdc7 	bl	8009478 <vPortValidateInterruptPriority>
 80088ea:	f3ef 8211 	mrs	r2, BASEPRI
 80088ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088f2:	f383 8811 	msr	BASEPRI, r3
 80088f6:	f3bf 8f6f 	isb	sy
 80088fa:	f3bf 8f4f 	dsb	sy
 80088fe:	617a      	str	r2, [r7, #20]
 8008900:	613b      	str	r3, [r7, #16]
 8008902:	697b      	ldr	r3, [r7, #20]
 8008904:	61fb      	str	r3, [r7, #28]
 8008906:	6a38      	ldr	r0, [r7, #32]
 8008908:	f7ff ff46 	bl	8008798 <prvTaskIsTaskSuspended>
 800890c:	4603      	mov	r3, r0
 800890e:	2b00      	cmp	r3, #0
 8008910:	d02f      	beq.n	8008972 <xTaskResumeFromISR+0xba>
 8008912:	4b1d      	ldr	r3, [pc, #116]	@ (8008988 <xTaskResumeFromISR+0xd0>)
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	2b00      	cmp	r3, #0
 8008918:	d125      	bne.n	8008966 <xTaskResumeFromISR+0xae>
 800891a:	6a3b      	ldr	r3, [r7, #32]
 800891c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800891e:	4b1b      	ldr	r3, [pc, #108]	@ (800898c <xTaskResumeFromISR+0xd4>)
 8008920:	681b      	ldr	r3, [r3, #0]
 8008922:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008924:	429a      	cmp	r2, r3
 8008926:	d301      	bcc.n	800892c <xTaskResumeFromISR+0x74>
 8008928:	2301      	movs	r3, #1
 800892a:	627b      	str	r3, [r7, #36]	@ 0x24
 800892c:	6a3b      	ldr	r3, [r7, #32]
 800892e:	3304      	adds	r3, #4
 8008930:	4618      	mov	r0, r3
 8008932:	f7ff fca5 	bl	8008280 <uxListRemove>
 8008936:	6a3b      	ldr	r3, [r7, #32]
 8008938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800893a:	2201      	movs	r2, #1
 800893c:	409a      	lsls	r2, r3
 800893e:	4b14      	ldr	r3, [pc, #80]	@ (8008990 <xTaskResumeFromISR+0xd8>)
 8008940:	681b      	ldr	r3, [r3, #0]
 8008942:	4313      	orrs	r3, r2
 8008944:	4a12      	ldr	r2, [pc, #72]	@ (8008990 <xTaskResumeFromISR+0xd8>)
 8008946:	6013      	str	r3, [r2, #0]
 8008948:	6a3b      	ldr	r3, [r7, #32]
 800894a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800894c:	4613      	mov	r3, r2
 800894e:	009b      	lsls	r3, r3, #2
 8008950:	4413      	add	r3, r2
 8008952:	009b      	lsls	r3, r3, #2
 8008954:	4a0f      	ldr	r2, [pc, #60]	@ (8008994 <xTaskResumeFromISR+0xdc>)
 8008956:	441a      	add	r2, r3
 8008958:	6a3b      	ldr	r3, [r7, #32]
 800895a:	3304      	adds	r3, #4
 800895c:	4619      	mov	r1, r3
 800895e:	4610      	mov	r0, r2
 8008960:	f7ff fc31 	bl	80081c6 <vListInsertEnd>
 8008964:	e005      	b.n	8008972 <xTaskResumeFromISR+0xba>
 8008966:	6a3b      	ldr	r3, [r7, #32]
 8008968:	3318      	adds	r3, #24
 800896a:	4619      	mov	r1, r3
 800896c:	480a      	ldr	r0, [pc, #40]	@ (8008998 <xTaskResumeFromISR+0xe0>)
 800896e:	f7ff fc2a 	bl	80081c6 <vListInsertEnd>
 8008972:	69fb      	ldr	r3, [r7, #28]
 8008974:	60fb      	str	r3, [r7, #12]
 8008976:	68fb      	ldr	r3, [r7, #12]
 8008978:	f383 8811 	msr	BASEPRI, r3
 800897c:	bf00      	nop
 800897e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008980:	4618      	mov	r0, r3
 8008982:	3728      	adds	r7, #40	@ 0x28
 8008984:	46bd      	mov	sp, r7
 8008986:	bd80      	pop	{r7, pc}
 8008988:	200006d8 	.word	0x200006d8
 800898c:	200005b0 	.word	0x200005b0
 8008990:	200006b8 	.word	0x200006b8
 8008994:	200005b4 	.word	0x200005b4
 8008998:	20000670 	.word	0x20000670

0800899c <vTaskStartScheduler>:
 800899c:	b580      	push	{r7, lr}
 800899e:	b08a      	sub	sp, #40	@ 0x28
 80089a0:	af04      	add	r7, sp, #16
 80089a2:	2300      	movs	r3, #0
 80089a4:	60bb      	str	r3, [r7, #8]
 80089a6:	2300      	movs	r3, #0
 80089a8:	607b      	str	r3, [r7, #4]
 80089aa:	463a      	mov	r2, r7
 80089ac:	1d39      	adds	r1, r7, #4
 80089ae:	f107 0308 	add.w	r3, r7, #8
 80089b2:	4618      	mov	r0, r3
 80089b4:	f7f8 ff64 	bl	8001880 <vApplicationGetIdleTaskMemory>
 80089b8:	6839      	ldr	r1, [r7, #0]
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	68ba      	ldr	r2, [r7, #8]
 80089be:	9202      	str	r2, [sp, #8]
 80089c0:	9301      	str	r3, [sp, #4]
 80089c2:	2300      	movs	r3, #0
 80089c4:	9300      	str	r3, [sp, #0]
 80089c6:	2300      	movs	r3, #0
 80089c8:	460a      	mov	r2, r1
 80089ca:	491f      	ldr	r1, [pc, #124]	@ (8008a48 <vTaskStartScheduler+0xac>)
 80089cc:	481f      	ldr	r0, [pc, #124]	@ (8008a4c <vTaskStartScheduler+0xb0>)
 80089ce:	f7ff fc81 	bl	80082d4 <xTaskCreateStatic>
 80089d2:	4603      	mov	r3, r0
 80089d4:	4a1e      	ldr	r2, [pc, #120]	@ (8008a50 <vTaskStartScheduler+0xb4>)
 80089d6:	6013      	str	r3, [r2, #0]
 80089d8:	4b1d      	ldr	r3, [pc, #116]	@ (8008a50 <vTaskStartScheduler+0xb4>)
 80089da:	681b      	ldr	r3, [r3, #0]
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d002      	beq.n	80089e6 <vTaskStartScheduler+0x4a>
 80089e0:	2301      	movs	r3, #1
 80089e2:	617b      	str	r3, [r7, #20]
 80089e4:	e001      	b.n	80089ea <vTaskStartScheduler+0x4e>
 80089e6:	2300      	movs	r3, #0
 80089e8:	617b      	str	r3, [r7, #20]
 80089ea:	697b      	ldr	r3, [r7, #20]
 80089ec:	2b01      	cmp	r3, #1
 80089ee:	d116      	bne.n	8008a1e <vTaskStartScheduler+0x82>
 80089f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089f4:	f383 8811 	msr	BASEPRI, r3
 80089f8:	f3bf 8f6f 	isb	sy
 80089fc:	f3bf 8f4f 	dsb	sy
 8008a00:	613b      	str	r3, [r7, #16]
 8008a02:	bf00      	nop
 8008a04:	4b13      	ldr	r3, [pc, #76]	@ (8008a54 <vTaskStartScheduler+0xb8>)
 8008a06:	f04f 32ff 	mov.w	r2, #4294967295
 8008a0a:	601a      	str	r2, [r3, #0]
 8008a0c:	4b12      	ldr	r3, [pc, #72]	@ (8008a58 <vTaskStartScheduler+0xbc>)
 8008a0e:	2201      	movs	r2, #1
 8008a10:	601a      	str	r2, [r3, #0]
 8008a12:	4b12      	ldr	r3, [pc, #72]	@ (8008a5c <vTaskStartScheduler+0xc0>)
 8008a14:	2200      	movs	r2, #0
 8008a16:	601a      	str	r2, [r3, #0]
 8008a18:	f000 fbaa 	bl	8009170 <xPortStartScheduler>
 8008a1c:	e00f      	b.n	8008a3e <vTaskStartScheduler+0xa2>
 8008a1e:	697b      	ldr	r3, [r7, #20]
 8008a20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008a24:	d10b      	bne.n	8008a3e <vTaskStartScheduler+0xa2>
 8008a26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a2a:	f383 8811 	msr	BASEPRI, r3
 8008a2e:	f3bf 8f6f 	isb	sy
 8008a32:	f3bf 8f4f 	dsb	sy
 8008a36:	60fb      	str	r3, [r7, #12]
 8008a38:	bf00      	nop
 8008a3a:	bf00      	nop
 8008a3c:	e7fd      	b.n	8008a3a <vTaskStartScheduler+0x9e>
 8008a3e:	bf00      	nop
 8008a40:	3718      	adds	r7, #24
 8008a42:	46bd      	mov	sp, r7
 8008a44:	bd80      	pop	{r7, pc}
 8008a46:	bf00      	nop
 8008a48:	0800a57c 	.word	0x0800a57c
 8008a4c:	08008de5 	.word	0x08008de5
 8008a50:	200006d4 	.word	0x200006d4
 8008a54:	200006d0 	.word	0x200006d0
 8008a58:	200006bc 	.word	0x200006bc
 8008a5c:	200006b4 	.word	0x200006b4

08008a60 <vTaskSuspendAll>:
 8008a60:	b480      	push	{r7}
 8008a62:	af00      	add	r7, sp, #0
 8008a64:	4b04      	ldr	r3, [pc, #16]	@ (8008a78 <vTaskSuspendAll+0x18>)
 8008a66:	681b      	ldr	r3, [r3, #0]
 8008a68:	3301      	adds	r3, #1
 8008a6a:	4a03      	ldr	r2, [pc, #12]	@ (8008a78 <vTaskSuspendAll+0x18>)
 8008a6c:	6013      	str	r3, [r2, #0]
 8008a6e:	bf00      	nop
 8008a70:	46bd      	mov	sp, r7
 8008a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a76:	4770      	bx	lr
 8008a78:	200006d8 	.word	0x200006d8

08008a7c <xTaskResumeAll>:
 8008a7c:	b580      	push	{r7, lr}
 8008a7e:	b084      	sub	sp, #16
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	2300      	movs	r3, #0
 8008a84:	60fb      	str	r3, [r7, #12]
 8008a86:	2300      	movs	r3, #0
 8008a88:	60bb      	str	r3, [r7, #8]
 8008a8a:	4b42      	ldr	r3, [pc, #264]	@ (8008b94 <xTaskResumeAll+0x118>)
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	2b00      	cmp	r3, #0
 8008a90:	d10b      	bne.n	8008aaa <xTaskResumeAll+0x2e>
 8008a92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a96:	f383 8811 	msr	BASEPRI, r3
 8008a9a:	f3bf 8f6f 	isb	sy
 8008a9e:	f3bf 8f4f 	dsb	sy
 8008aa2:	603b      	str	r3, [r7, #0]
 8008aa4:	bf00      	nop
 8008aa6:	bf00      	nop
 8008aa8:	e7fd      	b.n	8008aa6 <xTaskResumeAll+0x2a>
 8008aaa:	f000 fc05 	bl	80092b8 <vPortEnterCritical>
 8008aae:	4b39      	ldr	r3, [pc, #228]	@ (8008b94 <xTaskResumeAll+0x118>)
 8008ab0:	681b      	ldr	r3, [r3, #0]
 8008ab2:	3b01      	subs	r3, #1
 8008ab4:	4a37      	ldr	r2, [pc, #220]	@ (8008b94 <xTaskResumeAll+0x118>)
 8008ab6:	6013      	str	r3, [r2, #0]
 8008ab8:	4b36      	ldr	r3, [pc, #216]	@ (8008b94 <xTaskResumeAll+0x118>)
 8008aba:	681b      	ldr	r3, [r3, #0]
 8008abc:	2b00      	cmp	r3, #0
 8008abe:	d161      	bne.n	8008b84 <xTaskResumeAll+0x108>
 8008ac0:	4b35      	ldr	r3, [pc, #212]	@ (8008b98 <xTaskResumeAll+0x11c>)
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	2b00      	cmp	r3, #0
 8008ac6:	d05d      	beq.n	8008b84 <xTaskResumeAll+0x108>
 8008ac8:	e02e      	b.n	8008b28 <xTaskResumeAll+0xac>
 8008aca:	4b34      	ldr	r3, [pc, #208]	@ (8008b9c <xTaskResumeAll+0x120>)
 8008acc:	68db      	ldr	r3, [r3, #12]
 8008ace:	68db      	ldr	r3, [r3, #12]
 8008ad0:	60fb      	str	r3, [r7, #12]
 8008ad2:	68fb      	ldr	r3, [r7, #12]
 8008ad4:	3318      	adds	r3, #24
 8008ad6:	4618      	mov	r0, r3
 8008ad8:	f7ff fbd2 	bl	8008280 <uxListRemove>
 8008adc:	68fb      	ldr	r3, [r7, #12]
 8008ade:	3304      	adds	r3, #4
 8008ae0:	4618      	mov	r0, r3
 8008ae2:	f7ff fbcd 	bl	8008280 <uxListRemove>
 8008ae6:	68fb      	ldr	r3, [r7, #12]
 8008ae8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008aea:	2201      	movs	r2, #1
 8008aec:	409a      	lsls	r2, r3
 8008aee:	4b2c      	ldr	r3, [pc, #176]	@ (8008ba0 <xTaskResumeAll+0x124>)
 8008af0:	681b      	ldr	r3, [r3, #0]
 8008af2:	4313      	orrs	r3, r2
 8008af4:	4a2a      	ldr	r2, [pc, #168]	@ (8008ba0 <xTaskResumeAll+0x124>)
 8008af6:	6013      	str	r3, [r2, #0]
 8008af8:	68fb      	ldr	r3, [r7, #12]
 8008afa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008afc:	4613      	mov	r3, r2
 8008afe:	009b      	lsls	r3, r3, #2
 8008b00:	4413      	add	r3, r2
 8008b02:	009b      	lsls	r3, r3, #2
 8008b04:	4a27      	ldr	r2, [pc, #156]	@ (8008ba4 <xTaskResumeAll+0x128>)
 8008b06:	441a      	add	r2, r3
 8008b08:	68fb      	ldr	r3, [r7, #12]
 8008b0a:	3304      	adds	r3, #4
 8008b0c:	4619      	mov	r1, r3
 8008b0e:	4610      	mov	r0, r2
 8008b10:	f7ff fb59 	bl	80081c6 <vListInsertEnd>
 8008b14:	68fb      	ldr	r3, [r7, #12]
 8008b16:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008b18:	4b23      	ldr	r3, [pc, #140]	@ (8008ba8 <xTaskResumeAll+0x12c>)
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008b1e:	429a      	cmp	r2, r3
 8008b20:	d302      	bcc.n	8008b28 <xTaskResumeAll+0xac>
 8008b22:	4b22      	ldr	r3, [pc, #136]	@ (8008bac <xTaskResumeAll+0x130>)
 8008b24:	2201      	movs	r2, #1
 8008b26:	601a      	str	r2, [r3, #0]
 8008b28:	4b1c      	ldr	r3, [pc, #112]	@ (8008b9c <xTaskResumeAll+0x120>)
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	2b00      	cmp	r3, #0
 8008b2e:	d1cc      	bne.n	8008aca <xTaskResumeAll+0x4e>
 8008b30:	68fb      	ldr	r3, [r7, #12]
 8008b32:	2b00      	cmp	r3, #0
 8008b34:	d001      	beq.n	8008b3a <xTaskResumeAll+0xbe>
 8008b36:	f000 fa0b 	bl	8008f50 <prvResetNextTaskUnblockTime>
 8008b3a:	4b1d      	ldr	r3, [pc, #116]	@ (8008bb0 <xTaskResumeAll+0x134>)
 8008b3c:	681b      	ldr	r3, [r3, #0]
 8008b3e:	607b      	str	r3, [r7, #4]
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	d010      	beq.n	8008b68 <xTaskResumeAll+0xec>
 8008b46:	f000 f837 	bl	8008bb8 <xTaskIncrementTick>
 8008b4a:	4603      	mov	r3, r0
 8008b4c:	2b00      	cmp	r3, #0
 8008b4e:	d002      	beq.n	8008b56 <xTaskResumeAll+0xda>
 8008b50:	4b16      	ldr	r3, [pc, #88]	@ (8008bac <xTaskResumeAll+0x130>)
 8008b52:	2201      	movs	r2, #1
 8008b54:	601a      	str	r2, [r3, #0]
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	3b01      	subs	r3, #1
 8008b5a:	607b      	str	r3, [r7, #4]
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	2b00      	cmp	r3, #0
 8008b60:	d1f1      	bne.n	8008b46 <xTaskResumeAll+0xca>
 8008b62:	4b13      	ldr	r3, [pc, #76]	@ (8008bb0 <xTaskResumeAll+0x134>)
 8008b64:	2200      	movs	r2, #0
 8008b66:	601a      	str	r2, [r3, #0]
 8008b68:	4b10      	ldr	r3, [pc, #64]	@ (8008bac <xTaskResumeAll+0x130>)
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	2b00      	cmp	r3, #0
 8008b6e:	d009      	beq.n	8008b84 <xTaskResumeAll+0x108>
 8008b70:	2301      	movs	r3, #1
 8008b72:	60bb      	str	r3, [r7, #8]
 8008b74:	4b0f      	ldr	r3, [pc, #60]	@ (8008bb4 <xTaskResumeAll+0x138>)
 8008b76:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b7a:	601a      	str	r2, [r3, #0]
 8008b7c:	f3bf 8f4f 	dsb	sy
 8008b80:	f3bf 8f6f 	isb	sy
 8008b84:	f000 fbca 	bl	800931c <vPortExitCritical>
 8008b88:	68bb      	ldr	r3, [r7, #8]
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	3710      	adds	r7, #16
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	bd80      	pop	{r7, pc}
 8008b92:	bf00      	nop
 8008b94:	200006d8 	.word	0x200006d8
 8008b98:	200006b0 	.word	0x200006b0
 8008b9c:	20000670 	.word	0x20000670
 8008ba0:	200006b8 	.word	0x200006b8
 8008ba4:	200005b4 	.word	0x200005b4
 8008ba8:	200005b0 	.word	0x200005b0
 8008bac:	200006c4 	.word	0x200006c4
 8008bb0:	200006c0 	.word	0x200006c0
 8008bb4:	e000ed04 	.word	0xe000ed04

08008bb8 <xTaskIncrementTick>:
 8008bb8:	b580      	push	{r7, lr}
 8008bba:	b086      	sub	sp, #24
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	2300      	movs	r3, #0
 8008bc0:	617b      	str	r3, [r7, #20]
 8008bc2:	4b4f      	ldr	r3, [pc, #316]	@ (8008d00 <xTaskIncrementTick+0x148>)
 8008bc4:	681b      	ldr	r3, [r3, #0]
 8008bc6:	2b00      	cmp	r3, #0
 8008bc8:	f040 808f 	bne.w	8008cea <xTaskIncrementTick+0x132>
 8008bcc:	4b4d      	ldr	r3, [pc, #308]	@ (8008d04 <xTaskIncrementTick+0x14c>)
 8008bce:	681b      	ldr	r3, [r3, #0]
 8008bd0:	3301      	adds	r3, #1
 8008bd2:	613b      	str	r3, [r7, #16]
 8008bd4:	4a4b      	ldr	r2, [pc, #300]	@ (8008d04 <xTaskIncrementTick+0x14c>)
 8008bd6:	693b      	ldr	r3, [r7, #16]
 8008bd8:	6013      	str	r3, [r2, #0]
 8008bda:	693b      	ldr	r3, [r7, #16]
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d121      	bne.n	8008c24 <xTaskIncrementTick+0x6c>
 8008be0:	4b49      	ldr	r3, [pc, #292]	@ (8008d08 <xTaskIncrementTick+0x150>)
 8008be2:	681b      	ldr	r3, [r3, #0]
 8008be4:	681b      	ldr	r3, [r3, #0]
 8008be6:	2b00      	cmp	r3, #0
 8008be8:	d00b      	beq.n	8008c02 <xTaskIncrementTick+0x4a>
 8008bea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bee:	f383 8811 	msr	BASEPRI, r3
 8008bf2:	f3bf 8f6f 	isb	sy
 8008bf6:	f3bf 8f4f 	dsb	sy
 8008bfa:	603b      	str	r3, [r7, #0]
 8008bfc:	bf00      	nop
 8008bfe:	bf00      	nop
 8008c00:	e7fd      	b.n	8008bfe <xTaskIncrementTick+0x46>
 8008c02:	4b41      	ldr	r3, [pc, #260]	@ (8008d08 <xTaskIncrementTick+0x150>)
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	60fb      	str	r3, [r7, #12]
 8008c08:	4b40      	ldr	r3, [pc, #256]	@ (8008d0c <xTaskIncrementTick+0x154>)
 8008c0a:	681b      	ldr	r3, [r3, #0]
 8008c0c:	4a3e      	ldr	r2, [pc, #248]	@ (8008d08 <xTaskIncrementTick+0x150>)
 8008c0e:	6013      	str	r3, [r2, #0]
 8008c10:	4a3e      	ldr	r2, [pc, #248]	@ (8008d0c <xTaskIncrementTick+0x154>)
 8008c12:	68fb      	ldr	r3, [r7, #12]
 8008c14:	6013      	str	r3, [r2, #0]
 8008c16:	4b3e      	ldr	r3, [pc, #248]	@ (8008d10 <xTaskIncrementTick+0x158>)
 8008c18:	681b      	ldr	r3, [r3, #0]
 8008c1a:	3301      	adds	r3, #1
 8008c1c:	4a3c      	ldr	r2, [pc, #240]	@ (8008d10 <xTaskIncrementTick+0x158>)
 8008c1e:	6013      	str	r3, [r2, #0]
 8008c20:	f000 f996 	bl	8008f50 <prvResetNextTaskUnblockTime>
 8008c24:	4b3b      	ldr	r3, [pc, #236]	@ (8008d14 <xTaskIncrementTick+0x15c>)
 8008c26:	681b      	ldr	r3, [r3, #0]
 8008c28:	693a      	ldr	r2, [r7, #16]
 8008c2a:	429a      	cmp	r2, r3
 8008c2c:	d348      	bcc.n	8008cc0 <xTaskIncrementTick+0x108>
 8008c2e:	4b36      	ldr	r3, [pc, #216]	@ (8008d08 <xTaskIncrementTick+0x150>)
 8008c30:	681b      	ldr	r3, [r3, #0]
 8008c32:	681b      	ldr	r3, [r3, #0]
 8008c34:	2b00      	cmp	r3, #0
 8008c36:	d104      	bne.n	8008c42 <xTaskIncrementTick+0x8a>
 8008c38:	4b36      	ldr	r3, [pc, #216]	@ (8008d14 <xTaskIncrementTick+0x15c>)
 8008c3a:	f04f 32ff 	mov.w	r2, #4294967295
 8008c3e:	601a      	str	r2, [r3, #0]
 8008c40:	e03e      	b.n	8008cc0 <xTaskIncrementTick+0x108>
 8008c42:	4b31      	ldr	r3, [pc, #196]	@ (8008d08 <xTaskIncrementTick+0x150>)
 8008c44:	681b      	ldr	r3, [r3, #0]
 8008c46:	68db      	ldr	r3, [r3, #12]
 8008c48:	68db      	ldr	r3, [r3, #12]
 8008c4a:	60bb      	str	r3, [r7, #8]
 8008c4c:	68bb      	ldr	r3, [r7, #8]
 8008c4e:	685b      	ldr	r3, [r3, #4]
 8008c50:	607b      	str	r3, [r7, #4]
 8008c52:	693a      	ldr	r2, [r7, #16]
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	429a      	cmp	r2, r3
 8008c58:	d203      	bcs.n	8008c62 <xTaskIncrementTick+0xaa>
 8008c5a:	4a2e      	ldr	r2, [pc, #184]	@ (8008d14 <xTaskIncrementTick+0x15c>)
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	6013      	str	r3, [r2, #0]
 8008c60:	e02e      	b.n	8008cc0 <xTaskIncrementTick+0x108>
 8008c62:	68bb      	ldr	r3, [r7, #8]
 8008c64:	3304      	adds	r3, #4
 8008c66:	4618      	mov	r0, r3
 8008c68:	f7ff fb0a 	bl	8008280 <uxListRemove>
 8008c6c:	68bb      	ldr	r3, [r7, #8]
 8008c6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008c70:	2b00      	cmp	r3, #0
 8008c72:	d004      	beq.n	8008c7e <xTaskIncrementTick+0xc6>
 8008c74:	68bb      	ldr	r3, [r7, #8]
 8008c76:	3318      	adds	r3, #24
 8008c78:	4618      	mov	r0, r3
 8008c7a:	f7ff fb01 	bl	8008280 <uxListRemove>
 8008c7e:	68bb      	ldr	r3, [r7, #8]
 8008c80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c82:	2201      	movs	r2, #1
 8008c84:	409a      	lsls	r2, r3
 8008c86:	4b24      	ldr	r3, [pc, #144]	@ (8008d18 <xTaskIncrementTick+0x160>)
 8008c88:	681b      	ldr	r3, [r3, #0]
 8008c8a:	4313      	orrs	r3, r2
 8008c8c:	4a22      	ldr	r2, [pc, #136]	@ (8008d18 <xTaskIncrementTick+0x160>)
 8008c8e:	6013      	str	r3, [r2, #0]
 8008c90:	68bb      	ldr	r3, [r7, #8]
 8008c92:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008c94:	4613      	mov	r3, r2
 8008c96:	009b      	lsls	r3, r3, #2
 8008c98:	4413      	add	r3, r2
 8008c9a:	009b      	lsls	r3, r3, #2
 8008c9c:	4a1f      	ldr	r2, [pc, #124]	@ (8008d1c <xTaskIncrementTick+0x164>)
 8008c9e:	441a      	add	r2, r3
 8008ca0:	68bb      	ldr	r3, [r7, #8]
 8008ca2:	3304      	adds	r3, #4
 8008ca4:	4619      	mov	r1, r3
 8008ca6:	4610      	mov	r0, r2
 8008ca8:	f7ff fa8d 	bl	80081c6 <vListInsertEnd>
 8008cac:	68bb      	ldr	r3, [r7, #8]
 8008cae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008cb0:	4b1b      	ldr	r3, [pc, #108]	@ (8008d20 <xTaskIncrementTick+0x168>)
 8008cb2:	681b      	ldr	r3, [r3, #0]
 8008cb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008cb6:	429a      	cmp	r2, r3
 8008cb8:	d3b9      	bcc.n	8008c2e <xTaskIncrementTick+0x76>
 8008cba:	2301      	movs	r3, #1
 8008cbc:	617b      	str	r3, [r7, #20]
 8008cbe:	e7b6      	b.n	8008c2e <xTaskIncrementTick+0x76>
 8008cc0:	4b17      	ldr	r3, [pc, #92]	@ (8008d20 <xTaskIncrementTick+0x168>)
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008cc6:	4915      	ldr	r1, [pc, #84]	@ (8008d1c <xTaskIncrementTick+0x164>)
 8008cc8:	4613      	mov	r3, r2
 8008cca:	009b      	lsls	r3, r3, #2
 8008ccc:	4413      	add	r3, r2
 8008cce:	009b      	lsls	r3, r3, #2
 8008cd0:	440b      	add	r3, r1
 8008cd2:	681b      	ldr	r3, [r3, #0]
 8008cd4:	2b01      	cmp	r3, #1
 8008cd6:	d901      	bls.n	8008cdc <xTaskIncrementTick+0x124>
 8008cd8:	2301      	movs	r3, #1
 8008cda:	617b      	str	r3, [r7, #20]
 8008cdc:	4b11      	ldr	r3, [pc, #68]	@ (8008d24 <xTaskIncrementTick+0x16c>)
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	2b00      	cmp	r3, #0
 8008ce2:	d007      	beq.n	8008cf4 <xTaskIncrementTick+0x13c>
 8008ce4:	2301      	movs	r3, #1
 8008ce6:	617b      	str	r3, [r7, #20]
 8008ce8:	e004      	b.n	8008cf4 <xTaskIncrementTick+0x13c>
 8008cea:	4b0f      	ldr	r3, [pc, #60]	@ (8008d28 <xTaskIncrementTick+0x170>)
 8008cec:	681b      	ldr	r3, [r3, #0]
 8008cee:	3301      	adds	r3, #1
 8008cf0:	4a0d      	ldr	r2, [pc, #52]	@ (8008d28 <xTaskIncrementTick+0x170>)
 8008cf2:	6013      	str	r3, [r2, #0]
 8008cf4:	697b      	ldr	r3, [r7, #20]
 8008cf6:	4618      	mov	r0, r3
 8008cf8:	3718      	adds	r7, #24
 8008cfa:	46bd      	mov	sp, r7
 8008cfc:	bd80      	pop	{r7, pc}
 8008cfe:	bf00      	nop
 8008d00:	200006d8 	.word	0x200006d8
 8008d04:	200006b4 	.word	0x200006b4
 8008d08:	20000668 	.word	0x20000668
 8008d0c:	2000066c 	.word	0x2000066c
 8008d10:	200006c8 	.word	0x200006c8
 8008d14:	200006d0 	.word	0x200006d0
 8008d18:	200006b8 	.word	0x200006b8
 8008d1c:	200005b4 	.word	0x200005b4
 8008d20:	200005b0 	.word	0x200005b0
 8008d24:	200006c4 	.word	0x200006c4
 8008d28:	200006c0 	.word	0x200006c0

08008d2c <vTaskSwitchContext>:
 8008d2c:	b480      	push	{r7}
 8008d2e:	b087      	sub	sp, #28
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	4b27      	ldr	r3, [pc, #156]	@ (8008dd0 <vTaskSwitchContext+0xa4>)
 8008d34:	681b      	ldr	r3, [r3, #0]
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d003      	beq.n	8008d42 <vTaskSwitchContext+0x16>
 8008d3a:	4b26      	ldr	r3, [pc, #152]	@ (8008dd4 <vTaskSwitchContext+0xa8>)
 8008d3c:	2201      	movs	r2, #1
 8008d3e:	601a      	str	r2, [r3, #0]
 8008d40:	e040      	b.n	8008dc4 <vTaskSwitchContext+0x98>
 8008d42:	4b24      	ldr	r3, [pc, #144]	@ (8008dd4 <vTaskSwitchContext+0xa8>)
 8008d44:	2200      	movs	r2, #0
 8008d46:	601a      	str	r2, [r3, #0]
 8008d48:	4b23      	ldr	r3, [pc, #140]	@ (8008dd8 <vTaskSwitchContext+0xac>)
 8008d4a:	681b      	ldr	r3, [r3, #0]
 8008d4c:	60fb      	str	r3, [r7, #12]
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	fab3 f383 	clz	r3, r3
 8008d54:	72fb      	strb	r3, [r7, #11]
 8008d56:	7afb      	ldrb	r3, [r7, #11]
 8008d58:	f1c3 031f 	rsb	r3, r3, #31
 8008d5c:	617b      	str	r3, [r7, #20]
 8008d5e:	491f      	ldr	r1, [pc, #124]	@ (8008ddc <vTaskSwitchContext+0xb0>)
 8008d60:	697a      	ldr	r2, [r7, #20]
 8008d62:	4613      	mov	r3, r2
 8008d64:	009b      	lsls	r3, r3, #2
 8008d66:	4413      	add	r3, r2
 8008d68:	009b      	lsls	r3, r3, #2
 8008d6a:	440b      	add	r3, r1
 8008d6c:	681b      	ldr	r3, [r3, #0]
 8008d6e:	2b00      	cmp	r3, #0
 8008d70:	d10b      	bne.n	8008d8a <vTaskSwitchContext+0x5e>
 8008d72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d76:	f383 8811 	msr	BASEPRI, r3
 8008d7a:	f3bf 8f6f 	isb	sy
 8008d7e:	f3bf 8f4f 	dsb	sy
 8008d82:	607b      	str	r3, [r7, #4]
 8008d84:	bf00      	nop
 8008d86:	bf00      	nop
 8008d88:	e7fd      	b.n	8008d86 <vTaskSwitchContext+0x5a>
 8008d8a:	697a      	ldr	r2, [r7, #20]
 8008d8c:	4613      	mov	r3, r2
 8008d8e:	009b      	lsls	r3, r3, #2
 8008d90:	4413      	add	r3, r2
 8008d92:	009b      	lsls	r3, r3, #2
 8008d94:	4a11      	ldr	r2, [pc, #68]	@ (8008ddc <vTaskSwitchContext+0xb0>)
 8008d96:	4413      	add	r3, r2
 8008d98:	613b      	str	r3, [r7, #16]
 8008d9a:	693b      	ldr	r3, [r7, #16]
 8008d9c:	685b      	ldr	r3, [r3, #4]
 8008d9e:	685a      	ldr	r2, [r3, #4]
 8008da0:	693b      	ldr	r3, [r7, #16]
 8008da2:	605a      	str	r2, [r3, #4]
 8008da4:	693b      	ldr	r3, [r7, #16]
 8008da6:	685a      	ldr	r2, [r3, #4]
 8008da8:	693b      	ldr	r3, [r7, #16]
 8008daa:	3308      	adds	r3, #8
 8008dac:	429a      	cmp	r2, r3
 8008dae:	d104      	bne.n	8008dba <vTaskSwitchContext+0x8e>
 8008db0:	693b      	ldr	r3, [r7, #16]
 8008db2:	685b      	ldr	r3, [r3, #4]
 8008db4:	685a      	ldr	r2, [r3, #4]
 8008db6:	693b      	ldr	r3, [r7, #16]
 8008db8:	605a      	str	r2, [r3, #4]
 8008dba:	693b      	ldr	r3, [r7, #16]
 8008dbc:	685b      	ldr	r3, [r3, #4]
 8008dbe:	68db      	ldr	r3, [r3, #12]
 8008dc0:	4a07      	ldr	r2, [pc, #28]	@ (8008de0 <vTaskSwitchContext+0xb4>)
 8008dc2:	6013      	str	r3, [r2, #0]
 8008dc4:	bf00      	nop
 8008dc6:	371c      	adds	r7, #28
 8008dc8:	46bd      	mov	sp, r7
 8008dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dce:	4770      	bx	lr
 8008dd0:	200006d8 	.word	0x200006d8
 8008dd4:	200006c4 	.word	0x200006c4
 8008dd8:	200006b8 	.word	0x200006b8
 8008ddc:	200005b4 	.word	0x200005b4
 8008de0:	200005b0 	.word	0x200005b0

08008de4 <prvIdleTask>:
 8008de4:	b580      	push	{r7, lr}
 8008de6:	b082      	sub	sp, #8
 8008de8:	af00      	add	r7, sp, #0
 8008dea:	6078      	str	r0, [r7, #4]
 8008dec:	f000 f852 	bl	8008e94 <prvCheckTasksWaitingTermination>
 8008df0:	4b06      	ldr	r3, [pc, #24]	@ (8008e0c <prvIdleTask+0x28>)
 8008df2:	681b      	ldr	r3, [r3, #0]
 8008df4:	2b01      	cmp	r3, #1
 8008df6:	d9f9      	bls.n	8008dec <prvIdleTask+0x8>
 8008df8:	4b05      	ldr	r3, [pc, #20]	@ (8008e10 <prvIdleTask+0x2c>)
 8008dfa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008dfe:	601a      	str	r2, [r3, #0]
 8008e00:	f3bf 8f4f 	dsb	sy
 8008e04:	f3bf 8f6f 	isb	sy
 8008e08:	e7f0      	b.n	8008dec <prvIdleTask+0x8>
 8008e0a:	bf00      	nop
 8008e0c:	200005b4 	.word	0x200005b4
 8008e10:	e000ed04 	.word	0xe000ed04

08008e14 <prvInitialiseTaskLists>:
 8008e14:	b580      	push	{r7, lr}
 8008e16:	b082      	sub	sp, #8
 8008e18:	af00      	add	r7, sp, #0
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	607b      	str	r3, [r7, #4]
 8008e1e:	e00c      	b.n	8008e3a <prvInitialiseTaskLists+0x26>
 8008e20:	687a      	ldr	r2, [r7, #4]
 8008e22:	4613      	mov	r3, r2
 8008e24:	009b      	lsls	r3, r3, #2
 8008e26:	4413      	add	r3, r2
 8008e28:	009b      	lsls	r3, r3, #2
 8008e2a:	4a12      	ldr	r2, [pc, #72]	@ (8008e74 <prvInitialiseTaskLists+0x60>)
 8008e2c:	4413      	add	r3, r2
 8008e2e:	4618      	mov	r0, r3
 8008e30:	f7ff f99c 	bl	800816c <vListInitialise>
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	3301      	adds	r3, #1
 8008e38:	607b      	str	r3, [r7, #4]
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	2b06      	cmp	r3, #6
 8008e3e:	d9ef      	bls.n	8008e20 <prvInitialiseTaskLists+0xc>
 8008e40:	480d      	ldr	r0, [pc, #52]	@ (8008e78 <prvInitialiseTaskLists+0x64>)
 8008e42:	f7ff f993 	bl	800816c <vListInitialise>
 8008e46:	480d      	ldr	r0, [pc, #52]	@ (8008e7c <prvInitialiseTaskLists+0x68>)
 8008e48:	f7ff f990 	bl	800816c <vListInitialise>
 8008e4c:	480c      	ldr	r0, [pc, #48]	@ (8008e80 <prvInitialiseTaskLists+0x6c>)
 8008e4e:	f7ff f98d 	bl	800816c <vListInitialise>
 8008e52:	480c      	ldr	r0, [pc, #48]	@ (8008e84 <prvInitialiseTaskLists+0x70>)
 8008e54:	f7ff f98a 	bl	800816c <vListInitialise>
 8008e58:	480b      	ldr	r0, [pc, #44]	@ (8008e88 <prvInitialiseTaskLists+0x74>)
 8008e5a:	f7ff f987 	bl	800816c <vListInitialise>
 8008e5e:	4b0b      	ldr	r3, [pc, #44]	@ (8008e8c <prvInitialiseTaskLists+0x78>)
 8008e60:	4a05      	ldr	r2, [pc, #20]	@ (8008e78 <prvInitialiseTaskLists+0x64>)
 8008e62:	601a      	str	r2, [r3, #0]
 8008e64:	4b0a      	ldr	r3, [pc, #40]	@ (8008e90 <prvInitialiseTaskLists+0x7c>)
 8008e66:	4a05      	ldr	r2, [pc, #20]	@ (8008e7c <prvInitialiseTaskLists+0x68>)
 8008e68:	601a      	str	r2, [r3, #0]
 8008e6a:	bf00      	nop
 8008e6c:	3708      	adds	r7, #8
 8008e6e:	46bd      	mov	sp, r7
 8008e70:	bd80      	pop	{r7, pc}
 8008e72:	bf00      	nop
 8008e74:	200005b4 	.word	0x200005b4
 8008e78:	20000640 	.word	0x20000640
 8008e7c:	20000654 	.word	0x20000654
 8008e80:	20000670 	.word	0x20000670
 8008e84:	20000684 	.word	0x20000684
 8008e88:	2000069c 	.word	0x2000069c
 8008e8c:	20000668 	.word	0x20000668
 8008e90:	2000066c 	.word	0x2000066c

08008e94 <prvCheckTasksWaitingTermination>:
 8008e94:	b580      	push	{r7, lr}
 8008e96:	b082      	sub	sp, #8
 8008e98:	af00      	add	r7, sp, #0
 8008e9a:	e019      	b.n	8008ed0 <prvCheckTasksWaitingTermination+0x3c>
 8008e9c:	f000 fa0c 	bl	80092b8 <vPortEnterCritical>
 8008ea0:	4b10      	ldr	r3, [pc, #64]	@ (8008ee4 <prvCheckTasksWaitingTermination+0x50>)
 8008ea2:	68db      	ldr	r3, [r3, #12]
 8008ea4:	68db      	ldr	r3, [r3, #12]
 8008ea6:	607b      	str	r3, [r7, #4]
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	3304      	adds	r3, #4
 8008eac:	4618      	mov	r0, r3
 8008eae:	f7ff f9e7 	bl	8008280 <uxListRemove>
 8008eb2:	4b0d      	ldr	r3, [pc, #52]	@ (8008ee8 <prvCheckTasksWaitingTermination+0x54>)
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	3b01      	subs	r3, #1
 8008eb8:	4a0b      	ldr	r2, [pc, #44]	@ (8008ee8 <prvCheckTasksWaitingTermination+0x54>)
 8008eba:	6013      	str	r3, [r2, #0]
 8008ebc:	4b0b      	ldr	r3, [pc, #44]	@ (8008eec <prvCheckTasksWaitingTermination+0x58>)
 8008ebe:	681b      	ldr	r3, [r3, #0]
 8008ec0:	3b01      	subs	r3, #1
 8008ec2:	4a0a      	ldr	r2, [pc, #40]	@ (8008eec <prvCheckTasksWaitingTermination+0x58>)
 8008ec4:	6013      	str	r3, [r2, #0]
 8008ec6:	f000 fa29 	bl	800931c <vPortExitCritical>
 8008eca:	6878      	ldr	r0, [r7, #4]
 8008ecc:	f000 f810 	bl	8008ef0 <prvDeleteTCB>
 8008ed0:	4b06      	ldr	r3, [pc, #24]	@ (8008eec <prvCheckTasksWaitingTermination+0x58>)
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	2b00      	cmp	r3, #0
 8008ed6:	d1e1      	bne.n	8008e9c <prvCheckTasksWaitingTermination+0x8>
 8008ed8:	bf00      	nop
 8008eda:	bf00      	nop
 8008edc:	3708      	adds	r7, #8
 8008ede:	46bd      	mov	sp, r7
 8008ee0:	bd80      	pop	{r7, pc}
 8008ee2:	bf00      	nop
 8008ee4:	20000684 	.word	0x20000684
 8008ee8:	200006b0 	.word	0x200006b0
 8008eec:	20000698 	.word	0x20000698

08008ef0 <prvDeleteTCB>:
 8008ef0:	b580      	push	{r7, lr}
 8008ef2:	b084      	sub	sp, #16
 8008ef4:	af00      	add	r7, sp, #0
 8008ef6:	6078      	str	r0, [r7, #4]
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d108      	bne.n	8008f14 <prvDeleteTCB+0x24>
 8008f02:	687b      	ldr	r3, [r7, #4]
 8008f04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008f06:	4618      	mov	r0, r3
 8008f08:	f000 fbc6 	bl	8009698 <vPortFree>
 8008f0c:	6878      	ldr	r0, [r7, #4]
 8008f0e:	f000 fbc3 	bl	8009698 <vPortFree>
 8008f12:	e019      	b.n	8008f48 <prvDeleteTCB+0x58>
 8008f14:	687b      	ldr	r3, [r7, #4]
 8008f16:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8008f1a:	2b01      	cmp	r3, #1
 8008f1c:	d103      	bne.n	8008f26 <prvDeleteTCB+0x36>
 8008f1e:	6878      	ldr	r0, [r7, #4]
 8008f20:	f000 fbba 	bl	8009698 <vPortFree>
 8008f24:	e010      	b.n	8008f48 <prvDeleteTCB+0x58>
 8008f26:	687b      	ldr	r3, [r7, #4]
 8008f28:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8008f2c:	2b02      	cmp	r3, #2
 8008f2e:	d00b      	beq.n	8008f48 <prvDeleteTCB+0x58>
 8008f30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f34:	f383 8811 	msr	BASEPRI, r3
 8008f38:	f3bf 8f6f 	isb	sy
 8008f3c:	f3bf 8f4f 	dsb	sy
 8008f40:	60fb      	str	r3, [r7, #12]
 8008f42:	bf00      	nop
 8008f44:	bf00      	nop
 8008f46:	e7fd      	b.n	8008f44 <prvDeleteTCB+0x54>
 8008f48:	bf00      	nop
 8008f4a:	3710      	adds	r7, #16
 8008f4c:	46bd      	mov	sp, r7
 8008f4e:	bd80      	pop	{r7, pc}

08008f50 <prvResetNextTaskUnblockTime>:
 8008f50:	b480      	push	{r7}
 8008f52:	b083      	sub	sp, #12
 8008f54:	af00      	add	r7, sp, #0
 8008f56:	4b0c      	ldr	r3, [pc, #48]	@ (8008f88 <prvResetNextTaskUnblockTime+0x38>)
 8008f58:	681b      	ldr	r3, [r3, #0]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	2b00      	cmp	r3, #0
 8008f5e:	d104      	bne.n	8008f6a <prvResetNextTaskUnblockTime+0x1a>
 8008f60:	4b0a      	ldr	r3, [pc, #40]	@ (8008f8c <prvResetNextTaskUnblockTime+0x3c>)
 8008f62:	f04f 32ff 	mov.w	r2, #4294967295
 8008f66:	601a      	str	r2, [r3, #0]
 8008f68:	e008      	b.n	8008f7c <prvResetNextTaskUnblockTime+0x2c>
 8008f6a:	4b07      	ldr	r3, [pc, #28]	@ (8008f88 <prvResetNextTaskUnblockTime+0x38>)
 8008f6c:	681b      	ldr	r3, [r3, #0]
 8008f6e:	68db      	ldr	r3, [r3, #12]
 8008f70:	68db      	ldr	r3, [r3, #12]
 8008f72:	607b      	str	r3, [r7, #4]
 8008f74:	687b      	ldr	r3, [r7, #4]
 8008f76:	685b      	ldr	r3, [r3, #4]
 8008f78:	4a04      	ldr	r2, [pc, #16]	@ (8008f8c <prvResetNextTaskUnblockTime+0x3c>)
 8008f7a:	6013      	str	r3, [r2, #0]
 8008f7c:	bf00      	nop
 8008f7e:	370c      	adds	r7, #12
 8008f80:	46bd      	mov	sp, r7
 8008f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f86:	4770      	bx	lr
 8008f88:	20000668 	.word	0x20000668
 8008f8c:	200006d0 	.word	0x200006d0

08008f90 <prvAddCurrentTaskToDelayedList>:
 8008f90:	b580      	push	{r7, lr}
 8008f92:	b084      	sub	sp, #16
 8008f94:	af00      	add	r7, sp, #0
 8008f96:	6078      	str	r0, [r7, #4]
 8008f98:	6039      	str	r1, [r7, #0]
 8008f9a:	4b29      	ldr	r3, [pc, #164]	@ (8009040 <prvAddCurrentTaskToDelayedList+0xb0>)
 8008f9c:	681b      	ldr	r3, [r3, #0]
 8008f9e:	60fb      	str	r3, [r7, #12]
 8008fa0:	4b28      	ldr	r3, [pc, #160]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	3304      	adds	r3, #4
 8008fa6:	4618      	mov	r0, r3
 8008fa8:	f7ff f96a 	bl	8008280 <uxListRemove>
 8008fac:	4603      	mov	r3, r0
 8008fae:	2b00      	cmp	r3, #0
 8008fb0:	d10b      	bne.n	8008fca <prvAddCurrentTaskToDelayedList+0x3a>
 8008fb2:	4b24      	ldr	r3, [pc, #144]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008fb8:	2201      	movs	r2, #1
 8008fba:	fa02 f303 	lsl.w	r3, r2, r3
 8008fbe:	43da      	mvns	r2, r3
 8008fc0:	4b21      	ldr	r3, [pc, #132]	@ (8009048 <prvAddCurrentTaskToDelayedList+0xb8>)
 8008fc2:	681b      	ldr	r3, [r3, #0]
 8008fc4:	4013      	ands	r3, r2
 8008fc6:	4a20      	ldr	r2, [pc, #128]	@ (8009048 <prvAddCurrentTaskToDelayedList+0xb8>)
 8008fc8:	6013      	str	r3, [r2, #0]
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008fd0:	d10a      	bne.n	8008fe8 <prvAddCurrentTaskToDelayedList+0x58>
 8008fd2:	683b      	ldr	r3, [r7, #0]
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	d007      	beq.n	8008fe8 <prvAddCurrentTaskToDelayedList+0x58>
 8008fd8:	4b1a      	ldr	r3, [pc, #104]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 8008fda:	681b      	ldr	r3, [r3, #0]
 8008fdc:	3304      	adds	r3, #4
 8008fde:	4619      	mov	r1, r3
 8008fe0:	481a      	ldr	r0, [pc, #104]	@ (800904c <prvAddCurrentTaskToDelayedList+0xbc>)
 8008fe2:	f7ff f8f0 	bl	80081c6 <vListInsertEnd>
 8008fe6:	e026      	b.n	8009036 <prvAddCurrentTaskToDelayedList+0xa6>
 8008fe8:	68fa      	ldr	r2, [r7, #12]
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	4413      	add	r3, r2
 8008fee:	60bb      	str	r3, [r7, #8]
 8008ff0:	4b14      	ldr	r3, [pc, #80]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	68ba      	ldr	r2, [r7, #8]
 8008ff6:	605a      	str	r2, [r3, #4]
 8008ff8:	68ba      	ldr	r2, [r7, #8]
 8008ffa:	68fb      	ldr	r3, [r7, #12]
 8008ffc:	429a      	cmp	r2, r3
 8008ffe:	d209      	bcs.n	8009014 <prvAddCurrentTaskToDelayedList+0x84>
 8009000:	4b13      	ldr	r3, [pc, #76]	@ (8009050 <prvAddCurrentTaskToDelayedList+0xc0>)
 8009002:	681a      	ldr	r2, [r3, #0]
 8009004:	4b0f      	ldr	r3, [pc, #60]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	3304      	adds	r3, #4
 800900a:	4619      	mov	r1, r3
 800900c:	4610      	mov	r0, r2
 800900e:	f7ff f8fe 	bl	800820e <vListInsert>
 8009012:	e010      	b.n	8009036 <prvAddCurrentTaskToDelayedList+0xa6>
 8009014:	4b0f      	ldr	r3, [pc, #60]	@ (8009054 <prvAddCurrentTaskToDelayedList+0xc4>)
 8009016:	681a      	ldr	r2, [r3, #0]
 8009018:	4b0a      	ldr	r3, [pc, #40]	@ (8009044 <prvAddCurrentTaskToDelayedList+0xb4>)
 800901a:	681b      	ldr	r3, [r3, #0]
 800901c:	3304      	adds	r3, #4
 800901e:	4619      	mov	r1, r3
 8009020:	4610      	mov	r0, r2
 8009022:	f7ff f8f4 	bl	800820e <vListInsert>
 8009026:	4b0c      	ldr	r3, [pc, #48]	@ (8009058 <prvAddCurrentTaskToDelayedList+0xc8>)
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	68ba      	ldr	r2, [r7, #8]
 800902c:	429a      	cmp	r2, r3
 800902e:	d202      	bcs.n	8009036 <prvAddCurrentTaskToDelayedList+0xa6>
 8009030:	4a09      	ldr	r2, [pc, #36]	@ (8009058 <prvAddCurrentTaskToDelayedList+0xc8>)
 8009032:	68bb      	ldr	r3, [r7, #8]
 8009034:	6013      	str	r3, [r2, #0]
 8009036:	bf00      	nop
 8009038:	3710      	adds	r7, #16
 800903a:	46bd      	mov	sp, r7
 800903c:	bd80      	pop	{r7, pc}
 800903e:	bf00      	nop
 8009040:	200006b4 	.word	0x200006b4
 8009044:	200005b0 	.word	0x200005b0
 8009048:	200006b8 	.word	0x200006b8
 800904c:	2000069c 	.word	0x2000069c
 8009050:	2000066c 	.word	0x2000066c
 8009054:	20000668 	.word	0x20000668
 8009058:	200006d0 	.word	0x200006d0

0800905c <pxPortInitialiseStack>:
 800905c:	b480      	push	{r7}
 800905e:	b085      	sub	sp, #20
 8009060:	af00      	add	r7, sp, #0
 8009062:	60f8      	str	r0, [r7, #12]
 8009064:	60b9      	str	r1, [r7, #8]
 8009066:	607a      	str	r2, [r7, #4]
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	3b04      	subs	r3, #4
 800906c:	60fb      	str	r3, [r7, #12]
 800906e:	68fb      	ldr	r3, [r7, #12]
 8009070:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8009074:	601a      	str	r2, [r3, #0]
 8009076:	68fb      	ldr	r3, [r7, #12]
 8009078:	3b04      	subs	r3, #4
 800907a:	60fb      	str	r3, [r7, #12]
 800907c:	68bb      	ldr	r3, [r7, #8]
 800907e:	f023 0201 	bic.w	r2, r3, #1
 8009082:	68fb      	ldr	r3, [r7, #12]
 8009084:	601a      	str	r2, [r3, #0]
 8009086:	68fb      	ldr	r3, [r7, #12]
 8009088:	3b04      	subs	r3, #4
 800908a:	60fb      	str	r3, [r7, #12]
 800908c:	4a0c      	ldr	r2, [pc, #48]	@ (80090c0 <pxPortInitialiseStack+0x64>)
 800908e:	68fb      	ldr	r3, [r7, #12]
 8009090:	601a      	str	r2, [r3, #0]
 8009092:	68fb      	ldr	r3, [r7, #12]
 8009094:	3b14      	subs	r3, #20
 8009096:	60fb      	str	r3, [r7, #12]
 8009098:	687a      	ldr	r2, [r7, #4]
 800909a:	68fb      	ldr	r3, [r7, #12]
 800909c:	601a      	str	r2, [r3, #0]
 800909e:	68fb      	ldr	r3, [r7, #12]
 80090a0:	3b04      	subs	r3, #4
 80090a2:	60fb      	str	r3, [r7, #12]
 80090a4:	68fb      	ldr	r3, [r7, #12]
 80090a6:	f06f 0202 	mvn.w	r2, #2
 80090aa:	601a      	str	r2, [r3, #0]
 80090ac:	68fb      	ldr	r3, [r7, #12]
 80090ae:	3b20      	subs	r3, #32
 80090b0:	60fb      	str	r3, [r7, #12]
 80090b2:	68fb      	ldr	r3, [r7, #12]
 80090b4:	4618      	mov	r0, r3
 80090b6:	3714      	adds	r7, #20
 80090b8:	46bd      	mov	sp, r7
 80090ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090be:	4770      	bx	lr
 80090c0:	080090c5 	.word	0x080090c5

080090c4 <prvTaskExitError>:
 80090c4:	b480      	push	{r7}
 80090c6:	b085      	sub	sp, #20
 80090c8:	af00      	add	r7, sp, #0
 80090ca:	2300      	movs	r3, #0
 80090cc:	607b      	str	r3, [r7, #4]
 80090ce:	4b13      	ldr	r3, [pc, #76]	@ (800911c <prvTaskExitError+0x58>)
 80090d0:	681b      	ldr	r3, [r3, #0]
 80090d2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80090d6:	d00b      	beq.n	80090f0 <prvTaskExitError+0x2c>
 80090d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090dc:	f383 8811 	msr	BASEPRI, r3
 80090e0:	f3bf 8f6f 	isb	sy
 80090e4:	f3bf 8f4f 	dsb	sy
 80090e8:	60fb      	str	r3, [r7, #12]
 80090ea:	bf00      	nop
 80090ec:	bf00      	nop
 80090ee:	e7fd      	b.n	80090ec <prvTaskExitError+0x28>
 80090f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090f4:	f383 8811 	msr	BASEPRI, r3
 80090f8:	f3bf 8f6f 	isb	sy
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	60bb      	str	r3, [r7, #8]
 8009102:	bf00      	nop
 8009104:	bf00      	nop
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	2b00      	cmp	r3, #0
 800910a:	d0fc      	beq.n	8009106 <prvTaskExitError+0x42>
 800910c:	bf00      	nop
 800910e:	bf00      	nop
 8009110:	3714      	adds	r7, #20
 8009112:	46bd      	mov	sp, r7
 8009114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009118:	4770      	bx	lr
 800911a:	bf00      	nop
 800911c:	20000010 	.word	0x20000010

08009120 <SVC_Handler>:
 8009120:	4b07      	ldr	r3, [pc, #28]	@ (8009140 <pxCurrentTCBConst2>)
 8009122:	6819      	ldr	r1, [r3, #0]
 8009124:	6808      	ldr	r0, [r1, #0]
 8009126:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800912a:	f380 8809 	msr	PSP, r0
 800912e:	f3bf 8f6f 	isb	sy
 8009132:	f04f 0000 	mov.w	r0, #0
 8009136:	f380 8811 	msr	BASEPRI, r0
 800913a:	4770      	bx	lr
 800913c:	f3af 8000 	nop.w

08009140 <pxCurrentTCBConst2>:
 8009140:	200005b0 	.word	0x200005b0
 8009144:	bf00      	nop
 8009146:	bf00      	nop

08009148 <prvPortStartFirstTask>:
 8009148:	4808      	ldr	r0, [pc, #32]	@ (800916c <prvPortStartFirstTask+0x24>)
 800914a:	6800      	ldr	r0, [r0, #0]
 800914c:	6800      	ldr	r0, [r0, #0]
 800914e:	f380 8808 	msr	MSP, r0
 8009152:	f04f 0000 	mov.w	r0, #0
 8009156:	f380 8814 	msr	CONTROL, r0
 800915a:	b662      	cpsie	i
 800915c:	b661      	cpsie	f
 800915e:	f3bf 8f4f 	dsb	sy
 8009162:	f3bf 8f6f 	isb	sy
 8009166:	df00      	svc	0
 8009168:	bf00      	nop
 800916a:	bf00      	nop
 800916c:	e000ed08 	.word	0xe000ed08

08009170 <xPortStartScheduler>:
 8009170:	b580      	push	{r7, lr}
 8009172:	b086      	sub	sp, #24
 8009174:	af00      	add	r7, sp, #0
 8009176:	4b47      	ldr	r3, [pc, #284]	@ (8009294 <xPortStartScheduler+0x124>)
 8009178:	681b      	ldr	r3, [r3, #0]
 800917a:	4a47      	ldr	r2, [pc, #284]	@ (8009298 <xPortStartScheduler+0x128>)
 800917c:	4293      	cmp	r3, r2
 800917e:	d10b      	bne.n	8009198 <xPortStartScheduler+0x28>
 8009180:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009184:	f383 8811 	msr	BASEPRI, r3
 8009188:	f3bf 8f6f 	isb	sy
 800918c:	f3bf 8f4f 	dsb	sy
 8009190:	60fb      	str	r3, [r7, #12]
 8009192:	bf00      	nop
 8009194:	bf00      	nop
 8009196:	e7fd      	b.n	8009194 <xPortStartScheduler+0x24>
 8009198:	4b3e      	ldr	r3, [pc, #248]	@ (8009294 <xPortStartScheduler+0x124>)
 800919a:	681b      	ldr	r3, [r3, #0]
 800919c:	4a3f      	ldr	r2, [pc, #252]	@ (800929c <xPortStartScheduler+0x12c>)
 800919e:	4293      	cmp	r3, r2
 80091a0:	d10b      	bne.n	80091ba <xPortStartScheduler+0x4a>
 80091a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091a6:	f383 8811 	msr	BASEPRI, r3
 80091aa:	f3bf 8f6f 	isb	sy
 80091ae:	f3bf 8f4f 	dsb	sy
 80091b2:	613b      	str	r3, [r7, #16]
 80091b4:	bf00      	nop
 80091b6:	bf00      	nop
 80091b8:	e7fd      	b.n	80091b6 <xPortStartScheduler+0x46>
 80091ba:	4b39      	ldr	r3, [pc, #228]	@ (80092a0 <xPortStartScheduler+0x130>)
 80091bc:	617b      	str	r3, [r7, #20]
 80091be:	697b      	ldr	r3, [r7, #20]
 80091c0:	781b      	ldrb	r3, [r3, #0]
 80091c2:	b2db      	uxtb	r3, r3
 80091c4:	607b      	str	r3, [r7, #4]
 80091c6:	697b      	ldr	r3, [r7, #20]
 80091c8:	22ff      	movs	r2, #255	@ 0xff
 80091ca:	701a      	strb	r2, [r3, #0]
 80091cc:	697b      	ldr	r3, [r7, #20]
 80091ce:	781b      	ldrb	r3, [r3, #0]
 80091d0:	b2db      	uxtb	r3, r3
 80091d2:	70fb      	strb	r3, [r7, #3]
 80091d4:	78fb      	ldrb	r3, [r7, #3]
 80091d6:	b2db      	uxtb	r3, r3
 80091d8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80091dc:	b2da      	uxtb	r2, r3
 80091de:	4b31      	ldr	r3, [pc, #196]	@ (80092a4 <xPortStartScheduler+0x134>)
 80091e0:	701a      	strb	r2, [r3, #0]
 80091e2:	4b31      	ldr	r3, [pc, #196]	@ (80092a8 <xPortStartScheduler+0x138>)
 80091e4:	2207      	movs	r2, #7
 80091e6:	601a      	str	r2, [r3, #0]
 80091e8:	e009      	b.n	80091fe <xPortStartScheduler+0x8e>
 80091ea:	4b2f      	ldr	r3, [pc, #188]	@ (80092a8 <xPortStartScheduler+0x138>)
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	3b01      	subs	r3, #1
 80091f0:	4a2d      	ldr	r2, [pc, #180]	@ (80092a8 <xPortStartScheduler+0x138>)
 80091f2:	6013      	str	r3, [r2, #0]
 80091f4:	78fb      	ldrb	r3, [r7, #3]
 80091f6:	b2db      	uxtb	r3, r3
 80091f8:	005b      	lsls	r3, r3, #1
 80091fa:	b2db      	uxtb	r3, r3
 80091fc:	70fb      	strb	r3, [r7, #3]
 80091fe:	78fb      	ldrb	r3, [r7, #3]
 8009200:	b2db      	uxtb	r3, r3
 8009202:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009206:	2b80      	cmp	r3, #128	@ 0x80
 8009208:	d0ef      	beq.n	80091ea <xPortStartScheduler+0x7a>
 800920a:	4b27      	ldr	r3, [pc, #156]	@ (80092a8 <xPortStartScheduler+0x138>)
 800920c:	681b      	ldr	r3, [r3, #0]
 800920e:	f1c3 0307 	rsb	r3, r3, #7
 8009212:	2b04      	cmp	r3, #4
 8009214:	d00b      	beq.n	800922e <xPortStartScheduler+0xbe>
 8009216:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800921a:	f383 8811 	msr	BASEPRI, r3
 800921e:	f3bf 8f6f 	isb	sy
 8009222:	f3bf 8f4f 	dsb	sy
 8009226:	60bb      	str	r3, [r7, #8]
 8009228:	bf00      	nop
 800922a:	bf00      	nop
 800922c:	e7fd      	b.n	800922a <xPortStartScheduler+0xba>
 800922e:	4b1e      	ldr	r3, [pc, #120]	@ (80092a8 <xPortStartScheduler+0x138>)
 8009230:	681b      	ldr	r3, [r3, #0]
 8009232:	021b      	lsls	r3, r3, #8
 8009234:	4a1c      	ldr	r2, [pc, #112]	@ (80092a8 <xPortStartScheduler+0x138>)
 8009236:	6013      	str	r3, [r2, #0]
 8009238:	4b1b      	ldr	r3, [pc, #108]	@ (80092a8 <xPortStartScheduler+0x138>)
 800923a:	681b      	ldr	r3, [r3, #0]
 800923c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8009240:	4a19      	ldr	r2, [pc, #100]	@ (80092a8 <xPortStartScheduler+0x138>)
 8009242:	6013      	str	r3, [r2, #0]
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	b2da      	uxtb	r2, r3
 8009248:	697b      	ldr	r3, [r7, #20]
 800924a:	701a      	strb	r2, [r3, #0]
 800924c:	4b17      	ldr	r3, [pc, #92]	@ (80092ac <xPortStartScheduler+0x13c>)
 800924e:	681b      	ldr	r3, [r3, #0]
 8009250:	4a16      	ldr	r2, [pc, #88]	@ (80092ac <xPortStartScheduler+0x13c>)
 8009252:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8009256:	6013      	str	r3, [r2, #0]
 8009258:	4b14      	ldr	r3, [pc, #80]	@ (80092ac <xPortStartScheduler+0x13c>)
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	4a13      	ldr	r2, [pc, #76]	@ (80092ac <xPortStartScheduler+0x13c>)
 800925e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8009262:	6013      	str	r3, [r2, #0]
 8009264:	f000 f8da 	bl	800941c <vPortSetupTimerInterrupt>
 8009268:	4b11      	ldr	r3, [pc, #68]	@ (80092b0 <xPortStartScheduler+0x140>)
 800926a:	2200      	movs	r2, #0
 800926c:	601a      	str	r2, [r3, #0]
 800926e:	f000 f8f9 	bl	8009464 <vPortEnableVFP>
 8009272:	4b10      	ldr	r3, [pc, #64]	@ (80092b4 <xPortStartScheduler+0x144>)
 8009274:	681b      	ldr	r3, [r3, #0]
 8009276:	4a0f      	ldr	r2, [pc, #60]	@ (80092b4 <xPortStartScheduler+0x144>)
 8009278:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800927c:	6013      	str	r3, [r2, #0]
 800927e:	f7ff ff63 	bl	8009148 <prvPortStartFirstTask>
 8009282:	f7ff fd53 	bl	8008d2c <vTaskSwitchContext>
 8009286:	f7ff ff1d 	bl	80090c4 <prvTaskExitError>
 800928a:	2300      	movs	r3, #0
 800928c:	4618      	mov	r0, r3
 800928e:	3718      	adds	r7, #24
 8009290:	46bd      	mov	sp, r7
 8009292:	bd80      	pop	{r7, pc}
 8009294:	e000ed00 	.word	0xe000ed00
 8009298:	410fc271 	.word	0x410fc271
 800929c:	410fc270 	.word	0x410fc270
 80092a0:	e000e400 	.word	0xe000e400
 80092a4:	200006dc 	.word	0x200006dc
 80092a8:	200006e0 	.word	0x200006e0
 80092ac:	e000ed20 	.word	0xe000ed20
 80092b0:	20000010 	.word	0x20000010
 80092b4:	e000ef34 	.word	0xe000ef34

080092b8 <vPortEnterCritical>:
 80092b8:	b480      	push	{r7}
 80092ba:	b083      	sub	sp, #12
 80092bc:	af00      	add	r7, sp, #0
 80092be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092c2:	f383 8811 	msr	BASEPRI, r3
 80092c6:	f3bf 8f6f 	isb	sy
 80092ca:	f3bf 8f4f 	dsb	sy
 80092ce:	607b      	str	r3, [r7, #4]
 80092d0:	bf00      	nop
 80092d2:	4b10      	ldr	r3, [pc, #64]	@ (8009314 <vPortEnterCritical+0x5c>)
 80092d4:	681b      	ldr	r3, [r3, #0]
 80092d6:	3301      	adds	r3, #1
 80092d8:	4a0e      	ldr	r2, [pc, #56]	@ (8009314 <vPortEnterCritical+0x5c>)
 80092da:	6013      	str	r3, [r2, #0]
 80092dc:	4b0d      	ldr	r3, [pc, #52]	@ (8009314 <vPortEnterCritical+0x5c>)
 80092de:	681b      	ldr	r3, [r3, #0]
 80092e0:	2b01      	cmp	r3, #1
 80092e2:	d110      	bne.n	8009306 <vPortEnterCritical+0x4e>
 80092e4:	4b0c      	ldr	r3, [pc, #48]	@ (8009318 <vPortEnterCritical+0x60>)
 80092e6:	681b      	ldr	r3, [r3, #0]
 80092e8:	b2db      	uxtb	r3, r3
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d00b      	beq.n	8009306 <vPortEnterCritical+0x4e>
 80092ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092f2:	f383 8811 	msr	BASEPRI, r3
 80092f6:	f3bf 8f6f 	isb	sy
 80092fa:	f3bf 8f4f 	dsb	sy
 80092fe:	603b      	str	r3, [r7, #0]
 8009300:	bf00      	nop
 8009302:	bf00      	nop
 8009304:	e7fd      	b.n	8009302 <vPortEnterCritical+0x4a>
 8009306:	bf00      	nop
 8009308:	370c      	adds	r7, #12
 800930a:	46bd      	mov	sp, r7
 800930c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009310:	4770      	bx	lr
 8009312:	bf00      	nop
 8009314:	20000010 	.word	0x20000010
 8009318:	e000ed04 	.word	0xe000ed04

0800931c <vPortExitCritical>:
 800931c:	b480      	push	{r7}
 800931e:	b083      	sub	sp, #12
 8009320:	af00      	add	r7, sp, #0
 8009322:	4b12      	ldr	r3, [pc, #72]	@ (800936c <vPortExitCritical+0x50>)
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	2b00      	cmp	r3, #0
 8009328:	d10b      	bne.n	8009342 <vPortExitCritical+0x26>
 800932a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800932e:	f383 8811 	msr	BASEPRI, r3
 8009332:	f3bf 8f6f 	isb	sy
 8009336:	f3bf 8f4f 	dsb	sy
 800933a:	607b      	str	r3, [r7, #4]
 800933c:	bf00      	nop
 800933e:	bf00      	nop
 8009340:	e7fd      	b.n	800933e <vPortExitCritical+0x22>
 8009342:	4b0a      	ldr	r3, [pc, #40]	@ (800936c <vPortExitCritical+0x50>)
 8009344:	681b      	ldr	r3, [r3, #0]
 8009346:	3b01      	subs	r3, #1
 8009348:	4a08      	ldr	r2, [pc, #32]	@ (800936c <vPortExitCritical+0x50>)
 800934a:	6013      	str	r3, [r2, #0]
 800934c:	4b07      	ldr	r3, [pc, #28]	@ (800936c <vPortExitCritical+0x50>)
 800934e:	681b      	ldr	r3, [r3, #0]
 8009350:	2b00      	cmp	r3, #0
 8009352:	d105      	bne.n	8009360 <vPortExitCritical+0x44>
 8009354:	2300      	movs	r3, #0
 8009356:	603b      	str	r3, [r7, #0]
 8009358:	683b      	ldr	r3, [r7, #0]
 800935a:	f383 8811 	msr	BASEPRI, r3
 800935e:	bf00      	nop
 8009360:	bf00      	nop
 8009362:	370c      	adds	r7, #12
 8009364:	46bd      	mov	sp, r7
 8009366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800936a:	4770      	bx	lr
 800936c:	20000010 	.word	0x20000010

08009370 <PendSV_Handler>:
 8009370:	f3ef 8009 	mrs	r0, PSP
 8009374:	f3bf 8f6f 	isb	sy
 8009378:	4b15      	ldr	r3, [pc, #84]	@ (80093d0 <pxCurrentTCBConst>)
 800937a:	681a      	ldr	r2, [r3, #0]
 800937c:	f01e 0f10 	tst.w	lr, #16
 8009380:	bf08      	it	eq
 8009382:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009386:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800938a:	6010      	str	r0, [r2, #0]
 800938c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009390:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8009394:	f380 8811 	msr	BASEPRI, r0
 8009398:	f3bf 8f4f 	dsb	sy
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f7ff fcc4 	bl	8008d2c <vTaskSwitchContext>
 80093a4:	f04f 0000 	mov.w	r0, #0
 80093a8:	f380 8811 	msr	BASEPRI, r0
 80093ac:	bc09      	pop	{r0, r3}
 80093ae:	6819      	ldr	r1, [r3, #0]
 80093b0:	6808      	ldr	r0, [r1, #0]
 80093b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093b6:	f01e 0f10 	tst.w	lr, #16
 80093ba:	bf08      	it	eq
 80093bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80093c0:	f380 8809 	msr	PSP, r0
 80093c4:	f3bf 8f6f 	isb	sy
 80093c8:	4770      	bx	lr
 80093ca:	bf00      	nop
 80093cc:	f3af 8000 	nop.w

080093d0 <pxCurrentTCBConst>:
 80093d0:	200005b0 	.word	0x200005b0
 80093d4:	bf00      	nop
 80093d6:	bf00      	nop

080093d8 <SysTick_Handler>:
 80093d8:	b580      	push	{r7, lr}
 80093da:	b082      	sub	sp, #8
 80093dc:	af00      	add	r7, sp, #0
 80093de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093e2:	f383 8811 	msr	BASEPRI, r3
 80093e6:	f3bf 8f6f 	isb	sy
 80093ea:	f3bf 8f4f 	dsb	sy
 80093ee:	607b      	str	r3, [r7, #4]
 80093f0:	bf00      	nop
 80093f2:	f7ff fbe1 	bl	8008bb8 <xTaskIncrementTick>
 80093f6:	4603      	mov	r3, r0
 80093f8:	2b00      	cmp	r3, #0
 80093fa:	d003      	beq.n	8009404 <SysTick_Handler+0x2c>
 80093fc:	4b06      	ldr	r3, [pc, #24]	@ (8009418 <SysTick_Handler+0x40>)
 80093fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009402:	601a      	str	r2, [r3, #0]
 8009404:	2300      	movs	r3, #0
 8009406:	603b      	str	r3, [r7, #0]
 8009408:	683b      	ldr	r3, [r7, #0]
 800940a:	f383 8811 	msr	BASEPRI, r3
 800940e:	bf00      	nop
 8009410:	bf00      	nop
 8009412:	3708      	adds	r7, #8
 8009414:	46bd      	mov	sp, r7
 8009416:	bd80      	pop	{r7, pc}
 8009418:	e000ed04 	.word	0xe000ed04

0800941c <vPortSetupTimerInterrupt>:
 800941c:	b480      	push	{r7}
 800941e:	af00      	add	r7, sp, #0
 8009420:	4b0b      	ldr	r3, [pc, #44]	@ (8009450 <vPortSetupTimerInterrupt+0x34>)
 8009422:	2200      	movs	r2, #0
 8009424:	601a      	str	r2, [r3, #0]
 8009426:	4b0b      	ldr	r3, [pc, #44]	@ (8009454 <vPortSetupTimerInterrupt+0x38>)
 8009428:	2200      	movs	r2, #0
 800942a:	601a      	str	r2, [r3, #0]
 800942c:	4b0a      	ldr	r3, [pc, #40]	@ (8009458 <vPortSetupTimerInterrupt+0x3c>)
 800942e:	681b      	ldr	r3, [r3, #0]
 8009430:	4a0a      	ldr	r2, [pc, #40]	@ (800945c <vPortSetupTimerInterrupt+0x40>)
 8009432:	fba2 2303 	umull	r2, r3, r2, r3
 8009436:	099b      	lsrs	r3, r3, #6
 8009438:	4a09      	ldr	r2, [pc, #36]	@ (8009460 <vPortSetupTimerInterrupt+0x44>)
 800943a:	3b01      	subs	r3, #1
 800943c:	6013      	str	r3, [r2, #0]
 800943e:	4b04      	ldr	r3, [pc, #16]	@ (8009450 <vPortSetupTimerInterrupt+0x34>)
 8009440:	2207      	movs	r2, #7
 8009442:	601a      	str	r2, [r3, #0]
 8009444:	bf00      	nop
 8009446:	46bd      	mov	sp, r7
 8009448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800944c:	4770      	bx	lr
 800944e:	bf00      	nop
 8009450:	e000e010 	.word	0xe000e010
 8009454:	e000e018 	.word	0xe000e018
 8009458:	20000004 	.word	0x20000004
 800945c:	10624dd3 	.word	0x10624dd3
 8009460:	e000e014 	.word	0xe000e014

08009464 <vPortEnableVFP>:
 8009464:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8009474 <vPortEnableVFP+0x10>
 8009468:	6801      	ldr	r1, [r0, #0]
 800946a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800946e:	6001      	str	r1, [r0, #0]
 8009470:	4770      	bx	lr
 8009472:	bf00      	nop
 8009474:	e000ed88 	.word	0xe000ed88

08009478 <vPortValidateInterruptPriority>:
 8009478:	b480      	push	{r7}
 800947a:	b085      	sub	sp, #20
 800947c:	af00      	add	r7, sp, #0
 800947e:	f3ef 8305 	mrs	r3, IPSR
 8009482:	60fb      	str	r3, [r7, #12]
 8009484:	68fb      	ldr	r3, [r7, #12]
 8009486:	2b0f      	cmp	r3, #15
 8009488:	d915      	bls.n	80094b6 <vPortValidateInterruptPriority+0x3e>
 800948a:	4a18      	ldr	r2, [pc, #96]	@ (80094ec <vPortValidateInterruptPriority+0x74>)
 800948c:	68fb      	ldr	r3, [r7, #12]
 800948e:	4413      	add	r3, r2
 8009490:	781b      	ldrb	r3, [r3, #0]
 8009492:	72fb      	strb	r3, [r7, #11]
 8009494:	4b16      	ldr	r3, [pc, #88]	@ (80094f0 <vPortValidateInterruptPriority+0x78>)
 8009496:	781b      	ldrb	r3, [r3, #0]
 8009498:	7afa      	ldrb	r2, [r7, #11]
 800949a:	429a      	cmp	r2, r3
 800949c:	d20b      	bcs.n	80094b6 <vPortValidateInterruptPriority+0x3e>
 800949e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094a2:	f383 8811 	msr	BASEPRI, r3
 80094a6:	f3bf 8f6f 	isb	sy
 80094aa:	f3bf 8f4f 	dsb	sy
 80094ae:	607b      	str	r3, [r7, #4]
 80094b0:	bf00      	nop
 80094b2:	bf00      	nop
 80094b4:	e7fd      	b.n	80094b2 <vPortValidateInterruptPriority+0x3a>
 80094b6:	4b0f      	ldr	r3, [pc, #60]	@ (80094f4 <vPortValidateInterruptPriority+0x7c>)
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 80094be:	4b0e      	ldr	r3, [pc, #56]	@ (80094f8 <vPortValidateInterruptPriority+0x80>)
 80094c0:	681b      	ldr	r3, [r3, #0]
 80094c2:	429a      	cmp	r2, r3
 80094c4:	d90b      	bls.n	80094de <vPortValidateInterruptPriority+0x66>
 80094c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094ca:	f383 8811 	msr	BASEPRI, r3
 80094ce:	f3bf 8f6f 	isb	sy
 80094d2:	f3bf 8f4f 	dsb	sy
 80094d6:	603b      	str	r3, [r7, #0]
 80094d8:	bf00      	nop
 80094da:	bf00      	nop
 80094dc:	e7fd      	b.n	80094da <vPortValidateInterruptPriority+0x62>
 80094de:	bf00      	nop
 80094e0:	3714      	adds	r7, #20
 80094e2:	46bd      	mov	sp, r7
 80094e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094e8:	4770      	bx	lr
 80094ea:	bf00      	nop
 80094ec:	e000e3f0 	.word	0xe000e3f0
 80094f0:	200006dc 	.word	0x200006dc
 80094f4:	e000ed0c 	.word	0xe000ed0c
 80094f8:	200006e0 	.word	0x200006e0

080094fc <pvPortMalloc>:
 80094fc:	b580      	push	{r7, lr}
 80094fe:	b08a      	sub	sp, #40	@ 0x28
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	2300      	movs	r3, #0
 8009506:	61fb      	str	r3, [r7, #28]
 8009508:	f7ff faaa 	bl	8008a60 <vTaskSuspendAll>
 800950c:	4b5c      	ldr	r3, [pc, #368]	@ (8009680 <pvPortMalloc+0x184>)
 800950e:	681b      	ldr	r3, [r3, #0]
 8009510:	2b00      	cmp	r3, #0
 8009512:	d101      	bne.n	8009518 <pvPortMalloc+0x1c>
 8009514:	f000 f924 	bl	8009760 <prvHeapInit>
 8009518:	4b5a      	ldr	r3, [pc, #360]	@ (8009684 <pvPortMalloc+0x188>)
 800951a:	681a      	ldr	r2, [r3, #0]
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	4013      	ands	r3, r2
 8009520:	2b00      	cmp	r3, #0
 8009522:	f040 8095 	bne.w	8009650 <pvPortMalloc+0x154>
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	2b00      	cmp	r3, #0
 800952a:	d01e      	beq.n	800956a <pvPortMalloc+0x6e>
 800952c:	2208      	movs	r2, #8
 800952e:	687b      	ldr	r3, [r7, #4]
 8009530:	4413      	add	r3, r2
 8009532:	607b      	str	r3, [r7, #4]
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	f003 0307 	and.w	r3, r3, #7
 800953a:	2b00      	cmp	r3, #0
 800953c:	d015      	beq.n	800956a <pvPortMalloc+0x6e>
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	f023 0307 	bic.w	r3, r3, #7
 8009544:	3308      	adds	r3, #8
 8009546:	607b      	str	r3, [r7, #4]
 8009548:	687b      	ldr	r3, [r7, #4]
 800954a:	f003 0307 	and.w	r3, r3, #7
 800954e:	2b00      	cmp	r3, #0
 8009550:	d00b      	beq.n	800956a <pvPortMalloc+0x6e>
 8009552:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009556:	f383 8811 	msr	BASEPRI, r3
 800955a:	f3bf 8f6f 	isb	sy
 800955e:	f3bf 8f4f 	dsb	sy
 8009562:	617b      	str	r3, [r7, #20]
 8009564:	bf00      	nop
 8009566:	bf00      	nop
 8009568:	e7fd      	b.n	8009566 <pvPortMalloc+0x6a>
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	2b00      	cmp	r3, #0
 800956e:	d06f      	beq.n	8009650 <pvPortMalloc+0x154>
 8009570:	4b45      	ldr	r3, [pc, #276]	@ (8009688 <pvPortMalloc+0x18c>)
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	687a      	ldr	r2, [r7, #4]
 8009576:	429a      	cmp	r2, r3
 8009578:	d86a      	bhi.n	8009650 <pvPortMalloc+0x154>
 800957a:	4b44      	ldr	r3, [pc, #272]	@ (800968c <pvPortMalloc+0x190>)
 800957c:	623b      	str	r3, [r7, #32]
 800957e:	4b43      	ldr	r3, [pc, #268]	@ (800968c <pvPortMalloc+0x190>)
 8009580:	681b      	ldr	r3, [r3, #0]
 8009582:	627b      	str	r3, [r7, #36]	@ 0x24
 8009584:	e004      	b.n	8009590 <pvPortMalloc+0x94>
 8009586:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009588:	623b      	str	r3, [r7, #32]
 800958a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800958c:	681b      	ldr	r3, [r3, #0]
 800958e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009590:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009592:	685b      	ldr	r3, [r3, #4]
 8009594:	687a      	ldr	r2, [r7, #4]
 8009596:	429a      	cmp	r2, r3
 8009598:	d903      	bls.n	80095a2 <pvPortMalloc+0xa6>
 800959a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800959c:	681b      	ldr	r3, [r3, #0]
 800959e:	2b00      	cmp	r3, #0
 80095a0:	d1f1      	bne.n	8009586 <pvPortMalloc+0x8a>
 80095a2:	4b37      	ldr	r3, [pc, #220]	@ (8009680 <pvPortMalloc+0x184>)
 80095a4:	681b      	ldr	r3, [r3, #0]
 80095a6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80095a8:	429a      	cmp	r2, r3
 80095aa:	d051      	beq.n	8009650 <pvPortMalloc+0x154>
 80095ac:	6a3b      	ldr	r3, [r7, #32]
 80095ae:	681b      	ldr	r3, [r3, #0]
 80095b0:	2208      	movs	r2, #8
 80095b2:	4413      	add	r3, r2
 80095b4:	61fb      	str	r3, [r7, #28]
 80095b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80095b8:	681a      	ldr	r2, [r3, #0]
 80095ba:	6a3b      	ldr	r3, [r7, #32]
 80095bc:	601a      	str	r2, [r3, #0]
 80095be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80095c0:	685a      	ldr	r2, [r3, #4]
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	1ad2      	subs	r2, r2, r3
 80095c6:	2308      	movs	r3, #8
 80095c8:	005b      	lsls	r3, r3, #1
 80095ca:	429a      	cmp	r2, r3
 80095cc:	d920      	bls.n	8009610 <pvPortMalloc+0x114>
 80095ce:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80095d0:	687b      	ldr	r3, [r7, #4]
 80095d2:	4413      	add	r3, r2
 80095d4:	61bb      	str	r3, [r7, #24]
 80095d6:	69bb      	ldr	r3, [r7, #24]
 80095d8:	f003 0307 	and.w	r3, r3, #7
 80095dc:	2b00      	cmp	r3, #0
 80095de:	d00b      	beq.n	80095f8 <pvPortMalloc+0xfc>
 80095e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095e4:	f383 8811 	msr	BASEPRI, r3
 80095e8:	f3bf 8f6f 	isb	sy
 80095ec:	f3bf 8f4f 	dsb	sy
 80095f0:	613b      	str	r3, [r7, #16]
 80095f2:	bf00      	nop
 80095f4:	bf00      	nop
 80095f6:	e7fd      	b.n	80095f4 <pvPortMalloc+0xf8>
 80095f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80095fa:	685a      	ldr	r2, [r3, #4]
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	1ad2      	subs	r2, r2, r3
 8009600:	69bb      	ldr	r3, [r7, #24]
 8009602:	605a      	str	r2, [r3, #4]
 8009604:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009606:	687a      	ldr	r2, [r7, #4]
 8009608:	605a      	str	r2, [r3, #4]
 800960a:	69b8      	ldr	r0, [r7, #24]
 800960c:	f000 f90a 	bl	8009824 <prvInsertBlockIntoFreeList>
 8009610:	4b1d      	ldr	r3, [pc, #116]	@ (8009688 <pvPortMalloc+0x18c>)
 8009612:	681a      	ldr	r2, [r3, #0]
 8009614:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009616:	685b      	ldr	r3, [r3, #4]
 8009618:	1ad3      	subs	r3, r2, r3
 800961a:	4a1b      	ldr	r2, [pc, #108]	@ (8009688 <pvPortMalloc+0x18c>)
 800961c:	6013      	str	r3, [r2, #0]
 800961e:	4b1a      	ldr	r3, [pc, #104]	@ (8009688 <pvPortMalloc+0x18c>)
 8009620:	681a      	ldr	r2, [r3, #0]
 8009622:	4b1b      	ldr	r3, [pc, #108]	@ (8009690 <pvPortMalloc+0x194>)
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	429a      	cmp	r2, r3
 8009628:	d203      	bcs.n	8009632 <pvPortMalloc+0x136>
 800962a:	4b17      	ldr	r3, [pc, #92]	@ (8009688 <pvPortMalloc+0x18c>)
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	4a18      	ldr	r2, [pc, #96]	@ (8009690 <pvPortMalloc+0x194>)
 8009630:	6013      	str	r3, [r2, #0]
 8009632:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009634:	685a      	ldr	r2, [r3, #4]
 8009636:	4b13      	ldr	r3, [pc, #76]	@ (8009684 <pvPortMalloc+0x188>)
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	431a      	orrs	r2, r3
 800963c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800963e:	605a      	str	r2, [r3, #4]
 8009640:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009642:	2200      	movs	r2, #0
 8009644:	601a      	str	r2, [r3, #0]
 8009646:	4b13      	ldr	r3, [pc, #76]	@ (8009694 <pvPortMalloc+0x198>)
 8009648:	681b      	ldr	r3, [r3, #0]
 800964a:	3301      	adds	r3, #1
 800964c:	4a11      	ldr	r2, [pc, #68]	@ (8009694 <pvPortMalloc+0x198>)
 800964e:	6013      	str	r3, [r2, #0]
 8009650:	f7ff fa14 	bl	8008a7c <xTaskResumeAll>
 8009654:	69fb      	ldr	r3, [r7, #28]
 8009656:	f003 0307 	and.w	r3, r3, #7
 800965a:	2b00      	cmp	r3, #0
 800965c:	d00b      	beq.n	8009676 <pvPortMalloc+0x17a>
 800965e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009662:	f383 8811 	msr	BASEPRI, r3
 8009666:	f3bf 8f6f 	isb	sy
 800966a:	f3bf 8f4f 	dsb	sy
 800966e:	60fb      	str	r3, [r7, #12]
 8009670:	bf00      	nop
 8009672:	bf00      	nop
 8009674:	e7fd      	b.n	8009672 <pvPortMalloc+0x176>
 8009676:	69fb      	ldr	r3, [r7, #28]
 8009678:	4618      	mov	r0, r3
 800967a:	3728      	adds	r7, #40	@ 0x28
 800967c:	46bd      	mov	sp, r7
 800967e:	bd80      	pop	{r7, pc}
 8009680:	200042ec 	.word	0x200042ec
 8009684:	20004300 	.word	0x20004300
 8009688:	200042f0 	.word	0x200042f0
 800968c:	200042e4 	.word	0x200042e4
 8009690:	200042f4 	.word	0x200042f4
 8009694:	200042f8 	.word	0x200042f8

08009698 <vPortFree>:
 8009698:	b580      	push	{r7, lr}
 800969a:	b086      	sub	sp, #24
 800969c:	af00      	add	r7, sp, #0
 800969e:	6078      	str	r0, [r7, #4]
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	617b      	str	r3, [r7, #20]
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	2b00      	cmp	r3, #0
 80096a8:	d04f      	beq.n	800974a <vPortFree+0xb2>
 80096aa:	2308      	movs	r3, #8
 80096ac:	425b      	negs	r3, r3
 80096ae:	697a      	ldr	r2, [r7, #20]
 80096b0:	4413      	add	r3, r2
 80096b2:	617b      	str	r3, [r7, #20]
 80096b4:	697b      	ldr	r3, [r7, #20]
 80096b6:	613b      	str	r3, [r7, #16]
 80096b8:	693b      	ldr	r3, [r7, #16]
 80096ba:	685a      	ldr	r2, [r3, #4]
 80096bc:	4b25      	ldr	r3, [pc, #148]	@ (8009754 <vPortFree+0xbc>)
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	4013      	ands	r3, r2
 80096c2:	2b00      	cmp	r3, #0
 80096c4:	d10b      	bne.n	80096de <vPortFree+0x46>
 80096c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096ca:	f383 8811 	msr	BASEPRI, r3
 80096ce:	f3bf 8f6f 	isb	sy
 80096d2:	f3bf 8f4f 	dsb	sy
 80096d6:	60fb      	str	r3, [r7, #12]
 80096d8:	bf00      	nop
 80096da:	bf00      	nop
 80096dc:	e7fd      	b.n	80096da <vPortFree+0x42>
 80096de:	693b      	ldr	r3, [r7, #16]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	2b00      	cmp	r3, #0
 80096e4:	d00b      	beq.n	80096fe <vPortFree+0x66>
 80096e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096ea:	f383 8811 	msr	BASEPRI, r3
 80096ee:	f3bf 8f6f 	isb	sy
 80096f2:	f3bf 8f4f 	dsb	sy
 80096f6:	60bb      	str	r3, [r7, #8]
 80096f8:	bf00      	nop
 80096fa:	bf00      	nop
 80096fc:	e7fd      	b.n	80096fa <vPortFree+0x62>
 80096fe:	693b      	ldr	r3, [r7, #16]
 8009700:	685a      	ldr	r2, [r3, #4]
 8009702:	4b14      	ldr	r3, [pc, #80]	@ (8009754 <vPortFree+0xbc>)
 8009704:	681b      	ldr	r3, [r3, #0]
 8009706:	4013      	ands	r3, r2
 8009708:	2b00      	cmp	r3, #0
 800970a:	d01e      	beq.n	800974a <vPortFree+0xb2>
 800970c:	693b      	ldr	r3, [r7, #16]
 800970e:	681b      	ldr	r3, [r3, #0]
 8009710:	2b00      	cmp	r3, #0
 8009712:	d11a      	bne.n	800974a <vPortFree+0xb2>
 8009714:	693b      	ldr	r3, [r7, #16]
 8009716:	685a      	ldr	r2, [r3, #4]
 8009718:	4b0e      	ldr	r3, [pc, #56]	@ (8009754 <vPortFree+0xbc>)
 800971a:	681b      	ldr	r3, [r3, #0]
 800971c:	43db      	mvns	r3, r3
 800971e:	401a      	ands	r2, r3
 8009720:	693b      	ldr	r3, [r7, #16]
 8009722:	605a      	str	r2, [r3, #4]
 8009724:	f7ff f99c 	bl	8008a60 <vTaskSuspendAll>
 8009728:	693b      	ldr	r3, [r7, #16]
 800972a:	685a      	ldr	r2, [r3, #4]
 800972c:	4b0a      	ldr	r3, [pc, #40]	@ (8009758 <vPortFree+0xc0>)
 800972e:	681b      	ldr	r3, [r3, #0]
 8009730:	4413      	add	r3, r2
 8009732:	4a09      	ldr	r2, [pc, #36]	@ (8009758 <vPortFree+0xc0>)
 8009734:	6013      	str	r3, [r2, #0]
 8009736:	6938      	ldr	r0, [r7, #16]
 8009738:	f000 f874 	bl	8009824 <prvInsertBlockIntoFreeList>
 800973c:	4b07      	ldr	r3, [pc, #28]	@ (800975c <vPortFree+0xc4>)
 800973e:	681b      	ldr	r3, [r3, #0]
 8009740:	3301      	adds	r3, #1
 8009742:	4a06      	ldr	r2, [pc, #24]	@ (800975c <vPortFree+0xc4>)
 8009744:	6013      	str	r3, [r2, #0]
 8009746:	f7ff f999 	bl	8008a7c <xTaskResumeAll>
 800974a:	bf00      	nop
 800974c:	3718      	adds	r7, #24
 800974e:	46bd      	mov	sp, r7
 8009750:	bd80      	pop	{r7, pc}
 8009752:	bf00      	nop
 8009754:	20004300 	.word	0x20004300
 8009758:	200042f0 	.word	0x200042f0
 800975c:	200042fc 	.word	0x200042fc

08009760 <prvHeapInit>:
 8009760:	b480      	push	{r7}
 8009762:	b085      	sub	sp, #20
 8009764:	af00      	add	r7, sp, #0
 8009766:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 800976a:	60bb      	str	r3, [r7, #8]
 800976c:	4b27      	ldr	r3, [pc, #156]	@ (800980c <prvHeapInit+0xac>)
 800976e:	60fb      	str	r3, [r7, #12]
 8009770:	68fb      	ldr	r3, [r7, #12]
 8009772:	f003 0307 	and.w	r3, r3, #7
 8009776:	2b00      	cmp	r3, #0
 8009778:	d00c      	beq.n	8009794 <prvHeapInit+0x34>
 800977a:	68fb      	ldr	r3, [r7, #12]
 800977c:	3307      	adds	r3, #7
 800977e:	60fb      	str	r3, [r7, #12]
 8009780:	68fb      	ldr	r3, [r7, #12]
 8009782:	f023 0307 	bic.w	r3, r3, #7
 8009786:	60fb      	str	r3, [r7, #12]
 8009788:	68ba      	ldr	r2, [r7, #8]
 800978a:	68fb      	ldr	r3, [r7, #12]
 800978c:	1ad3      	subs	r3, r2, r3
 800978e:	4a1f      	ldr	r2, [pc, #124]	@ (800980c <prvHeapInit+0xac>)
 8009790:	4413      	add	r3, r2
 8009792:	60bb      	str	r3, [r7, #8]
 8009794:	68fb      	ldr	r3, [r7, #12]
 8009796:	607b      	str	r3, [r7, #4]
 8009798:	4a1d      	ldr	r2, [pc, #116]	@ (8009810 <prvHeapInit+0xb0>)
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	6013      	str	r3, [r2, #0]
 800979e:	4b1c      	ldr	r3, [pc, #112]	@ (8009810 <prvHeapInit+0xb0>)
 80097a0:	2200      	movs	r2, #0
 80097a2:	605a      	str	r2, [r3, #4]
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	68ba      	ldr	r2, [r7, #8]
 80097a8:	4413      	add	r3, r2
 80097aa:	60fb      	str	r3, [r7, #12]
 80097ac:	2208      	movs	r2, #8
 80097ae:	68fb      	ldr	r3, [r7, #12]
 80097b0:	1a9b      	subs	r3, r3, r2
 80097b2:	60fb      	str	r3, [r7, #12]
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	f023 0307 	bic.w	r3, r3, #7
 80097ba:	60fb      	str	r3, [r7, #12]
 80097bc:	68fb      	ldr	r3, [r7, #12]
 80097be:	4a15      	ldr	r2, [pc, #84]	@ (8009814 <prvHeapInit+0xb4>)
 80097c0:	6013      	str	r3, [r2, #0]
 80097c2:	4b14      	ldr	r3, [pc, #80]	@ (8009814 <prvHeapInit+0xb4>)
 80097c4:	681b      	ldr	r3, [r3, #0]
 80097c6:	2200      	movs	r2, #0
 80097c8:	605a      	str	r2, [r3, #4]
 80097ca:	4b12      	ldr	r3, [pc, #72]	@ (8009814 <prvHeapInit+0xb4>)
 80097cc:	681b      	ldr	r3, [r3, #0]
 80097ce:	2200      	movs	r2, #0
 80097d0:	601a      	str	r2, [r3, #0]
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	603b      	str	r3, [r7, #0]
 80097d6:	683b      	ldr	r3, [r7, #0]
 80097d8:	68fa      	ldr	r2, [r7, #12]
 80097da:	1ad2      	subs	r2, r2, r3
 80097dc:	683b      	ldr	r3, [r7, #0]
 80097de:	605a      	str	r2, [r3, #4]
 80097e0:	4b0c      	ldr	r3, [pc, #48]	@ (8009814 <prvHeapInit+0xb4>)
 80097e2:	681a      	ldr	r2, [r3, #0]
 80097e4:	683b      	ldr	r3, [r7, #0]
 80097e6:	601a      	str	r2, [r3, #0]
 80097e8:	683b      	ldr	r3, [r7, #0]
 80097ea:	685b      	ldr	r3, [r3, #4]
 80097ec:	4a0a      	ldr	r2, [pc, #40]	@ (8009818 <prvHeapInit+0xb8>)
 80097ee:	6013      	str	r3, [r2, #0]
 80097f0:	683b      	ldr	r3, [r7, #0]
 80097f2:	685b      	ldr	r3, [r3, #4]
 80097f4:	4a09      	ldr	r2, [pc, #36]	@ (800981c <prvHeapInit+0xbc>)
 80097f6:	6013      	str	r3, [r2, #0]
 80097f8:	4b09      	ldr	r3, [pc, #36]	@ (8009820 <prvHeapInit+0xc0>)
 80097fa:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 80097fe:	601a      	str	r2, [r3, #0]
 8009800:	bf00      	nop
 8009802:	3714      	adds	r7, #20
 8009804:	46bd      	mov	sp, r7
 8009806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800980a:	4770      	bx	lr
 800980c:	200006e4 	.word	0x200006e4
 8009810:	200042e4 	.word	0x200042e4
 8009814:	200042ec 	.word	0x200042ec
 8009818:	200042f4 	.word	0x200042f4
 800981c:	200042f0 	.word	0x200042f0
 8009820:	20004300 	.word	0x20004300

08009824 <prvInsertBlockIntoFreeList>:
 8009824:	b480      	push	{r7}
 8009826:	b085      	sub	sp, #20
 8009828:	af00      	add	r7, sp, #0
 800982a:	6078      	str	r0, [r7, #4]
 800982c:	4b28      	ldr	r3, [pc, #160]	@ (80098d0 <prvInsertBlockIntoFreeList+0xac>)
 800982e:	60fb      	str	r3, [r7, #12]
 8009830:	e002      	b.n	8009838 <prvInsertBlockIntoFreeList+0x14>
 8009832:	68fb      	ldr	r3, [r7, #12]
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	60fb      	str	r3, [r7, #12]
 8009838:	68fb      	ldr	r3, [r7, #12]
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	687a      	ldr	r2, [r7, #4]
 800983e:	429a      	cmp	r2, r3
 8009840:	d8f7      	bhi.n	8009832 <prvInsertBlockIntoFreeList+0xe>
 8009842:	68fb      	ldr	r3, [r7, #12]
 8009844:	60bb      	str	r3, [r7, #8]
 8009846:	68fb      	ldr	r3, [r7, #12]
 8009848:	685b      	ldr	r3, [r3, #4]
 800984a:	68ba      	ldr	r2, [r7, #8]
 800984c:	4413      	add	r3, r2
 800984e:	687a      	ldr	r2, [r7, #4]
 8009850:	429a      	cmp	r2, r3
 8009852:	d108      	bne.n	8009866 <prvInsertBlockIntoFreeList+0x42>
 8009854:	68fb      	ldr	r3, [r7, #12]
 8009856:	685a      	ldr	r2, [r3, #4]
 8009858:	687b      	ldr	r3, [r7, #4]
 800985a:	685b      	ldr	r3, [r3, #4]
 800985c:	441a      	add	r2, r3
 800985e:	68fb      	ldr	r3, [r7, #12]
 8009860:	605a      	str	r2, [r3, #4]
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	607b      	str	r3, [r7, #4]
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	60bb      	str	r3, [r7, #8]
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	685b      	ldr	r3, [r3, #4]
 800986e:	68ba      	ldr	r2, [r7, #8]
 8009870:	441a      	add	r2, r3
 8009872:	68fb      	ldr	r3, [r7, #12]
 8009874:	681b      	ldr	r3, [r3, #0]
 8009876:	429a      	cmp	r2, r3
 8009878:	d118      	bne.n	80098ac <prvInsertBlockIntoFreeList+0x88>
 800987a:	68fb      	ldr	r3, [r7, #12]
 800987c:	681a      	ldr	r2, [r3, #0]
 800987e:	4b15      	ldr	r3, [pc, #84]	@ (80098d4 <prvInsertBlockIntoFreeList+0xb0>)
 8009880:	681b      	ldr	r3, [r3, #0]
 8009882:	429a      	cmp	r2, r3
 8009884:	d00d      	beq.n	80098a2 <prvInsertBlockIntoFreeList+0x7e>
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	685a      	ldr	r2, [r3, #4]
 800988a:	68fb      	ldr	r3, [r7, #12]
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	685b      	ldr	r3, [r3, #4]
 8009890:	441a      	add	r2, r3
 8009892:	687b      	ldr	r3, [r7, #4]
 8009894:	605a      	str	r2, [r3, #4]
 8009896:	68fb      	ldr	r3, [r7, #12]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	681a      	ldr	r2, [r3, #0]
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	601a      	str	r2, [r3, #0]
 80098a0:	e008      	b.n	80098b4 <prvInsertBlockIntoFreeList+0x90>
 80098a2:	4b0c      	ldr	r3, [pc, #48]	@ (80098d4 <prvInsertBlockIntoFreeList+0xb0>)
 80098a4:	681a      	ldr	r2, [r3, #0]
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	601a      	str	r2, [r3, #0]
 80098aa:	e003      	b.n	80098b4 <prvInsertBlockIntoFreeList+0x90>
 80098ac:	68fb      	ldr	r3, [r7, #12]
 80098ae:	681a      	ldr	r2, [r3, #0]
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	601a      	str	r2, [r3, #0]
 80098b4:	68fa      	ldr	r2, [r7, #12]
 80098b6:	687b      	ldr	r3, [r7, #4]
 80098b8:	429a      	cmp	r2, r3
 80098ba:	d002      	beq.n	80098c2 <prvInsertBlockIntoFreeList+0x9e>
 80098bc:	68fb      	ldr	r3, [r7, #12]
 80098be:	687a      	ldr	r2, [r7, #4]
 80098c0:	601a      	str	r2, [r3, #0]
 80098c2:	bf00      	nop
 80098c4:	3714      	adds	r7, #20
 80098c6:	46bd      	mov	sp, r7
 80098c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098cc:	4770      	bx	lr
 80098ce:	bf00      	nop
 80098d0:	200042e4 	.word	0x200042e4
 80098d4:	200042ec 	.word	0x200042ec

080098d8 <siprintf>:
 80098d8:	b40e      	push	{r1, r2, r3}
 80098da:	b510      	push	{r4, lr}
 80098dc:	b09d      	sub	sp, #116	@ 0x74
 80098de:	ab1f      	add	r3, sp, #124	@ 0x7c
 80098e0:	9002      	str	r0, [sp, #8]
 80098e2:	9006      	str	r0, [sp, #24]
 80098e4:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80098e8:	480a      	ldr	r0, [pc, #40]	@ (8009914 <siprintf+0x3c>)
 80098ea:	9107      	str	r1, [sp, #28]
 80098ec:	9104      	str	r1, [sp, #16]
 80098ee:	490a      	ldr	r1, [pc, #40]	@ (8009918 <siprintf+0x40>)
 80098f0:	f853 2b04 	ldr.w	r2, [r3], #4
 80098f4:	9105      	str	r1, [sp, #20]
 80098f6:	2400      	movs	r4, #0
 80098f8:	a902      	add	r1, sp, #8
 80098fa:	6800      	ldr	r0, [r0, #0]
 80098fc:	9301      	str	r3, [sp, #4]
 80098fe:	941b      	str	r4, [sp, #108]	@ 0x6c
 8009900:	f000 f9a2 	bl	8009c48 <_svfiprintf_r>
 8009904:	9b02      	ldr	r3, [sp, #8]
 8009906:	701c      	strb	r4, [r3, #0]
 8009908:	b01d      	add	sp, #116	@ 0x74
 800990a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800990e:	b003      	add	sp, #12
 8009910:	4770      	bx	lr
 8009912:	bf00      	nop
 8009914:	20000014 	.word	0x20000014
 8009918:	ffff0208 	.word	0xffff0208

0800991c <memset>:
 800991c:	4402      	add	r2, r0
 800991e:	4603      	mov	r3, r0
 8009920:	4293      	cmp	r3, r2
 8009922:	d100      	bne.n	8009926 <memset+0xa>
 8009924:	4770      	bx	lr
 8009926:	f803 1b01 	strb.w	r1, [r3], #1
 800992a:	e7f9      	b.n	8009920 <memset+0x4>

0800992c <__errno>:
 800992c:	4b01      	ldr	r3, [pc, #4]	@ (8009934 <__errno+0x8>)
 800992e:	6818      	ldr	r0, [r3, #0]
 8009930:	4770      	bx	lr
 8009932:	bf00      	nop
 8009934:	20000014 	.word	0x20000014

08009938 <__libc_init_array>:
 8009938:	b570      	push	{r4, r5, r6, lr}
 800993a:	4d0d      	ldr	r5, [pc, #52]	@ (8009970 <__libc_init_array+0x38>)
 800993c:	4c0d      	ldr	r4, [pc, #52]	@ (8009974 <__libc_init_array+0x3c>)
 800993e:	1b64      	subs	r4, r4, r5
 8009940:	10a4      	asrs	r4, r4, #2
 8009942:	2600      	movs	r6, #0
 8009944:	42a6      	cmp	r6, r4
 8009946:	d109      	bne.n	800995c <__libc_init_array+0x24>
 8009948:	4d0b      	ldr	r5, [pc, #44]	@ (8009978 <__libc_init_array+0x40>)
 800994a:	4c0c      	ldr	r4, [pc, #48]	@ (800997c <__libc_init_array+0x44>)
 800994c:	f000 fc64 	bl	800a218 <_init>
 8009950:	1b64      	subs	r4, r4, r5
 8009952:	10a4      	asrs	r4, r4, #2
 8009954:	2600      	movs	r6, #0
 8009956:	42a6      	cmp	r6, r4
 8009958:	d105      	bne.n	8009966 <__libc_init_array+0x2e>
 800995a:	bd70      	pop	{r4, r5, r6, pc}
 800995c:	f855 3b04 	ldr.w	r3, [r5], #4
 8009960:	4798      	blx	r3
 8009962:	3601      	adds	r6, #1
 8009964:	e7ee      	b.n	8009944 <__libc_init_array+0xc>
 8009966:	f855 3b04 	ldr.w	r3, [r5], #4
 800996a:	4798      	blx	r3
 800996c:	3601      	adds	r6, #1
 800996e:	e7f2      	b.n	8009956 <__libc_init_array+0x1e>
 8009970:	0800b044 	.word	0x0800b044
 8009974:	0800b044 	.word	0x0800b044
 8009978:	0800b044 	.word	0x0800b044
 800997c:	0800b048 	.word	0x0800b048

08009980 <__retarget_lock_acquire_recursive>:
 8009980:	4770      	bx	lr

08009982 <__retarget_lock_release_recursive>:
 8009982:	4770      	bx	lr

08009984 <memcpy>:
 8009984:	440a      	add	r2, r1
 8009986:	4291      	cmp	r1, r2
 8009988:	f100 33ff 	add.w	r3, r0, #4294967295
 800998c:	d100      	bne.n	8009990 <memcpy+0xc>
 800998e:	4770      	bx	lr
 8009990:	b510      	push	{r4, lr}
 8009992:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009996:	f803 4f01 	strb.w	r4, [r3, #1]!
 800999a:	4291      	cmp	r1, r2
 800999c:	d1f9      	bne.n	8009992 <memcpy+0xe>
 800999e:	bd10      	pop	{r4, pc}

080099a0 <_free_r>:
 80099a0:	b538      	push	{r3, r4, r5, lr}
 80099a2:	4605      	mov	r5, r0
 80099a4:	2900      	cmp	r1, #0
 80099a6:	d041      	beq.n	8009a2c <_free_r+0x8c>
 80099a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80099ac:	1f0c      	subs	r4, r1, #4
 80099ae:	2b00      	cmp	r3, #0
 80099b0:	bfb8      	it	lt
 80099b2:	18e4      	addlt	r4, r4, r3
 80099b4:	f000 f8e0 	bl	8009b78 <__malloc_lock>
 80099b8:	4a1d      	ldr	r2, [pc, #116]	@ (8009a30 <_free_r+0x90>)
 80099ba:	6813      	ldr	r3, [r2, #0]
 80099bc:	b933      	cbnz	r3, 80099cc <_free_r+0x2c>
 80099be:	6063      	str	r3, [r4, #4]
 80099c0:	6014      	str	r4, [r2, #0]
 80099c2:	4628      	mov	r0, r5
 80099c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80099c8:	f000 b8dc 	b.w	8009b84 <__malloc_unlock>
 80099cc:	42a3      	cmp	r3, r4
 80099ce:	d908      	bls.n	80099e2 <_free_r+0x42>
 80099d0:	6820      	ldr	r0, [r4, #0]
 80099d2:	1821      	adds	r1, r4, r0
 80099d4:	428b      	cmp	r3, r1
 80099d6:	bf01      	itttt	eq
 80099d8:	6819      	ldreq	r1, [r3, #0]
 80099da:	685b      	ldreq	r3, [r3, #4]
 80099dc:	1809      	addeq	r1, r1, r0
 80099de:	6021      	streq	r1, [r4, #0]
 80099e0:	e7ed      	b.n	80099be <_free_r+0x1e>
 80099e2:	461a      	mov	r2, r3
 80099e4:	685b      	ldr	r3, [r3, #4]
 80099e6:	b10b      	cbz	r3, 80099ec <_free_r+0x4c>
 80099e8:	42a3      	cmp	r3, r4
 80099ea:	d9fa      	bls.n	80099e2 <_free_r+0x42>
 80099ec:	6811      	ldr	r1, [r2, #0]
 80099ee:	1850      	adds	r0, r2, r1
 80099f0:	42a0      	cmp	r0, r4
 80099f2:	d10b      	bne.n	8009a0c <_free_r+0x6c>
 80099f4:	6820      	ldr	r0, [r4, #0]
 80099f6:	4401      	add	r1, r0
 80099f8:	1850      	adds	r0, r2, r1
 80099fa:	4283      	cmp	r3, r0
 80099fc:	6011      	str	r1, [r2, #0]
 80099fe:	d1e0      	bne.n	80099c2 <_free_r+0x22>
 8009a00:	6818      	ldr	r0, [r3, #0]
 8009a02:	685b      	ldr	r3, [r3, #4]
 8009a04:	6053      	str	r3, [r2, #4]
 8009a06:	4408      	add	r0, r1
 8009a08:	6010      	str	r0, [r2, #0]
 8009a0a:	e7da      	b.n	80099c2 <_free_r+0x22>
 8009a0c:	d902      	bls.n	8009a14 <_free_r+0x74>
 8009a0e:	230c      	movs	r3, #12
 8009a10:	602b      	str	r3, [r5, #0]
 8009a12:	e7d6      	b.n	80099c2 <_free_r+0x22>
 8009a14:	6820      	ldr	r0, [r4, #0]
 8009a16:	1821      	adds	r1, r4, r0
 8009a18:	428b      	cmp	r3, r1
 8009a1a:	bf04      	itt	eq
 8009a1c:	6819      	ldreq	r1, [r3, #0]
 8009a1e:	685b      	ldreq	r3, [r3, #4]
 8009a20:	6063      	str	r3, [r4, #4]
 8009a22:	bf04      	itt	eq
 8009a24:	1809      	addeq	r1, r1, r0
 8009a26:	6021      	streq	r1, [r4, #0]
 8009a28:	6054      	str	r4, [r2, #4]
 8009a2a:	e7ca      	b.n	80099c2 <_free_r+0x22>
 8009a2c:	bd38      	pop	{r3, r4, r5, pc}
 8009a2e:	bf00      	nop
 8009a30:	20004448 	.word	0x20004448

08009a34 <sbrk_aligned>:
 8009a34:	b570      	push	{r4, r5, r6, lr}
 8009a36:	4e0f      	ldr	r6, [pc, #60]	@ (8009a74 <sbrk_aligned+0x40>)
 8009a38:	460c      	mov	r4, r1
 8009a3a:	6831      	ldr	r1, [r6, #0]
 8009a3c:	4605      	mov	r5, r0
 8009a3e:	b911      	cbnz	r1, 8009a46 <sbrk_aligned+0x12>
 8009a40:	f000 fba4 	bl	800a18c <_sbrk_r>
 8009a44:	6030      	str	r0, [r6, #0]
 8009a46:	4621      	mov	r1, r4
 8009a48:	4628      	mov	r0, r5
 8009a4a:	f000 fb9f 	bl	800a18c <_sbrk_r>
 8009a4e:	1c43      	adds	r3, r0, #1
 8009a50:	d103      	bne.n	8009a5a <sbrk_aligned+0x26>
 8009a52:	f04f 34ff 	mov.w	r4, #4294967295
 8009a56:	4620      	mov	r0, r4
 8009a58:	bd70      	pop	{r4, r5, r6, pc}
 8009a5a:	1cc4      	adds	r4, r0, #3
 8009a5c:	f024 0403 	bic.w	r4, r4, #3
 8009a60:	42a0      	cmp	r0, r4
 8009a62:	d0f8      	beq.n	8009a56 <sbrk_aligned+0x22>
 8009a64:	1a21      	subs	r1, r4, r0
 8009a66:	4628      	mov	r0, r5
 8009a68:	f000 fb90 	bl	800a18c <_sbrk_r>
 8009a6c:	3001      	adds	r0, #1
 8009a6e:	d1f2      	bne.n	8009a56 <sbrk_aligned+0x22>
 8009a70:	e7ef      	b.n	8009a52 <sbrk_aligned+0x1e>
 8009a72:	bf00      	nop
 8009a74:	20004444 	.word	0x20004444

08009a78 <_malloc_r>:
 8009a78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a7c:	1ccd      	adds	r5, r1, #3
 8009a7e:	f025 0503 	bic.w	r5, r5, #3
 8009a82:	3508      	adds	r5, #8
 8009a84:	2d0c      	cmp	r5, #12
 8009a86:	bf38      	it	cc
 8009a88:	250c      	movcc	r5, #12
 8009a8a:	2d00      	cmp	r5, #0
 8009a8c:	4606      	mov	r6, r0
 8009a8e:	db01      	blt.n	8009a94 <_malloc_r+0x1c>
 8009a90:	42a9      	cmp	r1, r5
 8009a92:	d904      	bls.n	8009a9e <_malloc_r+0x26>
 8009a94:	230c      	movs	r3, #12
 8009a96:	6033      	str	r3, [r6, #0]
 8009a98:	2000      	movs	r0, #0
 8009a9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009a9e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8009b74 <_malloc_r+0xfc>
 8009aa2:	f000 f869 	bl	8009b78 <__malloc_lock>
 8009aa6:	f8d8 3000 	ldr.w	r3, [r8]
 8009aaa:	461c      	mov	r4, r3
 8009aac:	bb44      	cbnz	r4, 8009b00 <_malloc_r+0x88>
 8009aae:	4629      	mov	r1, r5
 8009ab0:	4630      	mov	r0, r6
 8009ab2:	f7ff ffbf 	bl	8009a34 <sbrk_aligned>
 8009ab6:	1c43      	adds	r3, r0, #1
 8009ab8:	4604      	mov	r4, r0
 8009aba:	d158      	bne.n	8009b6e <_malloc_r+0xf6>
 8009abc:	f8d8 4000 	ldr.w	r4, [r8]
 8009ac0:	4627      	mov	r7, r4
 8009ac2:	2f00      	cmp	r7, #0
 8009ac4:	d143      	bne.n	8009b4e <_malloc_r+0xd6>
 8009ac6:	2c00      	cmp	r4, #0
 8009ac8:	d04b      	beq.n	8009b62 <_malloc_r+0xea>
 8009aca:	6823      	ldr	r3, [r4, #0]
 8009acc:	4639      	mov	r1, r7
 8009ace:	4630      	mov	r0, r6
 8009ad0:	eb04 0903 	add.w	r9, r4, r3
 8009ad4:	f000 fb5a 	bl	800a18c <_sbrk_r>
 8009ad8:	4581      	cmp	r9, r0
 8009ada:	d142      	bne.n	8009b62 <_malloc_r+0xea>
 8009adc:	6821      	ldr	r1, [r4, #0]
 8009ade:	1a6d      	subs	r5, r5, r1
 8009ae0:	4629      	mov	r1, r5
 8009ae2:	4630      	mov	r0, r6
 8009ae4:	f7ff ffa6 	bl	8009a34 <sbrk_aligned>
 8009ae8:	3001      	adds	r0, #1
 8009aea:	d03a      	beq.n	8009b62 <_malloc_r+0xea>
 8009aec:	6823      	ldr	r3, [r4, #0]
 8009aee:	442b      	add	r3, r5
 8009af0:	6023      	str	r3, [r4, #0]
 8009af2:	f8d8 3000 	ldr.w	r3, [r8]
 8009af6:	685a      	ldr	r2, [r3, #4]
 8009af8:	bb62      	cbnz	r2, 8009b54 <_malloc_r+0xdc>
 8009afa:	f8c8 7000 	str.w	r7, [r8]
 8009afe:	e00f      	b.n	8009b20 <_malloc_r+0xa8>
 8009b00:	6822      	ldr	r2, [r4, #0]
 8009b02:	1b52      	subs	r2, r2, r5
 8009b04:	d420      	bmi.n	8009b48 <_malloc_r+0xd0>
 8009b06:	2a0b      	cmp	r2, #11
 8009b08:	d917      	bls.n	8009b3a <_malloc_r+0xc2>
 8009b0a:	1961      	adds	r1, r4, r5
 8009b0c:	42a3      	cmp	r3, r4
 8009b0e:	6025      	str	r5, [r4, #0]
 8009b10:	bf18      	it	ne
 8009b12:	6059      	strne	r1, [r3, #4]
 8009b14:	6863      	ldr	r3, [r4, #4]
 8009b16:	bf08      	it	eq
 8009b18:	f8c8 1000 	streq.w	r1, [r8]
 8009b1c:	5162      	str	r2, [r4, r5]
 8009b1e:	604b      	str	r3, [r1, #4]
 8009b20:	4630      	mov	r0, r6
 8009b22:	f000 f82f 	bl	8009b84 <__malloc_unlock>
 8009b26:	f104 000b 	add.w	r0, r4, #11
 8009b2a:	1d23      	adds	r3, r4, #4
 8009b2c:	f020 0007 	bic.w	r0, r0, #7
 8009b30:	1ac2      	subs	r2, r0, r3
 8009b32:	bf1c      	itt	ne
 8009b34:	1a1b      	subne	r3, r3, r0
 8009b36:	50a3      	strne	r3, [r4, r2]
 8009b38:	e7af      	b.n	8009a9a <_malloc_r+0x22>
 8009b3a:	6862      	ldr	r2, [r4, #4]
 8009b3c:	42a3      	cmp	r3, r4
 8009b3e:	bf0c      	ite	eq
 8009b40:	f8c8 2000 	streq.w	r2, [r8]
 8009b44:	605a      	strne	r2, [r3, #4]
 8009b46:	e7eb      	b.n	8009b20 <_malloc_r+0xa8>
 8009b48:	4623      	mov	r3, r4
 8009b4a:	6864      	ldr	r4, [r4, #4]
 8009b4c:	e7ae      	b.n	8009aac <_malloc_r+0x34>
 8009b4e:	463c      	mov	r4, r7
 8009b50:	687f      	ldr	r7, [r7, #4]
 8009b52:	e7b6      	b.n	8009ac2 <_malloc_r+0x4a>
 8009b54:	461a      	mov	r2, r3
 8009b56:	685b      	ldr	r3, [r3, #4]
 8009b58:	42a3      	cmp	r3, r4
 8009b5a:	d1fb      	bne.n	8009b54 <_malloc_r+0xdc>
 8009b5c:	2300      	movs	r3, #0
 8009b5e:	6053      	str	r3, [r2, #4]
 8009b60:	e7de      	b.n	8009b20 <_malloc_r+0xa8>
 8009b62:	230c      	movs	r3, #12
 8009b64:	6033      	str	r3, [r6, #0]
 8009b66:	4630      	mov	r0, r6
 8009b68:	f000 f80c 	bl	8009b84 <__malloc_unlock>
 8009b6c:	e794      	b.n	8009a98 <_malloc_r+0x20>
 8009b6e:	6005      	str	r5, [r0, #0]
 8009b70:	e7d6      	b.n	8009b20 <_malloc_r+0xa8>
 8009b72:	bf00      	nop
 8009b74:	20004448 	.word	0x20004448

08009b78 <__malloc_lock>:
 8009b78:	4801      	ldr	r0, [pc, #4]	@ (8009b80 <__malloc_lock+0x8>)
 8009b7a:	f7ff bf01 	b.w	8009980 <__retarget_lock_acquire_recursive>
 8009b7e:	bf00      	nop
 8009b80:	20004440 	.word	0x20004440

08009b84 <__malloc_unlock>:
 8009b84:	4801      	ldr	r0, [pc, #4]	@ (8009b8c <__malloc_unlock+0x8>)
 8009b86:	f7ff befc 	b.w	8009982 <__retarget_lock_release_recursive>
 8009b8a:	bf00      	nop
 8009b8c:	20004440 	.word	0x20004440

08009b90 <__ssputs_r>:
 8009b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b94:	688e      	ldr	r6, [r1, #8]
 8009b96:	461f      	mov	r7, r3
 8009b98:	42be      	cmp	r6, r7
 8009b9a:	680b      	ldr	r3, [r1, #0]
 8009b9c:	4682      	mov	sl, r0
 8009b9e:	460c      	mov	r4, r1
 8009ba0:	4690      	mov	r8, r2
 8009ba2:	d82d      	bhi.n	8009c00 <__ssputs_r+0x70>
 8009ba4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8009ba8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8009bac:	d026      	beq.n	8009bfc <__ssputs_r+0x6c>
 8009bae:	6965      	ldr	r5, [r4, #20]
 8009bb0:	6909      	ldr	r1, [r1, #16]
 8009bb2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009bb6:	eba3 0901 	sub.w	r9, r3, r1
 8009bba:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8009bbe:	1c7b      	adds	r3, r7, #1
 8009bc0:	444b      	add	r3, r9
 8009bc2:	106d      	asrs	r5, r5, #1
 8009bc4:	429d      	cmp	r5, r3
 8009bc6:	bf38      	it	cc
 8009bc8:	461d      	movcc	r5, r3
 8009bca:	0553      	lsls	r3, r2, #21
 8009bcc:	d527      	bpl.n	8009c1e <__ssputs_r+0x8e>
 8009bce:	4629      	mov	r1, r5
 8009bd0:	f7ff ff52 	bl	8009a78 <_malloc_r>
 8009bd4:	4606      	mov	r6, r0
 8009bd6:	b360      	cbz	r0, 8009c32 <__ssputs_r+0xa2>
 8009bd8:	6921      	ldr	r1, [r4, #16]
 8009bda:	464a      	mov	r2, r9
 8009bdc:	f7ff fed2 	bl	8009984 <memcpy>
 8009be0:	89a3      	ldrh	r3, [r4, #12]
 8009be2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8009be6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009bea:	81a3      	strh	r3, [r4, #12]
 8009bec:	6126      	str	r6, [r4, #16]
 8009bee:	6165      	str	r5, [r4, #20]
 8009bf0:	444e      	add	r6, r9
 8009bf2:	eba5 0509 	sub.w	r5, r5, r9
 8009bf6:	6026      	str	r6, [r4, #0]
 8009bf8:	60a5      	str	r5, [r4, #8]
 8009bfa:	463e      	mov	r6, r7
 8009bfc:	42be      	cmp	r6, r7
 8009bfe:	d900      	bls.n	8009c02 <__ssputs_r+0x72>
 8009c00:	463e      	mov	r6, r7
 8009c02:	6820      	ldr	r0, [r4, #0]
 8009c04:	4632      	mov	r2, r6
 8009c06:	4641      	mov	r1, r8
 8009c08:	f000 faa6 	bl	800a158 <memmove>
 8009c0c:	68a3      	ldr	r3, [r4, #8]
 8009c0e:	1b9b      	subs	r3, r3, r6
 8009c10:	60a3      	str	r3, [r4, #8]
 8009c12:	6823      	ldr	r3, [r4, #0]
 8009c14:	4433      	add	r3, r6
 8009c16:	6023      	str	r3, [r4, #0]
 8009c18:	2000      	movs	r0, #0
 8009c1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c1e:	462a      	mov	r2, r5
 8009c20:	f000 fac4 	bl	800a1ac <_realloc_r>
 8009c24:	4606      	mov	r6, r0
 8009c26:	2800      	cmp	r0, #0
 8009c28:	d1e0      	bne.n	8009bec <__ssputs_r+0x5c>
 8009c2a:	6921      	ldr	r1, [r4, #16]
 8009c2c:	4650      	mov	r0, sl
 8009c2e:	f7ff feb7 	bl	80099a0 <_free_r>
 8009c32:	230c      	movs	r3, #12
 8009c34:	f8ca 3000 	str.w	r3, [sl]
 8009c38:	89a3      	ldrh	r3, [r4, #12]
 8009c3a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009c3e:	81a3      	strh	r3, [r4, #12]
 8009c40:	f04f 30ff 	mov.w	r0, #4294967295
 8009c44:	e7e9      	b.n	8009c1a <__ssputs_r+0x8a>
	...

08009c48 <_svfiprintf_r>:
 8009c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c4c:	4698      	mov	r8, r3
 8009c4e:	898b      	ldrh	r3, [r1, #12]
 8009c50:	061b      	lsls	r3, r3, #24
 8009c52:	b09d      	sub	sp, #116	@ 0x74
 8009c54:	4607      	mov	r7, r0
 8009c56:	460d      	mov	r5, r1
 8009c58:	4614      	mov	r4, r2
 8009c5a:	d510      	bpl.n	8009c7e <_svfiprintf_r+0x36>
 8009c5c:	690b      	ldr	r3, [r1, #16]
 8009c5e:	b973      	cbnz	r3, 8009c7e <_svfiprintf_r+0x36>
 8009c60:	2140      	movs	r1, #64	@ 0x40
 8009c62:	f7ff ff09 	bl	8009a78 <_malloc_r>
 8009c66:	6028      	str	r0, [r5, #0]
 8009c68:	6128      	str	r0, [r5, #16]
 8009c6a:	b930      	cbnz	r0, 8009c7a <_svfiprintf_r+0x32>
 8009c6c:	230c      	movs	r3, #12
 8009c6e:	603b      	str	r3, [r7, #0]
 8009c70:	f04f 30ff 	mov.w	r0, #4294967295
 8009c74:	b01d      	add	sp, #116	@ 0x74
 8009c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c7a:	2340      	movs	r3, #64	@ 0x40
 8009c7c:	616b      	str	r3, [r5, #20]
 8009c7e:	2300      	movs	r3, #0
 8009c80:	9309      	str	r3, [sp, #36]	@ 0x24
 8009c82:	2320      	movs	r3, #32
 8009c84:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8009c88:	f8cd 800c 	str.w	r8, [sp, #12]
 8009c8c:	2330      	movs	r3, #48	@ 0x30
 8009c8e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8009e2c <_svfiprintf_r+0x1e4>
 8009c92:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8009c96:	f04f 0901 	mov.w	r9, #1
 8009c9a:	4623      	mov	r3, r4
 8009c9c:	469a      	mov	sl, r3
 8009c9e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009ca2:	b10a      	cbz	r2, 8009ca8 <_svfiprintf_r+0x60>
 8009ca4:	2a25      	cmp	r2, #37	@ 0x25
 8009ca6:	d1f9      	bne.n	8009c9c <_svfiprintf_r+0x54>
 8009ca8:	ebba 0b04 	subs.w	fp, sl, r4
 8009cac:	d00b      	beq.n	8009cc6 <_svfiprintf_r+0x7e>
 8009cae:	465b      	mov	r3, fp
 8009cb0:	4622      	mov	r2, r4
 8009cb2:	4629      	mov	r1, r5
 8009cb4:	4638      	mov	r0, r7
 8009cb6:	f7ff ff6b 	bl	8009b90 <__ssputs_r>
 8009cba:	3001      	adds	r0, #1
 8009cbc:	f000 80a7 	beq.w	8009e0e <_svfiprintf_r+0x1c6>
 8009cc0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009cc2:	445a      	add	r2, fp
 8009cc4:	9209      	str	r2, [sp, #36]	@ 0x24
 8009cc6:	f89a 3000 	ldrb.w	r3, [sl]
 8009cca:	2b00      	cmp	r3, #0
 8009ccc:	f000 809f 	beq.w	8009e0e <_svfiprintf_r+0x1c6>
 8009cd0:	2300      	movs	r3, #0
 8009cd2:	f04f 32ff 	mov.w	r2, #4294967295
 8009cd6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009cda:	f10a 0a01 	add.w	sl, sl, #1
 8009cde:	9304      	str	r3, [sp, #16]
 8009ce0:	9307      	str	r3, [sp, #28]
 8009ce2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8009ce6:	931a      	str	r3, [sp, #104]	@ 0x68
 8009ce8:	4654      	mov	r4, sl
 8009cea:	2205      	movs	r2, #5
 8009cec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009cf0:	484e      	ldr	r0, [pc, #312]	@ (8009e2c <_svfiprintf_r+0x1e4>)
 8009cf2:	f7f6 fa6d 	bl	80001d0 <memchr>
 8009cf6:	9a04      	ldr	r2, [sp, #16]
 8009cf8:	b9d8      	cbnz	r0, 8009d32 <_svfiprintf_r+0xea>
 8009cfa:	06d0      	lsls	r0, r2, #27
 8009cfc:	bf44      	itt	mi
 8009cfe:	2320      	movmi	r3, #32
 8009d00:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009d04:	0711      	lsls	r1, r2, #28
 8009d06:	bf44      	itt	mi
 8009d08:	232b      	movmi	r3, #43	@ 0x2b
 8009d0a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8009d0e:	f89a 3000 	ldrb.w	r3, [sl]
 8009d12:	2b2a      	cmp	r3, #42	@ 0x2a
 8009d14:	d015      	beq.n	8009d42 <_svfiprintf_r+0xfa>
 8009d16:	9a07      	ldr	r2, [sp, #28]
 8009d18:	4654      	mov	r4, sl
 8009d1a:	2000      	movs	r0, #0
 8009d1c:	f04f 0c0a 	mov.w	ip, #10
 8009d20:	4621      	mov	r1, r4
 8009d22:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009d26:	3b30      	subs	r3, #48	@ 0x30
 8009d28:	2b09      	cmp	r3, #9
 8009d2a:	d94b      	bls.n	8009dc4 <_svfiprintf_r+0x17c>
 8009d2c:	b1b0      	cbz	r0, 8009d5c <_svfiprintf_r+0x114>
 8009d2e:	9207      	str	r2, [sp, #28]
 8009d30:	e014      	b.n	8009d5c <_svfiprintf_r+0x114>
 8009d32:	eba0 0308 	sub.w	r3, r0, r8
 8009d36:	fa09 f303 	lsl.w	r3, r9, r3
 8009d3a:	4313      	orrs	r3, r2
 8009d3c:	9304      	str	r3, [sp, #16]
 8009d3e:	46a2      	mov	sl, r4
 8009d40:	e7d2      	b.n	8009ce8 <_svfiprintf_r+0xa0>
 8009d42:	9b03      	ldr	r3, [sp, #12]
 8009d44:	1d19      	adds	r1, r3, #4
 8009d46:	681b      	ldr	r3, [r3, #0]
 8009d48:	9103      	str	r1, [sp, #12]
 8009d4a:	2b00      	cmp	r3, #0
 8009d4c:	bfbb      	ittet	lt
 8009d4e:	425b      	neglt	r3, r3
 8009d50:	f042 0202 	orrlt.w	r2, r2, #2
 8009d54:	9307      	strge	r3, [sp, #28]
 8009d56:	9307      	strlt	r3, [sp, #28]
 8009d58:	bfb8      	it	lt
 8009d5a:	9204      	strlt	r2, [sp, #16]
 8009d5c:	7823      	ldrb	r3, [r4, #0]
 8009d5e:	2b2e      	cmp	r3, #46	@ 0x2e
 8009d60:	d10a      	bne.n	8009d78 <_svfiprintf_r+0x130>
 8009d62:	7863      	ldrb	r3, [r4, #1]
 8009d64:	2b2a      	cmp	r3, #42	@ 0x2a
 8009d66:	d132      	bne.n	8009dce <_svfiprintf_r+0x186>
 8009d68:	9b03      	ldr	r3, [sp, #12]
 8009d6a:	1d1a      	adds	r2, r3, #4
 8009d6c:	681b      	ldr	r3, [r3, #0]
 8009d6e:	9203      	str	r2, [sp, #12]
 8009d70:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8009d74:	3402      	adds	r4, #2
 8009d76:	9305      	str	r3, [sp, #20]
 8009d78:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8009e3c <_svfiprintf_r+0x1f4>
 8009d7c:	7821      	ldrb	r1, [r4, #0]
 8009d7e:	2203      	movs	r2, #3
 8009d80:	4650      	mov	r0, sl
 8009d82:	f7f6 fa25 	bl	80001d0 <memchr>
 8009d86:	b138      	cbz	r0, 8009d98 <_svfiprintf_r+0x150>
 8009d88:	9b04      	ldr	r3, [sp, #16]
 8009d8a:	eba0 000a 	sub.w	r0, r0, sl
 8009d8e:	2240      	movs	r2, #64	@ 0x40
 8009d90:	4082      	lsls	r2, r0
 8009d92:	4313      	orrs	r3, r2
 8009d94:	3401      	adds	r4, #1
 8009d96:	9304      	str	r3, [sp, #16]
 8009d98:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009d9c:	4824      	ldr	r0, [pc, #144]	@ (8009e30 <_svfiprintf_r+0x1e8>)
 8009d9e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8009da2:	2206      	movs	r2, #6
 8009da4:	f7f6 fa14 	bl	80001d0 <memchr>
 8009da8:	2800      	cmp	r0, #0
 8009daa:	d036      	beq.n	8009e1a <_svfiprintf_r+0x1d2>
 8009dac:	4b21      	ldr	r3, [pc, #132]	@ (8009e34 <_svfiprintf_r+0x1ec>)
 8009dae:	bb1b      	cbnz	r3, 8009df8 <_svfiprintf_r+0x1b0>
 8009db0:	9b03      	ldr	r3, [sp, #12]
 8009db2:	3307      	adds	r3, #7
 8009db4:	f023 0307 	bic.w	r3, r3, #7
 8009db8:	3308      	adds	r3, #8
 8009dba:	9303      	str	r3, [sp, #12]
 8009dbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009dbe:	4433      	add	r3, r6
 8009dc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8009dc2:	e76a      	b.n	8009c9a <_svfiprintf_r+0x52>
 8009dc4:	fb0c 3202 	mla	r2, ip, r2, r3
 8009dc8:	460c      	mov	r4, r1
 8009dca:	2001      	movs	r0, #1
 8009dcc:	e7a8      	b.n	8009d20 <_svfiprintf_r+0xd8>
 8009dce:	2300      	movs	r3, #0
 8009dd0:	3401      	adds	r4, #1
 8009dd2:	9305      	str	r3, [sp, #20]
 8009dd4:	4619      	mov	r1, r3
 8009dd6:	f04f 0c0a 	mov.w	ip, #10
 8009dda:	4620      	mov	r0, r4
 8009ddc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009de0:	3a30      	subs	r2, #48	@ 0x30
 8009de2:	2a09      	cmp	r2, #9
 8009de4:	d903      	bls.n	8009dee <_svfiprintf_r+0x1a6>
 8009de6:	2b00      	cmp	r3, #0
 8009de8:	d0c6      	beq.n	8009d78 <_svfiprintf_r+0x130>
 8009dea:	9105      	str	r1, [sp, #20]
 8009dec:	e7c4      	b.n	8009d78 <_svfiprintf_r+0x130>
 8009dee:	fb0c 2101 	mla	r1, ip, r1, r2
 8009df2:	4604      	mov	r4, r0
 8009df4:	2301      	movs	r3, #1
 8009df6:	e7f0      	b.n	8009dda <_svfiprintf_r+0x192>
 8009df8:	ab03      	add	r3, sp, #12
 8009dfa:	9300      	str	r3, [sp, #0]
 8009dfc:	462a      	mov	r2, r5
 8009dfe:	4b0e      	ldr	r3, [pc, #56]	@ (8009e38 <_svfiprintf_r+0x1f0>)
 8009e00:	a904      	add	r1, sp, #16
 8009e02:	4638      	mov	r0, r7
 8009e04:	f3af 8000 	nop.w
 8009e08:	1c42      	adds	r2, r0, #1
 8009e0a:	4606      	mov	r6, r0
 8009e0c:	d1d6      	bne.n	8009dbc <_svfiprintf_r+0x174>
 8009e0e:	89ab      	ldrh	r3, [r5, #12]
 8009e10:	065b      	lsls	r3, r3, #25
 8009e12:	f53f af2d 	bmi.w	8009c70 <_svfiprintf_r+0x28>
 8009e16:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009e18:	e72c      	b.n	8009c74 <_svfiprintf_r+0x2c>
 8009e1a:	ab03      	add	r3, sp, #12
 8009e1c:	9300      	str	r3, [sp, #0]
 8009e1e:	462a      	mov	r2, r5
 8009e20:	4b05      	ldr	r3, [pc, #20]	@ (8009e38 <_svfiprintf_r+0x1f0>)
 8009e22:	a904      	add	r1, sp, #16
 8009e24:	4638      	mov	r0, r7
 8009e26:	f000 f879 	bl	8009f1c <_printf_i>
 8009e2a:	e7ed      	b.n	8009e08 <_svfiprintf_r+0x1c0>
 8009e2c:	0800b008 	.word	0x0800b008
 8009e30:	0800b012 	.word	0x0800b012
 8009e34:	00000000 	.word	0x00000000
 8009e38:	08009b91 	.word	0x08009b91
 8009e3c:	0800b00e 	.word	0x0800b00e

08009e40 <_printf_common>:
 8009e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e44:	4616      	mov	r6, r2
 8009e46:	4698      	mov	r8, r3
 8009e48:	688a      	ldr	r2, [r1, #8]
 8009e4a:	690b      	ldr	r3, [r1, #16]
 8009e4c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8009e50:	4293      	cmp	r3, r2
 8009e52:	bfb8      	it	lt
 8009e54:	4613      	movlt	r3, r2
 8009e56:	6033      	str	r3, [r6, #0]
 8009e58:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8009e5c:	4607      	mov	r7, r0
 8009e5e:	460c      	mov	r4, r1
 8009e60:	b10a      	cbz	r2, 8009e66 <_printf_common+0x26>
 8009e62:	3301      	adds	r3, #1
 8009e64:	6033      	str	r3, [r6, #0]
 8009e66:	6823      	ldr	r3, [r4, #0]
 8009e68:	0699      	lsls	r1, r3, #26
 8009e6a:	bf42      	ittt	mi
 8009e6c:	6833      	ldrmi	r3, [r6, #0]
 8009e6e:	3302      	addmi	r3, #2
 8009e70:	6033      	strmi	r3, [r6, #0]
 8009e72:	6825      	ldr	r5, [r4, #0]
 8009e74:	f015 0506 	ands.w	r5, r5, #6
 8009e78:	d106      	bne.n	8009e88 <_printf_common+0x48>
 8009e7a:	f104 0a19 	add.w	sl, r4, #25
 8009e7e:	68e3      	ldr	r3, [r4, #12]
 8009e80:	6832      	ldr	r2, [r6, #0]
 8009e82:	1a9b      	subs	r3, r3, r2
 8009e84:	42ab      	cmp	r3, r5
 8009e86:	dc26      	bgt.n	8009ed6 <_printf_common+0x96>
 8009e88:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8009e8c:	6822      	ldr	r2, [r4, #0]
 8009e8e:	3b00      	subs	r3, #0
 8009e90:	bf18      	it	ne
 8009e92:	2301      	movne	r3, #1
 8009e94:	0692      	lsls	r2, r2, #26
 8009e96:	d42b      	bmi.n	8009ef0 <_printf_common+0xb0>
 8009e98:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8009e9c:	4641      	mov	r1, r8
 8009e9e:	4638      	mov	r0, r7
 8009ea0:	47c8      	blx	r9
 8009ea2:	3001      	adds	r0, #1
 8009ea4:	d01e      	beq.n	8009ee4 <_printf_common+0xa4>
 8009ea6:	6823      	ldr	r3, [r4, #0]
 8009ea8:	6922      	ldr	r2, [r4, #16]
 8009eaa:	f003 0306 	and.w	r3, r3, #6
 8009eae:	2b04      	cmp	r3, #4
 8009eb0:	bf02      	ittt	eq
 8009eb2:	68e5      	ldreq	r5, [r4, #12]
 8009eb4:	6833      	ldreq	r3, [r6, #0]
 8009eb6:	1aed      	subeq	r5, r5, r3
 8009eb8:	68a3      	ldr	r3, [r4, #8]
 8009eba:	bf0c      	ite	eq
 8009ebc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8009ec0:	2500      	movne	r5, #0
 8009ec2:	4293      	cmp	r3, r2
 8009ec4:	bfc4      	itt	gt
 8009ec6:	1a9b      	subgt	r3, r3, r2
 8009ec8:	18ed      	addgt	r5, r5, r3
 8009eca:	2600      	movs	r6, #0
 8009ecc:	341a      	adds	r4, #26
 8009ece:	42b5      	cmp	r5, r6
 8009ed0:	d11a      	bne.n	8009f08 <_printf_common+0xc8>
 8009ed2:	2000      	movs	r0, #0
 8009ed4:	e008      	b.n	8009ee8 <_printf_common+0xa8>
 8009ed6:	2301      	movs	r3, #1
 8009ed8:	4652      	mov	r2, sl
 8009eda:	4641      	mov	r1, r8
 8009edc:	4638      	mov	r0, r7
 8009ede:	47c8      	blx	r9
 8009ee0:	3001      	adds	r0, #1
 8009ee2:	d103      	bne.n	8009eec <_printf_common+0xac>
 8009ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8009ee8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009eec:	3501      	adds	r5, #1
 8009eee:	e7c6      	b.n	8009e7e <_printf_common+0x3e>
 8009ef0:	18e1      	adds	r1, r4, r3
 8009ef2:	1c5a      	adds	r2, r3, #1
 8009ef4:	2030      	movs	r0, #48	@ 0x30
 8009ef6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8009efa:	4422      	add	r2, r4
 8009efc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8009f00:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8009f04:	3302      	adds	r3, #2
 8009f06:	e7c7      	b.n	8009e98 <_printf_common+0x58>
 8009f08:	2301      	movs	r3, #1
 8009f0a:	4622      	mov	r2, r4
 8009f0c:	4641      	mov	r1, r8
 8009f0e:	4638      	mov	r0, r7
 8009f10:	47c8      	blx	r9
 8009f12:	3001      	adds	r0, #1
 8009f14:	d0e6      	beq.n	8009ee4 <_printf_common+0xa4>
 8009f16:	3601      	adds	r6, #1
 8009f18:	e7d9      	b.n	8009ece <_printf_common+0x8e>
	...

08009f1c <_printf_i>:
 8009f1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009f20:	7e0f      	ldrb	r7, [r1, #24]
 8009f22:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8009f24:	2f78      	cmp	r7, #120	@ 0x78
 8009f26:	4691      	mov	r9, r2
 8009f28:	4680      	mov	r8, r0
 8009f2a:	460c      	mov	r4, r1
 8009f2c:	469a      	mov	sl, r3
 8009f2e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8009f32:	d807      	bhi.n	8009f44 <_printf_i+0x28>
 8009f34:	2f62      	cmp	r7, #98	@ 0x62
 8009f36:	d80a      	bhi.n	8009f4e <_printf_i+0x32>
 8009f38:	2f00      	cmp	r7, #0
 8009f3a:	f000 80d1 	beq.w	800a0e0 <_printf_i+0x1c4>
 8009f3e:	2f58      	cmp	r7, #88	@ 0x58
 8009f40:	f000 80b8 	beq.w	800a0b4 <_printf_i+0x198>
 8009f44:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8009f48:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8009f4c:	e03a      	b.n	8009fc4 <_printf_i+0xa8>
 8009f4e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8009f52:	2b15      	cmp	r3, #21
 8009f54:	d8f6      	bhi.n	8009f44 <_printf_i+0x28>
 8009f56:	a101      	add	r1, pc, #4	@ (adr r1, 8009f5c <_printf_i+0x40>)
 8009f58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009f5c:	08009fb5 	.word	0x08009fb5
 8009f60:	08009fc9 	.word	0x08009fc9
 8009f64:	08009f45 	.word	0x08009f45
 8009f68:	08009f45 	.word	0x08009f45
 8009f6c:	08009f45 	.word	0x08009f45
 8009f70:	08009f45 	.word	0x08009f45
 8009f74:	08009fc9 	.word	0x08009fc9
 8009f78:	08009f45 	.word	0x08009f45
 8009f7c:	08009f45 	.word	0x08009f45
 8009f80:	08009f45 	.word	0x08009f45
 8009f84:	08009f45 	.word	0x08009f45
 8009f88:	0800a0c7 	.word	0x0800a0c7
 8009f8c:	08009ff3 	.word	0x08009ff3
 8009f90:	0800a081 	.word	0x0800a081
 8009f94:	08009f45 	.word	0x08009f45
 8009f98:	08009f45 	.word	0x08009f45
 8009f9c:	0800a0e9 	.word	0x0800a0e9
 8009fa0:	08009f45 	.word	0x08009f45
 8009fa4:	08009ff3 	.word	0x08009ff3
 8009fa8:	08009f45 	.word	0x08009f45
 8009fac:	08009f45 	.word	0x08009f45
 8009fb0:	0800a089 	.word	0x0800a089
 8009fb4:	6833      	ldr	r3, [r6, #0]
 8009fb6:	1d1a      	adds	r2, r3, #4
 8009fb8:	681b      	ldr	r3, [r3, #0]
 8009fba:	6032      	str	r2, [r6, #0]
 8009fbc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8009fc0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8009fc4:	2301      	movs	r3, #1
 8009fc6:	e09c      	b.n	800a102 <_printf_i+0x1e6>
 8009fc8:	6833      	ldr	r3, [r6, #0]
 8009fca:	6820      	ldr	r0, [r4, #0]
 8009fcc:	1d19      	adds	r1, r3, #4
 8009fce:	6031      	str	r1, [r6, #0]
 8009fd0:	0606      	lsls	r6, r0, #24
 8009fd2:	d501      	bpl.n	8009fd8 <_printf_i+0xbc>
 8009fd4:	681d      	ldr	r5, [r3, #0]
 8009fd6:	e003      	b.n	8009fe0 <_printf_i+0xc4>
 8009fd8:	0645      	lsls	r5, r0, #25
 8009fda:	d5fb      	bpl.n	8009fd4 <_printf_i+0xb8>
 8009fdc:	f9b3 5000 	ldrsh.w	r5, [r3]
 8009fe0:	2d00      	cmp	r5, #0
 8009fe2:	da03      	bge.n	8009fec <_printf_i+0xd0>
 8009fe4:	232d      	movs	r3, #45	@ 0x2d
 8009fe6:	426d      	negs	r5, r5
 8009fe8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009fec:	4858      	ldr	r0, [pc, #352]	@ (800a150 <_printf_i+0x234>)
 8009fee:	230a      	movs	r3, #10
 8009ff0:	e011      	b.n	800a016 <_printf_i+0xfa>
 8009ff2:	6821      	ldr	r1, [r4, #0]
 8009ff4:	6833      	ldr	r3, [r6, #0]
 8009ff6:	0608      	lsls	r0, r1, #24
 8009ff8:	f853 5b04 	ldr.w	r5, [r3], #4
 8009ffc:	d402      	bmi.n	800a004 <_printf_i+0xe8>
 8009ffe:	0649      	lsls	r1, r1, #25
 800a000:	bf48      	it	mi
 800a002:	b2ad      	uxthmi	r5, r5
 800a004:	2f6f      	cmp	r7, #111	@ 0x6f
 800a006:	4852      	ldr	r0, [pc, #328]	@ (800a150 <_printf_i+0x234>)
 800a008:	6033      	str	r3, [r6, #0]
 800a00a:	bf14      	ite	ne
 800a00c:	230a      	movne	r3, #10
 800a00e:	2308      	moveq	r3, #8
 800a010:	2100      	movs	r1, #0
 800a012:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800a016:	6866      	ldr	r6, [r4, #4]
 800a018:	60a6      	str	r6, [r4, #8]
 800a01a:	2e00      	cmp	r6, #0
 800a01c:	db05      	blt.n	800a02a <_printf_i+0x10e>
 800a01e:	6821      	ldr	r1, [r4, #0]
 800a020:	432e      	orrs	r6, r5
 800a022:	f021 0104 	bic.w	r1, r1, #4
 800a026:	6021      	str	r1, [r4, #0]
 800a028:	d04b      	beq.n	800a0c2 <_printf_i+0x1a6>
 800a02a:	4616      	mov	r6, r2
 800a02c:	fbb5 f1f3 	udiv	r1, r5, r3
 800a030:	fb03 5711 	mls	r7, r3, r1, r5
 800a034:	5dc7      	ldrb	r7, [r0, r7]
 800a036:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800a03a:	462f      	mov	r7, r5
 800a03c:	42bb      	cmp	r3, r7
 800a03e:	460d      	mov	r5, r1
 800a040:	d9f4      	bls.n	800a02c <_printf_i+0x110>
 800a042:	2b08      	cmp	r3, #8
 800a044:	d10b      	bne.n	800a05e <_printf_i+0x142>
 800a046:	6823      	ldr	r3, [r4, #0]
 800a048:	07df      	lsls	r7, r3, #31
 800a04a:	d508      	bpl.n	800a05e <_printf_i+0x142>
 800a04c:	6923      	ldr	r3, [r4, #16]
 800a04e:	6861      	ldr	r1, [r4, #4]
 800a050:	4299      	cmp	r1, r3
 800a052:	bfde      	ittt	le
 800a054:	2330      	movle	r3, #48	@ 0x30
 800a056:	f806 3c01 	strble.w	r3, [r6, #-1]
 800a05a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800a05e:	1b92      	subs	r2, r2, r6
 800a060:	6122      	str	r2, [r4, #16]
 800a062:	f8cd a000 	str.w	sl, [sp]
 800a066:	464b      	mov	r3, r9
 800a068:	aa03      	add	r2, sp, #12
 800a06a:	4621      	mov	r1, r4
 800a06c:	4640      	mov	r0, r8
 800a06e:	f7ff fee7 	bl	8009e40 <_printf_common>
 800a072:	3001      	adds	r0, #1
 800a074:	d14a      	bne.n	800a10c <_printf_i+0x1f0>
 800a076:	f04f 30ff 	mov.w	r0, #4294967295
 800a07a:	b004      	add	sp, #16
 800a07c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a080:	6823      	ldr	r3, [r4, #0]
 800a082:	f043 0320 	orr.w	r3, r3, #32
 800a086:	6023      	str	r3, [r4, #0]
 800a088:	4832      	ldr	r0, [pc, #200]	@ (800a154 <_printf_i+0x238>)
 800a08a:	2778      	movs	r7, #120	@ 0x78
 800a08c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800a090:	6823      	ldr	r3, [r4, #0]
 800a092:	6831      	ldr	r1, [r6, #0]
 800a094:	061f      	lsls	r7, r3, #24
 800a096:	f851 5b04 	ldr.w	r5, [r1], #4
 800a09a:	d402      	bmi.n	800a0a2 <_printf_i+0x186>
 800a09c:	065f      	lsls	r7, r3, #25
 800a09e:	bf48      	it	mi
 800a0a0:	b2ad      	uxthmi	r5, r5
 800a0a2:	6031      	str	r1, [r6, #0]
 800a0a4:	07d9      	lsls	r1, r3, #31
 800a0a6:	bf44      	itt	mi
 800a0a8:	f043 0320 	orrmi.w	r3, r3, #32
 800a0ac:	6023      	strmi	r3, [r4, #0]
 800a0ae:	b11d      	cbz	r5, 800a0b8 <_printf_i+0x19c>
 800a0b0:	2310      	movs	r3, #16
 800a0b2:	e7ad      	b.n	800a010 <_printf_i+0xf4>
 800a0b4:	4826      	ldr	r0, [pc, #152]	@ (800a150 <_printf_i+0x234>)
 800a0b6:	e7e9      	b.n	800a08c <_printf_i+0x170>
 800a0b8:	6823      	ldr	r3, [r4, #0]
 800a0ba:	f023 0320 	bic.w	r3, r3, #32
 800a0be:	6023      	str	r3, [r4, #0]
 800a0c0:	e7f6      	b.n	800a0b0 <_printf_i+0x194>
 800a0c2:	4616      	mov	r6, r2
 800a0c4:	e7bd      	b.n	800a042 <_printf_i+0x126>
 800a0c6:	6833      	ldr	r3, [r6, #0]
 800a0c8:	6825      	ldr	r5, [r4, #0]
 800a0ca:	6961      	ldr	r1, [r4, #20]
 800a0cc:	1d18      	adds	r0, r3, #4
 800a0ce:	6030      	str	r0, [r6, #0]
 800a0d0:	062e      	lsls	r6, r5, #24
 800a0d2:	681b      	ldr	r3, [r3, #0]
 800a0d4:	d501      	bpl.n	800a0da <_printf_i+0x1be>
 800a0d6:	6019      	str	r1, [r3, #0]
 800a0d8:	e002      	b.n	800a0e0 <_printf_i+0x1c4>
 800a0da:	0668      	lsls	r0, r5, #25
 800a0dc:	d5fb      	bpl.n	800a0d6 <_printf_i+0x1ba>
 800a0de:	8019      	strh	r1, [r3, #0]
 800a0e0:	2300      	movs	r3, #0
 800a0e2:	6123      	str	r3, [r4, #16]
 800a0e4:	4616      	mov	r6, r2
 800a0e6:	e7bc      	b.n	800a062 <_printf_i+0x146>
 800a0e8:	6833      	ldr	r3, [r6, #0]
 800a0ea:	1d1a      	adds	r2, r3, #4
 800a0ec:	6032      	str	r2, [r6, #0]
 800a0ee:	681e      	ldr	r6, [r3, #0]
 800a0f0:	6862      	ldr	r2, [r4, #4]
 800a0f2:	2100      	movs	r1, #0
 800a0f4:	4630      	mov	r0, r6
 800a0f6:	f7f6 f86b 	bl	80001d0 <memchr>
 800a0fa:	b108      	cbz	r0, 800a100 <_printf_i+0x1e4>
 800a0fc:	1b80      	subs	r0, r0, r6
 800a0fe:	6060      	str	r0, [r4, #4]
 800a100:	6863      	ldr	r3, [r4, #4]
 800a102:	6123      	str	r3, [r4, #16]
 800a104:	2300      	movs	r3, #0
 800a106:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a10a:	e7aa      	b.n	800a062 <_printf_i+0x146>
 800a10c:	6923      	ldr	r3, [r4, #16]
 800a10e:	4632      	mov	r2, r6
 800a110:	4649      	mov	r1, r9
 800a112:	4640      	mov	r0, r8
 800a114:	47d0      	blx	sl
 800a116:	3001      	adds	r0, #1
 800a118:	d0ad      	beq.n	800a076 <_printf_i+0x15a>
 800a11a:	6823      	ldr	r3, [r4, #0]
 800a11c:	079b      	lsls	r3, r3, #30
 800a11e:	d413      	bmi.n	800a148 <_printf_i+0x22c>
 800a120:	68e0      	ldr	r0, [r4, #12]
 800a122:	9b03      	ldr	r3, [sp, #12]
 800a124:	4298      	cmp	r0, r3
 800a126:	bfb8      	it	lt
 800a128:	4618      	movlt	r0, r3
 800a12a:	e7a6      	b.n	800a07a <_printf_i+0x15e>
 800a12c:	2301      	movs	r3, #1
 800a12e:	4632      	mov	r2, r6
 800a130:	4649      	mov	r1, r9
 800a132:	4640      	mov	r0, r8
 800a134:	47d0      	blx	sl
 800a136:	3001      	adds	r0, #1
 800a138:	d09d      	beq.n	800a076 <_printf_i+0x15a>
 800a13a:	3501      	adds	r5, #1
 800a13c:	68e3      	ldr	r3, [r4, #12]
 800a13e:	9903      	ldr	r1, [sp, #12]
 800a140:	1a5b      	subs	r3, r3, r1
 800a142:	42ab      	cmp	r3, r5
 800a144:	dcf2      	bgt.n	800a12c <_printf_i+0x210>
 800a146:	e7eb      	b.n	800a120 <_printf_i+0x204>
 800a148:	2500      	movs	r5, #0
 800a14a:	f104 0619 	add.w	r6, r4, #25
 800a14e:	e7f5      	b.n	800a13c <_printf_i+0x220>
 800a150:	0800b019 	.word	0x0800b019
 800a154:	0800b02a 	.word	0x0800b02a

0800a158 <memmove>:
 800a158:	4288      	cmp	r0, r1
 800a15a:	b510      	push	{r4, lr}
 800a15c:	eb01 0402 	add.w	r4, r1, r2
 800a160:	d902      	bls.n	800a168 <memmove+0x10>
 800a162:	4284      	cmp	r4, r0
 800a164:	4623      	mov	r3, r4
 800a166:	d807      	bhi.n	800a178 <memmove+0x20>
 800a168:	1e43      	subs	r3, r0, #1
 800a16a:	42a1      	cmp	r1, r4
 800a16c:	d008      	beq.n	800a180 <memmove+0x28>
 800a16e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a172:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a176:	e7f8      	b.n	800a16a <memmove+0x12>
 800a178:	4402      	add	r2, r0
 800a17a:	4601      	mov	r1, r0
 800a17c:	428a      	cmp	r2, r1
 800a17e:	d100      	bne.n	800a182 <memmove+0x2a>
 800a180:	bd10      	pop	{r4, pc}
 800a182:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800a186:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800a18a:	e7f7      	b.n	800a17c <memmove+0x24>

0800a18c <_sbrk_r>:
 800a18c:	b538      	push	{r3, r4, r5, lr}
 800a18e:	4d06      	ldr	r5, [pc, #24]	@ (800a1a8 <_sbrk_r+0x1c>)
 800a190:	2300      	movs	r3, #0
 800a192:	4604      	mov	r4, r0
 800a194:	4608      	mov	r0, r1
 800a196:	602b      	str	r3, [r5, #0]
 800a198:	f7f9 f80a 	bl	80031b0 <_sbrk>
 800a19c:	1c43      	adds	r3, r0, #1
 800a19e:	d102      	bne.n	800a1a6 <_sbrk_r+0x1a>
 800a1a0:	682b      	ldr	r3, [r5, #0]
 800a1a2:	b103      	cbz	r3, 800a1a6 <_sbrk_r+0x1a>
 800a1a4:	6023      	str	r3, [r4, #0]
 800a1a6:	bd38      	pop	{r3, r4, r5, pc}
 800a1a8:	2000443c 	.word	0x2000443c

0800a1ac <_realloc_r>:
 800a1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1b0:	4607      	mov	r7, r0
 800a1b2:	4614      	mov	r4, r2
 800a1b4:	460d      	mov	r5, r1
 800a1b6:	b921      	cbnz	r1, 800a1c2 <_realloc_r+0x16>
 800a1b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a1bc:	4611      	mov	r1, r2
 800a1be:	f7ff bc5b 	b.w	8009a78 <_malloc_r>
 800a1c2:	b92a      	cbnz	r2, 800a1d0 <_realloc_r+0x24>
 800a1c4:	f7ff fbec 	bl	80099a0 <_free_r>
 800a1c8:	4625      	mov	r5, r4
 800a1ca:	4628      	mov	r0, r5
 800a1cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1d0:	f000 f81a 	bl	800a208 <_malloc_usable_size_r>
 800a1d4:	4284      	cmp	r4, r0
 800a1d6:	4606      	mov	r6, r0
 800a1d8:	d802      	bhi.n	800a1e0 <_realloc_r+0x34>
 800a1da:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800a1de:	d8f4      	bhi.n	800a1ca <_realloc_r+0x1e>
 800a1e0:	4621      	mov	r1, r4
 800a1e2:	4638      	mov	r0, r7
 800a1e4:	f7ff fc48 	bl	8009a78 <_malloc_r>
 800a1e8:	4680      	mov	r8, r0
 800a1ea:	b908      	cbnz	r0, 800a1f0 <_realloc_r+0x44>
 800a1ec:	4645      	mov	r5, r8
 800a1ee:	e7ec      	b.n	800a1ca <_realloc_r+0x1e>
 800a1f0:	42b4      	cmp	r4, r6
 800a1f2:	4622      	mov	r2, r4
 800a1f4:	4629      	mov	r1, r5
 800a1f6:	bf28      	it	cs
 800a1f8:	4632      	movcs	r2, r6
 800a1fa:	f7ff fbc3 	bl	8009984 <memcpy>
 800a1fe:	4629      	mov	r1, r5
 800a200:	4638      	mov	r0, r7
 800a202:	f7ff fbcd 	bl	80099a0 <_free_r>
 800a206:	e7f1      	b.n	800a1ec <_realloc_r+0x40>

0800a208 <_malloc_usable_size_r>:
 800a208:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a20c:	1f18      	subs	r0, r3, #4
 800a20e:	2b00      	cmp	r3, #0
 800a210:	bfbc      	itt	lt
 800a212:	580b      	ldrlt	r3, [r1, r0]
 800a214:	18c0      	addlt	r0, r0, r3
 800a216:	4770      	bx	lr

0800a218 <_init>:
 800a218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a21a:	bf00      	nop
 800a21c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a21e:	bc08      	pop	{r3}
 800a220:	469e      	mov	lr, r3
 800a222:	4770      	bx	lr

0800a224 <_fini>:
 800a224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a226:	bf00      	nop
 800a228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a22a:	bc08      	pop	{r3}
 800a22c:	469e      	mov	lr, r3
 800a22e:	4770      	bx	lr
